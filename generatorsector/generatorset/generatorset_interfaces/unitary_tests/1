open Make_test_v;;

testing "Contentfile_symbol_list_by_entity_proper_tag_provider_v with
   contentfile_symbol_list_by_entity_proper_tag_provider_u_geometryset_formula.ml";;

(* toplevel 
   #use "contentfile_symbol_list_by_entity_proper_tag_provider_u_geometryset_formula.ml";; 

*)

let nam_dos = "geometryset";;
let nam_cat = "formula";;
let nam_enp = "molecule_linear_diatomic";;

let sym_dos = Domainset_symbol_v.make nam_dos;;
let idx_dos = Domainset_symbol_v.list_index_of_domainset_symbol sym_dos;;
let soi_dos = Sole_index_v.make idx_dos [];;

let gss_dos = Generatorset_symbol_v.generatorset_symbol_of_domainset_symbol sym_dos;;
Generatorset_symbol_by_sole_index_production_provider_v.store soi_dos gss_dos;;
let tag_dos = Tag_v.make sym_dos soi_dos;;

let sym_cat = Category_symbol_v.make nam_cat;;
let idx_cat = Category_symbol_v.list_index_of_category_symbol sym_cat;;
let soi_cat = Sole_index_v.make idx_cat soi_dos;;
let gss_cat = Generatorset_symbol_v.generatorset_symbol_of_category_symbol sym_cat;;
Generatorset_symbol_by_sole_index_production_provider_v.store soi_cat gss_cat;;
let tag_cat = Tag_v.make sym_cat soi_cat;;

let sym_enp = Entity_proper_symbol_v.top_has_some_leaf_son nam_enp;;
let idx_enp = Entity_proper_symbol_v.hash_index_of_entity_proper_symbol sym_enp;;
let soi_enp = Sole_index_v.make idx_enp soi_cat;;
let gss_enp = Generatorset_symbol_v.generatorset_symbol_of_entity_proper_symbol sym_enp;;
Generatorset_symbol_by_sole_index_production_provider_v.store soi_enp gss_enp;;
let tag_enp = Tag_v.make sym_enp soi_enp;;

let sym_cof_l = Contentfile_symbol_list_by_entity_proper_tag_provider_v.provide tag_enp;;

test_number 1 (
tag_enp 
(* : Entity_proper_symbol_t.entity_proper_symbol Tag_t.tag *)
 =
  (Entity_proper_symbol_t.Entity_proper_top_symbol
    (Entity_proper_top_symbol_t.Top_has_some_leaf_son
      "molecule_linear_diatomic"),
   [4; 2; 7])
);;

test_number 2 (
tag_cof
=
Contentfile_symbol_t.Unconstrained
);;
