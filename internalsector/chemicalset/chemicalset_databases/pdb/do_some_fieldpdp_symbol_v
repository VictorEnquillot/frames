# set -x
Some=$1
some=`echo ${Some}|tr A-Z a-z`
SOME=`echo ${Some}|tr a-z A-Z`
Modu=$2
echo "some ${some} with ${Modu}"
filetml="${some}_fieldpdb_symbol_t.ml"
filevml="${some}_fieldpdb_symbol_v.ml"
filevmli="${some}_fieldpdb_symbol_v.mli"

grep '|' ${filetml} | sed -e 's/  | //' -e 's/-/ /' -e 's/(//' -e 's/)//' -e 's/\*//g' > ${some}_Fields

echo "cat ${some}_Fields"

cat ${some}_Fields | tr A-Z a-z > ${some}_fields
paste  ${some}_fields  ${some}_Fields > ${some}_fields_Fields

echo "(** {3 The functionalities for a Symbol for a Field in a ${SOME} Record of a Pdb file.} *)" > l

echo "" >> l
echo "module ${Modu}_t = ${Some}_fieldpdb_symbol_t" >> l
echo "" >> l

echo "let string_of_${some}_fieldpdb_symbol = function" >> l

awk '{print "  | MOD_t."$1" -> \""$1"\""}' ${some}_Fields | sed "s/MOD/${Modu}/" >> l
echo ";;" >> l

echo "" >> l
echo "(** {6 Abbreviating.} *)" >> l
echo "" >> l

awk '{print "let "$1" = MOD_t."$5";;"}' ${some}_fields_Fields | sed "s/MOD/${Modu}/" | grep -v empty >> l

echo "" >> l
echo "(** {6 Converting.} *)" >> l
echo "" >> l
echo "let name smb =" >> l 
echo "  Format.sprintf \"%s\" (string_of_${some}_fieldpdb_symbol smb)" >> l
echo ";;" >> l
echo "" >> l
echo "let print ppf smb =" >> l
echo "  Format.fprintf ppf \"%s\" (string_of_${some}_fieldpdb_symbol smb)" >> l
echo ";;" >> l

Type=${Some}_fieldpdb_symbol_t.${some}_fieldpdb_symbol

echo "(** {3 The functionalities for a Symbol for a Field in a ${SOME} Record of a Pdb file.} *)" > v

echo "" >> v
echo "(** {6 Abbreviating.} *)" >> v
echo "" >> v

awk '{print "val "$1" : TYPE;;"}' ${some}_fields_Fields | sed "s/TYPE/${Type}/" | grep -v empty >> v

echo "" >> v
echo "(** {6 Converting.} *)" >> v
echo "" >> v
echo "val string_of_${some}_fieldpdb_symbol :" >> v 
echo "  ${Type} ->" >> v 
echo "       string" >> v
echo ";;" >> v
echo "" >> v
echo "val name :" >> v 
echo "  ${Type} ->" >> v
echo "       string" >> v
echo ";;" >> v
echo "" >> v
echo "val print : Format.formatter ->" >> v
echo "  ${Type} ->" >> v
echo "       unit" >> v
echo ";;" >> v

cp l  ${filevml}
cp v  ${filevmli}

echo "cat ${filevml}"
echo "cat ${filevmli}"