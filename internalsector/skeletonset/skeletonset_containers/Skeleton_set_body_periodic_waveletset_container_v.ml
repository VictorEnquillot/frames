(** {3 Skeleton_set_body_periodic_waveletset_container_v} *)

(** {6 Documenting_for_container} *)

let documentation () = 
  [
   "Current : FSKE:Skeleton_set_body_periodic_waveletset_container_v";
   "Needs : BSKE:Skeleton_son_tag_list_by_skeleton_father_tag_provider_v";
   "Needs : BSKE:Skeleton_any_category_by_sole_index_extractor_v";
   "Needs : BSKE:Skeleton_fence_by_skeleton_tag_provider_v";
   "Needed-by: ";
   "Definition : a Builder (for an Entity of a Domain) is a son of its B-Tree i.e. Coerced Up";
   "Definition : a Builder of a fence Container is its own Tag Coerced Up";
   "Builder_tag : Skeleton_tag";
   "Definition : a Building is the same Datastructure as a Container but filled with Builders"; 
   "Definition : a Containee is a Builder expressed in the lowest subtype compatible with the Datastructure of the Container";
   "Definition : a Containee is an element of the Datastructure of the Container of an Entity";
   "Definition : the Containee Tag of a fence Container is its own Tag";
   "Containee_tag : Skeleton_set_fence_periodic_wavelet_tag";
   "Definition : the Fence is the Tag list (Coerced Up) of the Leaf Entities of the B-Tree of any Entity";
   "Fence : Skeleton_tag list";
   "What-is-it : Up_coercion of Container type as Symbol type up_coercion";
   "What-is-it : it is a Stem container of its own Tag Uno Tag";
   "Definition : a Bud type is a Stem type with only one constructor of string";
   "What-is-it : it is a container of a Bud Type as a List of Skeleton_set_fence_periodic_wavelet_tag";
   "Author : Fran√ßois Colonna 05 janvier 2017 at 15:30:41+01:00";
 ]
;;

let nam_mod = Management_v.current_module_name (documentation ());;

(** {6 Naming_for_container} *)

let name con_sbs =
  List_v.name 
    Skeleton_set_fence_periodic_wavelet_tag_v.name
    con_sbs
;;

let string_off con_sbs =
  List_v.name 
    Skeleton_set_fence_periodic_wavelet_tag_v.string_off
    con_sbs
;;

let longname con_sbs =
  List_v.name 
    Skeleton_set_fence_periodic_wavelet_tag_v.longname
    con_sbs
;;

let fullname con_sbs =
  List_v.name 
    Skeleton_set_fence_periodic_wavelet_tag_v.fullname
    con_sbs
;;

(** {6 Coercing Up Tag} *)

let coerce_up_of_tag tag_sbs =
  Tag_v.map_entity 
    Skeleton_symbol_v.skeleton_symbol_of_skeleton_set_body_periodic_waveletset_symbol 
    tag_sbs
;;

(** {6 Coercing Down Containee} *)

let containee_tag_off_builder_tag tag_ske =
  Tag_v.map_entity
    Skeleton_symbol_v.skeleton_set_fence_periodic_wavelet_symbol_off_skeleton_symbol
    tag_ske
;;

(** {6 Building as Builder Tag list} *)

let building_of_tag tag_sbs =
  let tag_ske = coerce_up_of_tag tag_sbs in
  Skeleton_son_tag_list_by_skeleton_father_tag_provider_v.provide tag_ske
;;

(** {6 Builder Tag Datastructures} *)

let builder_tag_list_of_tag tag_sbs =
  building_of_tag tag_sbs
;;

let builder_tag_tuple_of_tag tag_sbs =
  let tag_bui_l = builder_tag_list_of_tag tag_sbs in
  Tuple_v.tuple_of_list tag_bui_l
;;

(** {6 Container_of_tag : Containee Datastructure} *)

let container_of_tag tag_sbs =
  let bug = building_of_tag tag_sbs in
  List.map (* Coerce Down *)
    containee_tag_off_builder_tag
    bug
;;

(** {6 Containee Tag Datastructures} *)

let containee_tag_list_of_tag tag_sbs =
  container_of_tag tag_sbs
;;

let containee_tag_tuple tag_sbs =
  let tag_cne_l = containee_tag_list_of_tag tag_sbs in
  Tuple_v.tuple_of_list tag_cne_l
;;

(** {6 Fence list *)

let fence_as_list_of_tag tag_sbs =
  let tag_ske = coerce_up_of_tag tag_sbs in
  Skeleton_fence_by_skeleton_tag_provider_v.provide tag_ske
;;

let fence_as_tuple_of_tag tag_sbs =
  let tag_cne_t = containee_tag_tuple tag_sbs in
  Tuple_v.map
    Skeleton_set_fence_periodic_wavelet_container_v.fence_as_list_of_tag
    tag_cne_t
;;

let fence_as_tuple_list_of_tag tag_sbs =
  let tag_cne_l = containee_tag_list_of_tag tag_sbs in
  List_v.map
    Skeleton_set_fence_periodic_wavelet_container_v.fence_as_tuple_of_tag
    tag_cne_l
;;


(* generated by ./do_container_as_list_body_bud_1containee_v.sh skeleton_set_body_periodic_waveletset sbs skeleton_set_fence_periodic_wavelet spb *)
(* using ./template_container_as_list_body_bud_1containee_v.ml *)
(* Done on jeudi 5 janvier 2017, 19:38:47 (UTC+0100) *)
