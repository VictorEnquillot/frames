(** {3 Skeleton_container_v} *)

(** {6 Documenting_for_container} *)

let documentation () = 
  [
   "Current : FSKE:Skeleton_container_v";
   "Needs : FSKE:Skeleton_set_container_v";
   "Needs : FSKE:Skeleton_context_container_v";
   "Needs : DSKE:Skeleton_any_category_by_sole_index_extractor_v";
   "Needs : DSKE:Skeleton_fence_by_skeleton_tag_provider_v";
   "Needed-by: ";
   "Definition : a Builder (for an Entity of a Domain) is a son of its B-Tree i.e. Coerced Up";
   "Definition : a Builder of a fence Container is its own Tag Coerced Up";
   "Builder_tag : Skeleton_tag";
   "Definition : a Building is the same Datastructure as a Container but filled with Builders"; 
   "Definition : a Containee is a Builder expressed in the lowest subtype compatible with the Datastructure of the Container";
   "Definition : a Containee is an element of the Datastructure of the Container of an Entity";
   "Definition : the Containee Tag of a fence Container is its own Tag";
   "Containee_tag : Skeleton_set_fence_tag";
   "Definition : the Fence is the Tag list (Coerced Up) of the Leaf Entities of the B-Tree of any Entity";
   "Fence : Skeleton_tag list";
   "What-is-it : Up_coercion to Skeleton type from Skeleton_set and Skeleton_context";
   "What-is-it : it is a Body container as a List of Skeleton_set_fence Tag";
 ]
;;

let nam_mod = Management_v.current_module_name (documentation ());;

(** {6 Coercing Tag} *)

(** {9 Coercing Up Tag} *)

let coerce_up_tag tag_ske =
  tag_ske
;;

(** {9 Coercing Down Builder to Containee} *)

let containee_tag_off_builder_tag tag_ske =
  Tag_v.map_entity
    Skeleton_symbol_v.skeleton_set_fence_symbol_off_skeleton_symbol
    tag_ske
;;

(** {9 Coercing Up Containee_up to Builder} *)

let builder_tag_of_containee_tag tag_cee =
  Tag_v.map_entity 
    Skeleton_symbol_v.skeleton_symbol_of_skeleton_set_fence_symbol
    tag_cee
;;

(** {6 Builders} *)

(** {9 Builder Tag list} *)

let builder_tag_list_of_tag tag_ske =
  let (sym_ske, soi_ske) = tag_ske in
  match sym_ske with
  | Skeleton_symbol_t.Skeleton_set_symbol sym_sse ->
      let tag_sse = Tag_v.make sym_sse soi_ske in
      Skeleton_set_container_v.builder_tag_list_of_tag tag_sse

  | Skeleton_symbol_t.Skeleton_context_symbol sym_sco ->
      let tag_sco = Tag_v.make sym_sco soi_ske in
      Skeleton_context_container_v.builder_tag_list_of_tag tag_sco
;;

(** {9 Builder Tag Tuple} *)

let builder_tag_tuple tag_ske =
  let tag_bui_l = builder_tag_list_of_tag tag_ske in
  Tuple_v.tuple_of_list tag_bui_l
;;

(** {9 Building as Builder Tag tuple} *)

let building_of_tag tag_ske =
  builder_tag_list_of_tag tag_ske
;;

(** {6 Container} *)

let containee_tag_list_of_tag tag_ske =
  let tag_bui_l = builder_tag_list_of_tag tag_ske in
  List.map containee_tag_off_builder_tag tag_bui_l
;;

(** {6 Fence *)

let fence_as_list_of_tag tag_ske =
  let tag_ske = coerce_up_tag tag_ske in
  Skeleton_fence_by_skeleton_tag_provider_v.provide tag_ske
;;

let fence_as_tuple_of_tag tag_ske =
  let fen_l = fence_as_list_of_tag tag_ske in
  Tuple_v.tuple_of_list fen_l
;;

let fence_as_tuple_list_of_tag tag_ske =
  let fen_l = fence_as_list_of_tag tag_ske in
  Tuple_list_v.make fen_l
;;

(** {6 Naming_for_container} *)

let name = function
  | Skeleton_container_t.Skeleton_set_container con_sse ->
      (Skeleton_set_container_v.name con_sse)
        
  | Skeleton_container_t.Skeleton_context_container con_sco ->
      (Skeleton_context_container_v.name con_sco)
;;

let string_off = function
  | Skeleton_container_t.Skeleton_set_container con_sse ->
      (Skeleton_set_container_v.string_off con_sse)
        
  | Skeleton_container_t.Skeleton_context_container con_sco ->
      (Skeleton_context_container_v.string_off con_sco)
;;

let longname = function
  | Skeleton_container_t.Skeleton_set_container con_sse ->
      (Skeleton_set_container_v.longname con_sse)
        
  | Skeleton_container_t.Skeleton_context_container con_sco ->
      (Skeleton_context_container_v.longname con_sco)
;;

let fullname = function
  | Skeleton_container_t.Skeleton_set_container con_sse ->
      (Skeleton_set_container_v.fullname con_sse)
        
  | Skeleton_container_t.Skeleton_context_container con_sco ->
      (Skeleton_context_container_v.fullname con_sco)
;;


(* generated by ./do_container_as_list_top_stem_2sibling_1containee_v.sh skeleton ske set sse context sco skeleton_set_fence ssf *)
(* using ./template_container_as_list_top_stem_2sibling_1containee_v.ml *)
(* Done on jeudi 5 janvier 2017, 19:38:49 (UTC+0100) *)
