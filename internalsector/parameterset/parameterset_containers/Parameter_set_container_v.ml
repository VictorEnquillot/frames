(** {3 Parameter_set_container_v} *)

(** {6 Documenting_for_container} *)

let documentation () = 
  [
   "Current : FPAR:Parameter_set_container_v";
   "Needs : FPAR:Parameter_set_fence_tag_v";
   "Needs : FPAR:Parameter_set_body_container_v";
   "Needs : FPAR:Parameter_set_fence_container_v";
   "Needs : BPAR:Parameter_fence_by_parameter_tag_provider_v";
   "Needed-by: ";
   "What-is-it : Up_coercion of Container type as Symbol type up_coercion";
   "What-is-it : it is a Trunc container of Context sub-Types and thus a List of its Parameter_set_fence Tag";
   "Author : François Colonna 01 décembre 2016 at 11:13:02+01:00";
 ]
;;

let nam_mod = Management_v.current_module_name (documentation ());;

(** {6 Naming_for_container} *)

let name = function
  | Parameter_set_container_t.Parameter_set_body_container con_psb ->
      (Parameter_set_body_container_v.name con_psb)
        
  | Parameter_set_container_t.Parameter_set_fence_container con_psf ->
      (Parameter_set_fence_container_v.name con_psf)
;;

let string_off = function
  | Parameter_set_container_t.Parameter_set_body_container con_psb ->
      (Parameter_set_body_container_v.string_off con_psb)
        
  | Parameter_set_container_t.Parameter_set_fence_container con_psf ->
      (Parameter_set_fence_container_v.string_off con_psf)
;;

let longname = function
  | Parameter_set_container_t.Parameter_set_body_container con_psb ->
      (Parameter_set_body_container_v.longname con_psb)
        
  | Parameter_set_container_t.Parameter_set_fence_container con_psf ->
      (Parameter_set_fence_container_v.longname con_psf)
;;

let fullname = function
  | Parameter_set_container_t.Parameter_set_body_container con_psb ->
      (Parameter_set_body_container_v.fullname con_psb)
        
  | Parameter_set_container_t.Parameter_set_fence_container con_psf ->
      (Parameter_set_fence_container_v.fullname con_psf)
;;

(** {6 Coercing Tag} *)

(** {9 Coercing Up Tag} *)

let coerce_up_tag tag_pse =
  Tag_v.map_entity 
    Parameter_symbol_v.parameter_symbol_of_parameter_set_symbol 
    tag_pse
;;

(** {9 Coercing Down Builder to Containee} *)

let containee_up_tag_off_builder_tag tag_par =
  Tag_v.map_entity
    Parameter_symbol_v.parameter_set_fence_symbol_off_parameter_symbol
    tag_par
;;

(** {9 Coercing Up Containee_up to Builder} *)

let builder_tag_of_containee_up_tag tag_cnu =
  Tag_v.map_entity 
    Parameter_symbol_v.parameter_symbol_of_parameter_set_fence_symbol
    tag_cnu
;;

(** {6 Builders} *)

(** {9 Builder Tag list} *)

let builder_tag_list_of_tag tag_pse =
  let (sym_pse, soi_pse) = tag_pse in
  match sym_pse with
  | Parameter_set_symbol_t.Parameter_set_body_symbol sym_psb ->
      let tag_psb = Tag_v.make sym_psb soi_pse in
      Parameter_set_body_container_v.builder_tag_list_of_tag tag_psb

  | Parameter_set_symbol_t.Parameter_set_fence_symbol sym_psf ->
      let tag_psf = Tag_v.make sym_psf soi_pse in
      Parameter_set_fence_container_v.builder_tag_list_of_tag tag_psf
;;

(** {9 Builder Tag Tuple} *)

let builder_tag_tuple_of_tag tag_pse =
  let tag_bui_l = builder_tag_list_of_tag tag_pse in
  Tuple_v.tuple_of_list tag_bui_l
;;

(** {9 Building as Builder Tag tuple} *)

let building_of_tag tag_pse =
  builder_tag_list_of_tag tag_pse
;;

(** {6 Container} *)

let containee_up_tag_list tag_pse =
  let tag_bui_l = builder_tag_list_of_tag tag_pse in
  List.map containee_up_tag_off_builder_tag tag_bui_l
;;

(** {6 Fence *)

let fence_as_list_of_tag tag_pse =
  let tag_par = coerce_up_tag tag_pse in
  Parameter_fence_by_parameter_tag_provider_v.provide tag_par
;;

let fence_as_tuple_of_tag tag_pse =
  let fen_l = fence_as_list_of_tag tag_pse in
  Tuple_v.tuple_of_list fen_l
;;

let fence_as_tuple_list_of_tag tag_pse =
  let fen_l = fence_as_list_of_tag tag_pse in
  Tuple_list_v.make fen_l
;;

(* generated by ./do_container_as_list_context_trunc_2sibling_1containee_v.sh parameter_set pse parameter_set_body psb parameter_set_fence psf parameter_set_fence *)
(* using template_container_as_list_context_trunc_2sibling_1containee_v.ml *)
(* Done on mercredi 14 décembre 2016, 16:07:06 (UTC+0100) *)

