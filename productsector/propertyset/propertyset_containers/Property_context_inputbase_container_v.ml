(** {3 Property_context_inputbase_container_v} *)

(** {6 Documenting_for_container} *)

let documentation () = 
  [
   "Current : FPRO:Property_context_inputbase_container_v";
   "Needs : BPRO:Property_son_tag_list_by_property_father_tag_provider_v";
   "Needs : BPRO:Property_any_category_by_sole_index_extractor_v";
   "Needs : BPRO:Property_fence_by_property_tag_provider_v";
   "Needed-by: ";
   "Definition : a Builder (for an Entity of a Domain) is a son of its B-Tree i.e. Coerced Up";
   "Definition : a Builder of a fence Container is its own Tag Coerced Up";
   "Builder_tag : Property_tag";
   "Definition : a Building is the same Datastructure as a Container but filled with Builders"; 
   "Definition : a Containee is a Builder expressed in the lowest subtype compatible with the Datastructure of the Container";
   "Definition : a Containee is an element of the Datastructure of the Container of an Entity";
   "Definition : the Containee Tag of a fence Container is its own Tag";
   "Containee_tag : Property_context_inputbox_tag";
   "Definition : the Fence is the Tag list (Coerced Up) of the Leaf Entities of the B-Tree of any Entity";
   "Fence : Property_tag list";
   "What-is-it : Up_coercion of Container type as Symbol type up_coercion";
   "What-is-it : it is a Stem container of its own Tag Uno Tag";
   "Definition : a Bud type is a Stem type with only one constructor of string";
   "What-is-it : it is a container of a Bud Type as a List of Property_context_inputbox_tag";
   "Author : Fran√ßois Colonna 21 mai 2017 at 15:30:41+01:00";
 ]
;;

let nam_mod = Management_v.current_module_name (documentation ());;

(** {6 Naming_for_container} *)

let name con_pba =
  List_v.name 
    Property_context_inputbox_tag_v.name
    con_pba
;;

let string_off con_pba =
  List_v.name 
    Property_context_inputbox_tag_v.string_off
    con_pba
;;

let longname con_pba =
  List_v.name 
    Property_context_inputbox_tag_v.longname
    con_pba
;;

let fullname con_pba =
  List_v.name 
    Property_context_inputbox_tag_v.fullname
    con_pba
;;

(** {6 Coercing Up Tag} *)

let coerce_up_of_tag tag_pba =
  Tag_v.map_entity 
    Property_symbol_v.property_symbol_of_property_context_inputbase_symbol 
    tag_pba
;;

(** {6 Coercing Down Containee} *)

let containee_tag_off_builder_tag tag_pro =
  Tag_v.map_entity
    Property_symbol_v.property_context_inputbox_symbol_off_property_symbol
    tag_pro
;;

(** {6 Building as Builder Tag list} *)

let building_of_tag tag_pba =
  let tag_pro = coerce_up_of_tag tag_pba in
  Property_son_tag_list_by_property_father_tag_provider_v.provide tag_pro
;;

(** {6 Builder Tag Datastructures} *)

let builder_tag_list_of_tag tag_pba =
  building_of_tag tag_pba
;;

let builder_tag_tuple_of_tag tag_pba =
  let tag_bui_l = builder_tag_list_of_tag tag_pba in
  Tuple_v.tuple_of_list tag_bui_l
;;

(** {6 Container_of_tag : Containee Datastructure} *)

let container_of_tag tag_pba =
  let bug = building_of_tag tag_pba in
  List.map (* Coerce Down *)
    containee_tag_off_builder_tag
    bug
;;

(** {6 Containee Tag Datastructures} *)

let containee_tag_list_of_tag tag_pba =
  container_of_tag tag_pba
;;

let containee_tag_tuple tag_pba =
  let tag_cne_l = containee_tag_list_of_tag tag_pba in
  Tuple_v.tuple_of_list tag_cne_l
;;

(** {6 Fence list *)

let fence_as_list_of_tag tag_pba =
  let tag_pro = coerce_up_of_tag tag_pba in
  Property_fence_by_property_tag_provider_v.provide tag_pro
;;

let fence_as_tuple_of_tag tag_pba =
  let tag_cne_t = containee_tag_tuple tag_pba in
  Tuple_v.map
    Property_context_inputbox_container_v.fence_as_list_of_tag
    tag_cne_t
;;

let fence_as_tuple_list_of_tag tag_pba =
  let tag_cne_l = containee_tag_list_of_tag tag_pba in
  List_v.map
    Property_context_inputbox_container_v.fence_as_tuple_of_tag
    tag_cne_l
;;


(* generated by ./do_container_as_list_context_bud_1containee_v.sh property_context_inputbase pba property_context_inputbox pbo *)
(* using ./template_container_as_list_context_bud_1containee_v.ml *)
(* Done on dimanche 21 mai 2017, 11:00:04 (UTC+0200) *)
