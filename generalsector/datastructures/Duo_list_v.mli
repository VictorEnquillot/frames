val duo_count_of_duo_list : 'a list -> int;;
val duo_left_once_list_of_left_off_duo_list : 'a -> ('a * 'b) list -> ('a * 'b) list;;
val duo_list_of_left_off_duo_list : 'a -> 'a Duo_t.duo list -> 'a Duo_t.duo list;;
val duo_list_of_list : 'a list -> 'a Duo_t.duo list;;
val duo_of_left_off_duo_list : 'a -> 'a Duo_t.duo list -> 'a Duo_t.duo;;
val duo_of_right_off_duo_list : 'a -> 'a Duo_t.duo list -> 'a Duo_t.duo;;
val duo_right_once_list_of_right_off_duo_list : 'a -> ('b * 'a) list -> ('b * 'a) list;;
val filter_if_left : ('a -> bool) -> 'a Duo_t.duo list -> 'a Duo_t.duo list;;
val filter_if_right : ('a -> bool) -> 'a Duo_t.duo list -> 'a Duo_t.duo list;;
val find_if_left : ('a -> bool) -> 'a Duo_t.duo list -> 'a Duo_t.duo;;
val find_if_right : ('a -> bool) -> 'a Duo_t.duo list -> 'a Duo_t.duo;;
val first_left_n_right_list_of_duo_list : ('a * 'b) list -> 'a * 'b list;;
val from_one_int_indexed_list_of_list : 'a list -> ('a * int) list;;
val has_left : 'a -> 'a Duo_t.duo list -> bool;;
val has_right : 'a -> 'a Duo_t.duo list -> bool;;
val head_duo_off_duo_list : 'a list -> 'a;;
val head_left_off_duo_list : 'a Duo_t.duo list -> 'a;;
val head_right_off_duo_list : 'a Duo_t.duo list -> 'a;;
val index_indexed_list_of_list : 'a list -> ('a * Index_p.index) list;;
val int_indexed_list_of_list : 'a list -> ('a * int) list;;
val int_maxtomin_indexed_list_of_minimum_of_list : int -> 'a list -> ('a * int) list;;
val int_mintomax_indexed_list_of_minimum_of_list : int -> 'a list -> ('a * int) list;;
val iter : ('a -> unit) -> 'a Duo_t.duo list -> unit;;
val iter2 : ('a -> 'b -> unit) -> 'a Duo_t.duo list -> 'b Duo_t.duo list -> unit;;
val left_list_off_duo_list : 'a Duo_t.duo list -> 'a list;;
val left_of_right_off_duo_list : 'a -> 'a Duo_t.duo list -> 'a;;
val list_of_duo_list : 'a Duo_t.duo list -> 'a list;;
val list_duo_of_list : 'a list -> 'a list Duo_t.duo;;
val make : 'a list -> 'b list -> ('a * 'b) list;;
val map : ('a -> 'b) -> 'a Duo_t.duo list -> 'b Duo_t.duo list;;
val map2 : ('a -> 'b -> 'c) -> 'a Duo_t.duo list -> 'b Duo_t.duo list -> 'c Duo_t.duo list;;
val map_left : ('a -> 'a) -> 'a Duo_t.duo list -> 'a Duo_t.duo list;;
val map_right : ('a -> 'a) -> 'a Duo_t.duo list -> 'a Duo_t.duo list;;
val name : ('a -> string) -> 'a Duo_t.duo list -> string;;
val name_in_column : ('a -> string) -> 'a Duo_t.duo list -> string;;
val name_with_separator : ('a -> string) -> string -> 'a Duo_t.duo list -> string;;
val nth_duo_of_int_off_duo_list : int -> 'a list -> 'a;;
val nth_left_of_int_off_duo_list : int -> ('a * 'b) list -> 'a;;
val nth_right_of_int_off_duo_list : int -> ('a * 'b) list -> 'b;;
val once_left_n_right_list_list_of_duo_list : ('a * 'b) list -> ('a * 'b list) list;;
val ordinal_indexed_list_of_list : 'a list -> ('a * Ordinal_p.ordinal) list;;
val prepend : 'a -> 'a -> 'a Duo_t.duo list -> 'a Duo_t.duo list;;
val replace_right_of_right_of_left_off_duo_list : 'a -> 'b -> ('b * 'a) list -> ('b * 'a) list;;
val right_list_off_duo_list : 'a Duo_t.duo list -> 'a list;;
val right_of_left_off_duo_list : 'a -> 'a Duo_t.duo list -> 'a;;
val sort_by_left : ('a -> 'a -> int) -> ('a * 'b) list -> ('a * 'b) list;;
val sort_by_right : ('a -> 'a -> int) -> ('b * 'a) list -> ('b * 'a) list;;
val store : 'a -> 'a -> 'a Duo_t.duo list -> 'a Duo_t.duo list;;
val swap : 'a Duo_t.duo list -> 'a Duo_t.duo list;;
val top : 'a list -> 'a;;
val triangular_pair_list_of_list : 'a list -> ('a * 'a) list;;
val upduo_list_of_left_off_duo_list : 'a -> 'a Duo_t.duo list -> 'a Duo_t.duo list;;
val upduo_list_off_duo_list : 'a list -> 'a list;;
