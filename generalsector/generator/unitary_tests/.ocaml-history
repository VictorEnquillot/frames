#use "tgenerator_symbol_v.ml";; 
Gns_v.name smb_gen ;;
#use "titem__symbol_v.ml";; 
#use "tmodule_formula_v.ml";; 
Mds_v.name smb_mod;;
module Its_v = Item_symbol_v
module Mdf_v = Module_formula_v
module Mds_v = Module_symbol_v
let smb_abb = Its_v.abbreviating;;
let smb_mod = Mds_v.module_type;;
let frm = Mdf_v.retrieve smb_mod;;
Mds_v.name smb_mod;;
#use "tmodule_formula_v.ml";; 
frm_fun;;
#use "tmodule_formula_v.ml";; 
frm_fun;;
#use "tgenerator_v.ml";; 
Cslp_v.provide nam_ent;;
#use "tgenerator_v.ml";; 
#use "constructor_symbol_v.ml";; 
let str="atom";;
let fln = entity_filename_of_string str;;
( "do_" ^ str ^ "_constructor_set" );;
 #use "tgenerator_symbol_v.ml";; 
 #use "tgenerator_v.ml";; 
let smb_cns = Cns_v.make nam_ent;;
Cns_v.constructor_symbol_tree_of_constructor_symbol smb_cns
;;
 #use "tgenerator_v.ml";; 
Cns_v.constructor_symbol_tree_of_constructor_symbol smb_cns
;;
 #use "tgenerator_v.ml";; 
Cns_v.constructor_symbol_tree_of_constructor_symbol smb_cns;;
 #use "tgenerator_v.ml";; 
Cns_v.constructor_symbol_tree_of_constructor_symbol (Cns_v.make "zerotied");;
Cns_v.constructor_symbol_tree_of_constructor_symbol (Cns_v.make "atom_zerotied");;
Cns_v.constructor_symbol_tree_of_constructor_symbol (Cns_v.make "atom_fourtied");;
 #use "tgenerator_v.ml";; 
Cslp_v.provide;;
Cslp_v.provide "atom";;
 #use "tgenerator_v.ml";; 
Cns_v.name (Constructor_symbol_t.Bare "c_4s");;
 #use "tgenerator_v.ml";; 
Ivp_v.provide "default";;
Itf_v.retrieve_typing ;;
 #use "tgenerator_v.ml";; 
Itf_v.retrieve_typing;;
 #use "tgenerator_v.ml";; 
Itf_v.retrieve_typing;;
 #use "tgenerator_v.ml";; 
Itf_v.retrieve_typing;;
 #use "tmodule_formula_v.ml";; 
frm_fun;;
 #use "tmodule_formula_v.ml";; 
frm_fun;;
 #use "tmodule_formula_v.ml";; 
frm_fun;;
 #use "tgenerator_v.ml";; 
   #use "tmodule_formula_v.ml";; 
let frm_typ = Mdf_v.retrieve smb_mod;;
 #use "tgenerator_v.ml";; 
Itf_v.retrieve Its_v.typing
 #use "tgenerator_v.ml";; 
   #use "tmodule_formula_v.ml";; 
frm_typ;;
   #use "tmodule_formula_v.ml";; 
 #use "tgenerator_v.ml";; 
Itf_v.retrieve kyl_itm_typ;;
 #use "tgenerator_v.ml";; 
 kyl_cmc_tyd;;
 #use "tgenerator_v.ml";; 
Ccv_v.make kyl_cmc_tyd
;;
 #use "tgenerator_v.ml";; 
Ccv_v.make kyl_cmc_tyd
;;
let str = "type_definition atom_threetied";;
Scanf.bscanf ib "%s " (fun s->s);;
let ib = Scanf.Scanning.from_string str;;
Scanf.bscanf ib "%s " (fun s->s);;
Scanf.bscanf ib "%s %s" (fun s->s);;
Scanf.bscanf ib "%s %s" (fun s t -> s);;
Scanf.bscanf ib "%s %s" (fun s t -> (s,t));;
Scanf.bscanf ib "%s %s" (fun s t -> s,t);;
let ib = Scanf.Scanning.from_string str;;
Scanf.bscanf ib "%s %s" (fun s t -> s,t);;
let ib = Scanf.Scanning.from_string "abc";;
Scanf.bscanf ib "%s %s" (fun s t -> s,t);;
let ib = Scanf.Scanning.from_string "abc def";;
let (s, t) = Scanf.bscanf ib "%s " "%s %s";;
let (s, t) = Scanf.bscanf ib  "%s %s";;
let ib = Scanf.Scanning.from_string "abc def";;
Scanf.bscanf ib "%s %s" (fun s t -> s,t);;
let ib = Scanf.Scanning.from_string "abc def";;
let (s, t) = Scanf.bscanf ib "%s " "%s %s" (fun s t -> s,t) ;;
 let (s, t) = Scanf.bscanf ib "%s %s" (fun s t -> s,t) ;;
 #use "tgenerator_v.ml";; 
 #use "tcaml_code_value_v.ml";; 
Ccs_v.make "type_definition";;
 #use "tcaml_code_value_v.ml";; 
Ccs_v.make "type_definition";;
 #use "tcaml_code_value_v.ml";; 
Ccs_v.make "type_definition";;
 #use "tcaml_code_value_v.ml";; 
Ccs_v.make "type_definition";;
 #use "tcaml_code_value_v.ml";; 
Ccv_v.make kyl_cmc_tyd;;
 #use "tcaml_code_value_v.ml";; 
let kyl_cmc_tyc = Kyl_v.make "caml_code" "type_constructor" kyl_itm_typ;;
Ccv_v.make kyl_cmc_tyc
;;
 #use "tcaml_code_value_v.ml";; 
 #use "constructor_symbol_v.ml";; 
nam_ent;;
let nam_ent ="atom";;
constructor_symbol_son_list_of_entity_name nam_ent;;
let str_l = constructor_symbol_son_list_of_entity_name nam_ent;;
clean_list_read str_l;;
clean_list_read str_l;;let fln = entity_filename_of_entity_name nam_ent;;
let fln = entity_filename_of_entity_name nam_ent;;
let str_l = Fio_v.string_list_of_filename fln;;
 let nam_ent_l = clean_list_read str_l;;
let first_word s = 
    List.hd (Str_v.split_of_c ' ' s) ;;
 #use "tcaml_code_value_v.ml";; 
 kyl_cmc_tyc;;
let kyl_cmc = kyl_cmc_tyc;;
 let nam_cmc = Kyl_v.head_instance_symbol_name_off_key_list kyl_cmc;;
let kyl_itm = List.tl kyl_cmc ;;
 let smb_cmc = Ccs_v.make nam_cmc ;;
nam_cmc ;;
 #use "tentity_data_provider_v.ml";; 
 Cns_v.make "atom";;
  #use "tconstructor_symbol_v.ml";; 
let str = "atom";;
Enc_v.entitycategory_of_string str;;
  #use "tconstructor_symbol_v.ml";; 
  #use "constructor_symbol_v.ml";; 
 make_entitycategory_constructor str;;
Enc_v.entitycategory_of_string str;;
  let w_l = Str_v.split_of_c '_' str;;
  #use "tconstructor_data_v.ml";; 
  #use "constructor_data_v.ml";; 
  #use "tentity_data_v.ml";; 
  #use "tentity_data_provider_v.ml";; 
Edp_v.provide "atom";;
Edp_v.name dat_ent;;
End_v.name dat_ent;;
Edp_v.retrieve "atom";;
Edp_v.retrieve "atom_zerotied";;
  #use " #use "tcaml_code_value_v.ml";; _v.ml";; 
 #use "tcaml_code_value_v.ml";; 
enc;;
ecm;;
make_comment 6 "abbreviation";;
Ccv_v.make_comment 6 "abbreviation"
;;
 #use "tcaml_code_value_v.ml";; 
Ccv_v.make_title enc;;
 #use "tcaml_code_value_v.ml";; 
Ccv_v.make_title enc;;
 #use "tcaml_code_value_v.ml";; 
Ccv_v.make_title enc;;
Ccv_v.make_type_definition enc;;
Ccv_v.make_pipe_a enc;;
Ccv_v.make_pipe_a_of_a ecm;;
 #use "tcaml_code_value_v.ml";; 
Ccv_v.make_doublet "truc" "string" "ordinal";;
 #use "tcaml_code_value_v.ml";; 
Ccv_v.make_pipe_bare "truc";;
 #use "tcaml_code_value_v.ml";; 
Ccv_v.make_pipe_a_of_a ecm;;
Ecm_v.argument_abbreviation ecm;;
  #use "tentitycategorymodule_v.ml";; 
Ecm_v.argument_abbreviation ecm ;;
Enc_v.argument_abbreviation enc ;;
  #use "tentitycategorymodule_v.ml";; 
Enc_v.module_abbreviation enc ;;
Ens_v.module_abbreviation smb_ent;;
  #use "tentitycategorymodule_v.ml";; 
Enc_v.module_abbreviation enc ;;
  #use "tentitycategorymodule_v.ml";; 
Cts_v.argument_abbreviation smb_ent
  #use "tentitycategorymodule_v.ml";; 
Enc_v.module_abbreviation enc ;;
let smb_ent = entity_symbol_off_entitycategory enc;;
  #use "entitycategorymodule_v.ml";; 
  #use "entitycategory_v.ml";; 
let smb_ent = entity_symbol_off_entitycategory enc;;
let abb_ent = Ens_v.argument_abbreviation smb_ent;;
 let smb_cat = category_symbol_off_entitycategory enc;;
let abb_cat = Cts_v.argument_abbreviation smb_cat;;
 abb_cat ^ "_" ^ abb_ent;;
Enc_v.module_abbreviation enc ;;
let module_abbreviation enc =
  let smb_ent = entity_symbol_off_entitycategory enc in
  let smb_cat = category_symbol_off_entitycategory enc in
  let abb_ent = Ens_v.module_abbreviation smb_ent in 
  let abb_cat = Cts_v.module_abbreviation smb_cat in 
  String.capitalize ( abb_ent ^ abb_cat )
;;
module_abbreviation enc ;;
  #use "tentitycategorymodule_v.ml";; 
Enc_v.module_abbreviation enc ;;
  #use "tentitycategorymodule_v.ml";; 
Enc_v.module_abbreviation enc ;;
  #use "tentitycategorymodule_v.ml";; 
#use "tcaml_code_value_v.ml";; 
Ccv_v.make_doublet "truc" "string" "ordinal";;
#use "tcaml_code_value_v.ml";; 
Ccv_v.make_let_b_off_a_function ecm ecmb;;
#use "tcaml_code_value_v.ml";; 
Ccv_v.make_let_b_off_a_function ecm ecmb;;
#use "tcaml_code_value_v.ml";; 
Ccv_v.make_let_b_off_a_function ecm ecmb;;
Ens_v.argument_abbreviation (Ens_v.make "atom_zerotied");;
#use "tcaml_code_value_v.ml";; 
Ens_v.argument_abbreviation (Ens_v.make "atom_zerotied");;
#use "tcaml_code_value_v.ml";; 
Ccv_v.make_let_b_off_a_function ecm ecmb;;
#use "tcaml_code_value_v.ml";; 
Ccv_v.make_let_c_off_a_function ecm ecmb ecmc;;
#use "tcaml_code_value_v.ml";; 
Ccv_v.make_let_c_off_a_function ecm ecmb ecmc;;
Ccv_v.make_let_d_off_a_function ecm ecmc ecmd;;
Ccv_v.make_let_c_off_a_function ecm ecmc ecmd;;
#use "tcaml_code_value_v.ml";; 
Ccv_v.make_let_name_function ecma ecmb;;
#use "tcaml_code_value_v.ml";; 
Ccv_v.make_let_name_function ecma ecmb;;
#use "tcaml_code_value_v.ml";; 
Ccv_v.make_let_name_function ecma ecmb;;
#use "tcaml_code_value_v.ml";; 
Ccv_v.make_let_bt_thru_b_off_a_function ecm ecmc ecmbt;;
#use "tcaml_code_value_v.ml";;  #use "tconstructor_data_v.ml";; 
 #use "tconstructor_data_v.ml";; 
Cnd_v.string_tree_of_entityname nam_ent
;;
 #use "tconstructor_data_v.ml";; 
End_v.is_entityname_of_string "atom";;
 #use "tconstructor_data_v.ml";; 
End_v.is_entityname_of_string "atom";;
 #use "tconstructor_data_v.ml";; 
Cnd_v.string_tree_of_entityname nam_ent;;
 #use "constructor_data_v.ml";; 
  let dat_ent = End_v.entity_data_of_entityname nam_ent;;
string_tree_of_constructor_name "atom_zerotied";;
Cns_v.is_entityconstructor_symbol_of_entityname "atom_zerotied"
;;
let dat_ent = Edp_v.provide "atom";;
 #use "tconstructor_data_v.ml";; 
Cns_v.is_entityconstructor_symbol_of_entityname "atom_zerotied"
;;Cnd_v.string_tree_of_entityname nam_ent;;
Cnd_v.string_tree_of_entityname nam_ent;;
Cnd_v.string_tree_of_entityname "atom_fivetied";;
Cnd_v.string_tree_of_entityname "atom_zerotied";;
let str = "atom_zerotied";;
Cns_v.is_node_constructor_symbol_of_entityname str;;
module Cns_t = Constructor_symbol_t
module Cns_v = Constructor_symbol_v
module Cnd_t = Constructor_data_t
module End_v = Entity_data_v
module Edp_v = Entity_data_provider_v
module Lst_v = List_v
module Str_v = String_v
module Tre_v = Tree_v
let print_fatal_error nam_fun nam_fnd =
  Format.fprintf
    Format.err_formatter
    "@.@[<hov>%s.%s: --- Fatal Error ---\
     @.    expecting datastructure.\
     @.    found string >%s<.\
     @.    cure : check value module.@]@."
     nam_mod nam_fun nam_fnd;
     assert false;
;;
let nam_mod = "Constructor_symbol_v";;
string_tree_of_constructor_name str;;
 #use "constructor_data_v.ml";; 
string_tree_of_constructor_name str;;
Cns_v.is_node_constructor_symbol_of_entityname str;;
 #use "tconstructor_data_v.ml";; 
Cnd_v.string_tree_of_entityname nam_ent;;
 #use "tconstructor_data_v.ml";; 
Tre_v.node_and_depth_tree_of_tree (Cnd_v.string_tree_of_entityname nam_ent);;
Tre_v.node_and_depth_tree_of_tree (Cnd_v.string_tree_of_entityname "atom_zerotied_anion");;
 #use "tconstructor_symbol_v.ml";; 
 Cns_v.make str;;
 #use "tconstructor_symbol_v.ml";; 
Cns_v.constructor_symbol_tree_of_constructor_symbol (Cns_v.make "atom_fourtied");;
Cns_v.make "atom_zer";;
 #use "tconstructor_symbol_v.ml";; 
Cns_v.make "polyproline";;
 #use "tconstructor_symbol_v.ml";; 
Cns_v.make "polyproline";;
 #use "constructor_symbol_v.ml";; 
is_datastructure_constructor_symbol_of_entityname "polyglycine";;
is_datastructure_constructor_symbol_of_entityname "polyproline";;
is_entity_constructor_symbol_of_entityname "polyproline";;
make_datastructure_constructor_symbol "polyproline";;
is_node_constructor_symbol_of_entityname nam_ent;;
is_node_constructor_symbol_of_entityname "polyproline";;
let nam_ent = "polypriline";;
let nam_ent = "polyproline";;
let dat_ent = Edp_v.provide nam_ent;;
sscanf "a_b" "%s@_%s" (fun s1 s2 -> s1, s2);;
Scanf.sscanf "a_b" "%s@_%s" (fun s1 s2 -> s1, s2);;
Scanf.sscanf "ab cd  ef" "%s@_%s" (fun s1 s2 -> s1, s2);;
Scanf.sscanf "ab cd  ef" "%s %s" (fun s1 s2 -> s1, s2);;
Scanf.sscanf "ab    cd  ef" "%s %s" (fun s1 s2 -> s1, s2);;
Scanf.sscanf str "%s " (fun s -> s);;
Scanf.sscanf "abd def gh "%s " (fun s -> s);;
Scanf.sscanfabd def gh" "%s " (fun s -> s);;
Scanf.sscanf "aaaa cccc ff" "%s " (fun s -> s);;
 #use "tconstructor_symbol_v.ml";; 
 Cns_v.make "polyglycine";;
let nam_ent = "polyglycine";;
is_datastructure_constructor_symbol_of_entityname nam_ent;;
 #use "constructor_symbol_v.ml";; 
is_datastructure_constructor_symbol_of_entityname nam_ent;;
let dat_ent = Edp_v.provide nam_ent;;
 #use "tconstructor_symbol_v.ml";; 
 Cns_v.make "polyglycine";;
 #use "constructor_symbol_v.ml";; 
let nam_ent = "polyglycine";;
let dat_ent = Edp_v.provide nam_ent;;
 List.length dat_ent;;
let wrd = 
	    Scanf.sscanf (List.hd dat_ent) "%s " (fun s -> s)
	;;
make_datastructure_constructor_symbol wrd;;
 #use "tconstructor_symbol_v.ml";; 
 #use "constructor_symbol_v.ml";; 
let nam_ent = "polyglycine";;
let dat_ent = Edp_v.provide nam_ent;;
let wrd = 
	    Scanf.sscanf (List.hd dat_ent) "%s " (fun s -> s);;
 #use "tconstructor_symbol_v.ml";; 
 #use "constructor_symbol_v.ml";; 
let nam_ent = "polyglycine";;
let dat_ent = Edp_v.provide nam_ent;;
let wrd = 
	    Scanf.sscanf (List.hd dat_ent) "%s " (fun s -> s);;
make_datastructure_constructor_symbol wrd;;
datastructure_constructor_symbol_of_entityname nam_ent;;
 #use "tconstructor_data_v.ml";; 
Cns_v.make ""atom_zerotied_anion";;
Cns_v.make "atom_zerotied_anion";;
;;
Cns_v.make "atom_zerotied_anion";;
 #use "tconstructor_data_v.ml";; 
Cnd_v.string_node_and_depth_tree_of_entityname "atom_zerotied_anion";;
let n = "atom_zerotied_anion";;
Cns_v.make n;;
let nam_ent = "atom_zerotied_anion";;
 #use "constructor_data_v.ml";; 
 let ndd_t = string_node_and_depth_tree_of_entityname nam_ent ;;
Tre_v.map (fun (n,i) -> (Cns_v.make n, i)) ndd_t;;
 #use "tconstructor_data_v.ml";; 
let nam_ent = "protein";;
 let ndd_t = string_node_and_depth_tree_of_entityname nam_ent ;;
let dat_ent = Edp_v.provide nam_ent;;
 #use "tconstructor_symbol_v.ml";; 
Cns_v.make "atom";;
 Cns_v.make "atom_zerotied";;
Cns_v.is_datastructure_constructor_symbol_of_entityname nam_ent_plg;;
 #use "tconstructor_symbol_v.ml";; 
 Cns_v.make nam_ent_plg;;
 #use "tconstructor_symbol_v.ml";; 
Cns_v.make "atom";;
Cns_v.make "atom_zerotied";;
Cns_v.is_datastructure_node_constructor_symbol_of_constructorname nam_ent_plg;;
 Cns_v.make nam_ent_plg;;
 Cns_v.make "xxxx";;
 #use "tconstructor_symbol_v.ml";; 
 #use "tconstructor_data_v.ml";; 
Cnd_v.constructor_symbol_node_and_depth_tree_of_entityname "atom_zerotied_anion";;
Cnd_v.string_node_and_depth_tree_of_entityname "protein";;
Cnd_v.string_tree_of_entityname "polyglycine";;
Cnd_v.string_node_and_depth_tree_of_entityname "polyglycine";;
a a c
atom symbol type
#use "tconstructor_symbol_v.ml";; 
 Cns_v.make "atom_fivetied";;
#use "tconstructor_symbol_v.ml";; 
is_one_constructor_symbol_of_constructorname "atom_fivetied";;
let nam_ent =atom_fivetied";;
let nam_ent "atom_fivetied";;
let nam_ent = "atom_fivetied";;
Cns_v.is_one_constructor_symbol_of_constructorname "atom_fivetied";;
Cns_v.is_datastructure_one_constructor_symbol_of_constructorname nam_ent;;
let dat_ent = Edp_v.provide nam_ent ;;
#use "constructor_symbol_v.ml";; 
let dat_ent = Edp_v.provide nam_ent ;;
let str = List.hd dat_ent;;
is_barebasic_pure_constructor_symbol_of_constructorname str;;
is_basicnamed_one_constructor_symbol_of_constructorname str;;
#use "constructor_symbol_v.ml";; 
is_node_one_constructor_symbol_of_constructorname nam_ent;;
let is_node_one_constructor_symbol_of_constructorname nam_ent =
  if is_one_constructor_symbol_of_constructorname nam_ent
  then
    begin
      let str_son = List.hd dat_ent in
      is_bare_leaf_pure_constructor_symbol_of_constructorname str_son
    end
  else false
;;
is_node_one_constructor_symbol_of_constructorname nam_ent;;
#use "tconstructor_symbol_v.ml";; 
 Cns_v.make "atom_fivetied";;
#use "tconstructor_symbol_v.ml";; 
Cns_v.make "protein";;
#use "tconstructor_symbol_v.ml";; 
#use "tconstructor_data_v.ml";; 
#use "tconstructor_symbol_tree_v.ml";; 
Cst_v.make "atom_zerotied_anion";;
#use "tconstructor_symbol_tree_v.ml";; 
Cst_v.make "polyglycine";;
Cst_v.constructor_symbol_node_and_depth_tree_of_entityname "polyglycine";;
#use "tconstructor_symbol_translation_v.ml";; 
let smb_cnt_sev = Cns_v.make "atom_fivetied";;
#use "tconstructor_symbol_translation_v.ml";; 
#use "tcaml_line_value_v.ml";; 
Ccv_v.make_let_name_function ecma ecmb;;
#use "tcaml_line_value_v.ml";; 
Ccv_v.make_let_name_function ecma ecmb;;
#use "tcaml_line_value_v.ml";; 
Ccv_v.make_let_bt_thru_b_off_a_function ecm ecmc ecmbt;;
#use "tcaml_line_value_v.ml";; 
ecmbt
;;
#use "caml_line_value_v.ml";; 
let ecma = ecm;;
let ecmc = ecmbt;;
ecmb;;
 let encb = Ecm_v.entitycategory_off_entitycategorymodule ecmb;;
#use "caml_line_value_v.ml";; 
#use "tcaml_line_value_v.ml";; 
let ecma = (Ecm_v.entitycategorymodule_of_string_of_string_of_string "polypeptide" "symbol" "function");;
#use "tcaml_line_value_v.ml";; 
 Ens_v.make "polypeptide";;
 Ens_v.make "polypeptide";;let smb_ent_str = Ens_v.make "string";;
let smb_ent_str = Ens_v.make "string";;
let smb_ent_plr = Ens_v.make "polypeptide_regular";;
let ecma = Ecm_v.make smb_ent_plp smb_cat smb_modf;; 
let ecmb = Ecm_v.make smb_ent_plr smb_cat smb_modf;; 
let ecmbt = Ecm_v.make smb_str smb_cat smb_modf;; 
let ecma = Ecm_v.make smb_ent_plp smb_cat smb_modf;; 
let ecmb = Ecm_v.make smb_ent_plr smb_cat smb_modf;; 
let ecmbt = Ecm_v.make smb_ent_str smb_cat smb_modf;; 
tlet ecma = Ecm_v.make smb_ent_plp smb_cat smb_modf;; 
let ecma = Ecm_v.make smb_ent_plp smb_cat smb_modf;; 
let smb_ent_plp = Ens_v.make "polypeptide";;
#use "tcaml_line_value_v.ml";; 
Ccv_v.make_let_bt_thru_b_off_a_function ecma ecmb ecmbt;;
#use "tcaml_line_value_v.ml";; 
 #use "tmodule_formula_v.ml";; 
Its_v.name smb_abb ;;
 #use "tmodule_formula_v.ml";; 
frm_mod_fun ;;
 #use "tmodule_formula_v.ml";; 
frm_mod_fun ;;(
frm_mod_fun 
(* : Module_formula_t.module_formula *)
=
[
 Module_formula_t.Its_t.Heading_symbol;
 Module_formula_t.Its_t.Modules_symbol;
 Module_formula_t.Its_t.Displaying_symbol;
 Module_formula_t.Its_t.Extracting_symbol;
 Module_formula_t.Its_t.Querying_symbol;
 Module_formula_t.Its_t.Upgrading_symbol;
 Module_formula_t.Its_t.Including_symbol;
 Module_formula_t.Its_t.Ending_symbol
]
);;
(
frm_mod_fun 
(* : Module_formula_t.module_formula *)
=
[
 Module_formula_t.Its_t.Heading_symbol;
 Module_formula_t.Its_t.Modules_symbol;
 Module_formula_t.Its_t.Displaying_symbol;
 Module_formula_t.Its_t.Extracting_symbol;
 Module_formula_t.Its_t.Querying_symbol;
 Module_formula_t.Its_t.Upgrading_symbol;
 Module_formula_t.Its_t.Including_symbol;
 Module_formula_t.Its_t.Ending_symbol
]
);;
 #use "tmodule_formula_v.ml";; 
frm_mod_typ;;
 #use "tmodule_formula_v.ml";; 
  #use "tmodule_value_v.ml";; 
 *)Mdv_v.make kyl_mod_typ;;
Mdv_v.make kyl_mod_typ;;
let smb_mod = Kyl_v.module_symbol_off_key_list kyl_mod;;
  #use "module_value_v.ml";; 
let smb_mod = Kyl_v.module_symbol_off_key_list kyl_mod;;
let smb_mod = Kyl_v.module_symbol_off_key_list kyl_mod_typ;;
let kyl_mod = kyl_mod_typ;;
 let smb_cat = Kyl_v.category_symbol_off_key_list kyl_mod;;
let frm_mod = Mdf_v.retrieve (smb_mod, smb_cat) ;;
 let key_itm_l = List.map Its_v.key frm_mod;;
let kyl_itm_l = List.map (fun k -> k :: kyl_mod) key_itm_l ;;
 List.map Itp_v.provide kyl_itm_l ;;
  #use "titem_value_v.ml";; 
  #use "titem_formula_v.ml";; 
kyl_itm_typ ;;
  #use "titem_formula_v.ml";; 
Itf_v.retrieve kyl_itm_typ 
=;;
Itf_v.retrieve kyl_itm_typ ;;
  #use "titem_formula_v.ml";; 
Itf_v.retrieve kyl_itm_typ ;;
  #use "titem_formula_v.ml";; 
  #use "titem_value_v.ml";; 
  #use "tcaml_paragraph_value_v.ml";; 
let val_cpg_typ = Itv_v.make kyl_cpg_typ;;
  #use "tcaml_paragraph_value_v.ml";; 
let frm_cpg_typ = Cpf_v.retrieve kyl_cpg_typ;;
  #use "tcaml_paragraph_value_v.ml";; 
frm_cpg_typ;;
  #use "tcaml_paragraph_value_v.ml";; 
frm_mod_typ;;
  #use "tcaml_paragraph_value_v.ml";; 
let val_cpg_typ = Cpv_v.make kyl_cpg_typ;;
  #use "tcaml_line_value_v.ml";; 
Ccv_v.make_type_pipe_a_of_a_symbol ecma;;
Clv_v.make_type_definition enc;;
  #use "tcaml_line_value_v.ml";; 
Clv_v.make_type_definition enc;;
Clv_v.make_type_pipe_a_of_a_symbol ecma;;
  #use "caml_line_value_v.ml";; 
  let enca = Ecm_v.entitycategory_off_entitycategorymodule ecma;;
let meca = Ecm_v.module_abbreviation_n_entitycategory ecma;;
(String.capitalize (Enc_v.name enca));;
  #use "caml_line_value_v.ml";; 
  #use "tcaml_line_value_v.ml";; 
Clv_v.make_type_pipe_a_of_a_symbol ecma;;
 #use "ttype_definition_caml_paragraph_formula_v.ml";;  
frm_cpg_typ;;
 #use "ttype_definition_caml_paragraph_formula_v.ml";;  
frm_cpg_typ;;
 #use "ttype_definition_caml_paragraph_formula_v.ml";;  
 pth_cnt;;
 #use "ttype_definition_caml_paragraph_formula_v.ml";;  
pth_cnt_atm;;
 #use "ttype_definition_caml_paragraph_formula_v.ml";;  
pth_cnt_atm;;
 #use "ttype_definition_caml_paragraph_formula_v.ml";;  
frm_cli_typ;;
 #use "ttype_definition_caml_paragraph_formula_v.ml";;  
frm_cli_typ;;
 #use "ttype_definition_caml_paragraph_formula_v.ml";;  
frm_cli_typ;;
 #use "ttype_definition_caml_paragraph_formula_v.ml";;  
 #use "tlet_x_x_off_e_function_caml_paragraph_formula_v.ml";; 
#use "tlet_x_x_off_e_function_caml_line_formula_v.ml";; 
#use "tlet_x_off_e_function_caml_line_formula_v.ml";; 
Clf_v.retrieve pth_cnt_atw kyl_cli_fun;;
#use "ttype_definition_caml_line_formula_v.ml";; 
 Clf_v.retrieve;;
let frm_cpg_typ = Cpf_v.retrieve mrk_cnt_atm kyl_cpg_typ;;
frm_cli_typ;;
#use "ttype_definition_caml_line_formula_v.ml";; 
frm_cli_typ;;
#use "ttype_definition_caml_line_formula_v.ml";; 
 #use "tlet_x_off_e_function_caml_line_formula_v.ml";; 
 mrk_cnt_atw;;
pth_cnt_atw ;;
(
pth_cnt_atw 
(* : Constructor_path_t.constructor_path *)
=
[mrk_cnt_atw; rk_cnt_atm]
);;
frm_cli_fun;;
frm_cpg_fun;;
 #use "ttype_definition_caml_line_value_v.ml";; 
val_cli_typ ;;
 #use "tlet_x_off_e_function_caml_line_value_v.ml";;  
val_cli_fun;;
 #use "tlet_x_off_e_function_caml_line_value_v.ml";;  
pth_cnt_atsd ;;
mrk_cnt_atsd;;
 mrk_cnt_t;;
Cmt_v.constructor_path_of_constructor_marker_of_constructor_marker_tree mrk_cnt_atsd mrk_cnt_t;;
Cmt_v.constructor_path_of_constructor_marker_of_constructor_marker_tree mrk_cnt_atw mrk_cnt_t;;;
Tre_v.node_and_depth_list_of_node_predicate_of_tree ;;
Tre_v.node_and_depth_list_of_node_predicate_of_tree (fun (s,i) -> i=3) ;;
Tre_v.subtree_list_of_depth_of_tree 3  mrk_cnt_t;;
smb_cnt_atsd;;
Tre_v.subtree_of_predicate_of_tree (fun (s,i) -> s = smb_cnt_atsd) mrk_cnt_t;;
Tre_v.subtree_list_of_predicate_of_tree (fun (s,i) -> s = smb_cnt_atsd) mrk_cnt_t;;
smb_cnt_atsd;;
 #use "tlet_x_off_e_function_caml_line_value_v.ml";;  
smb_cnt_atsd;;
Tre_v.subtree_list_of_predicate_of_tree (fun (s,i) -> s = smb_cnt_atsd) mrk_cnt_t;;
let pth_cnt_atsd = Cmt_v.constructor_path_of_constructor_marker_of_constructor_marker_tree mrk_cnt_atsd mrk_cnt_t;;
 (
pth_cnt_atsd 
(* : Constructor_path_t.constructor_path *)
=
[mrk_cnt_atsd; mrk_cnt_atw; mrk_cnt_atm]
);;
Clf_v.retrieve pth_cnt_atsd kyl_cli_fun;;
 #use "tlet_x_off_e_function_caml_line_value_v.ml";;  
Clf_v.retrieve pth_cnt_atsd kyl_cli_fun;;
Clv_v.make pth_cnt_atsd kyl_cli_fun;;
 #use "tlet_x_off_e_function_caml_line_value_v.ml";;  
#use "tcaml_paragraph_formula_v.ml";; 
 #use "tlet_x_off_e_function_caml_paragraph_value_v.ml";; 
Cpf_v.retrieve mrk_cnt_atw kyl_cpg_fun;;
 #use "tlet_x_off_e_function_caml_paragraph_value_v.ml";; 
Cpv_v.make pth_cnt_atw kyl_cpg_fun;;
 #use "tlet_x_off_e_function_caml_paragraph_value_v.ml";; 
Cpv_v.make pth_cnt_atw kyl_cpg_fun;;
 #use "tlet_x_off_e_function_caml_paragraph_value_v.ml";; 
 #use "tlet_x_off_e_function_caml_paragraph_value_v.ml";; Cpf_v.retrieve mrk_cnt_atw kyl_cpg_fun;;
Cpf_v.retrieve mrk_cnt_atw kyl_cpg_fun;;
 #use "tlet_x_off_e_function_caml_paragraph_value_v.ml";; 
Cpv_v.make pth_cnt_atw kyl_cpg_fun;;
 #use "tlet_x_off_e_function_caml_paragraph_value_v.ml";; 
Cpv_v.make pth_cnt_atw kyl_cpg_fun;;
mrk_cnt_atw;;
 #use "tlet_x_off_e_function_caml_paragraph_value_v.ml";; 
Cpf_v.retrieve mrk_cnt_atsd kyl_cpg_fun;;
Cpv_v.make pth_cnt_atw kyl_cpg_fun;;
Cpf_v.retrieve mrk_cnt_atsd kyl_cpg_fun;;
Cpv_v.make pth_cnt_atsd kyl_cpg_fun;;
 #use "tlet_x_off_e_function_caml_line_value_v.ml";; 
 #use "tlet_x_off_e_function_caml_paragraph_value_v.ml";; 
Cpv_v.make pth_cnt_atsd kyl_cpg_fun;;
Cpf_v.retrieve mrk_cnt_atsd kyl_cpg_fun;;
 #use "tlet_x_off_e_function_caml_line_value_v.ml";; 
 #use "tlet_x_off_e_function_caml_paragraph_value_v.ml";; 
Cpf_v.retrieve mrk_cnt_atsd kyl_cpg_fun;;
 #use "tlet_x_off_e_function_caml_line_value_v.ml";; 
Clv_v.make pth_cnt_atsd kyl_cli_fpa;;
 #use "caml_line_value_v.ml";; 
let pth_cnt=pth_cnt_atsd;;
let kyl_cli=kyl_cli_fpa;;
let smb_ent = Kyl_v.entity_symbol_off_key_list kyl_cli;;
let smb_cat = Kyl_v.category_symbol_off_key_list kyl_cli;;
 let smb_mod = Kyl_v.module_symbol_off_key_list kyl_cli;;
let ecme = Ecm_v.make smb_ent smb_cat smb_mod;;
let (smb_cnx, dep_cnx) = List.hd pth_cnt;;
let smb_enx = 
    Cns_v.entity_symbol_off_constructor_symbol smb_cnx;;
let ecmx = Ecm_v.make smb_enx smb_cat smb_mod;;
let nam_cli = Kyl_v.value_name_of_key_name_off_key_list "caml_line" kyl_cli;;
	make_function_pipe_c_s_arrow ecmx ecme;;
let mode = Ecm_v.module_abbreviation_n_entitycategory ecme;;
 let moda = Ecm_v.module_abbreviation ecme;;
let encx = Ecm_v.entitycategory_off_entitycategorymodule ecmx ;;
 let argx = Ecm_v.argument_abbreviation ecmx;;
Format.sprintf "  | %s.%s %s ->" 
   moda (String.capitalize (Enc_v.name encx)) argx ;;
 #use "tlet_x_off_e_function_caml_line_value_v.ml";; 
Clv_v.make pth_cnt_atsd kyl_cli_fpa;;
 #use "tlet_x_off_e_function_caml_line_value_v.ml";; 
 #use "tlet_x_off_e_function_caml_paragraph_formula_v.ml";; 
frm_cpg_fun;;
 #use "tlet_x_off_e_function_caml_paragraph_formula_v.ml";; 
mrk_cnt_atw;;
 #use "tlet_x_off_e_function_caml_paragraph_formula_v.ml";; 
 #use "tlet_x_off_e_argument_caml_paragraph_formula_v.ml";; 
frm_cpg_foa;;
 #use "tlet_x_off_e_argument_caml_paragraph_formula_v.ml";; 
frm_cpg_foa;;
 #use "tlet_x_off_e_argument_caml_paragraph_value_v.ml";; 
Cpf_v.retrieve mrk_cnt_atw kyl_cpg_foa;;
Cpv_v.make pth_cnt_atw kyl_cpg_foa;;
Cpf_v.retrieve mrk_cnt_atsd kyl_cpg_foa;;
 #use "tlet_x_off_e_argument_caml_paragraph_value_v.ml";; 
 #use "tlet_x_off_e_argument_caml_paragraph_value_v.ml";; Cpv_v.make pth_cnt_atw kyl_cpg_foa;;
Cpv_v.make pth_cnt_atw kyl_cpg_foa;;
#use "tlet_x_off_e_function_caml_line_formula_v.ml";; 
Clf_v.retrieve pth_cnt_atw kyl_cli_fun;;
#use "tlet_x_off_e_function_caml_line_formula_v.ml";; 
#use "tlet_x_off_e_function_caml_line_value_v.ml";; 
let pth_cnt = pth_cnt_atw;;
let kyl_cli=kyl_cli_lxe;;
#use "caml_line_value_v.ml";; 
#use "tlet_x_off_e_function_caml_line_value_v.ml";; 
   
   ;;
#use "tlet_x_off_e_argument_caml_paragraph_value_v.ml";; 
Cpv_v.make pth_cnt_atw kyl_cpg_foa;;
Cpf_v.retrieve mrk_cnt_atw kyl_cpg_foa;;
#use "tlet_x_off_e_argument_caml_paragraph_value_v.ml";; 
Cpf_v.retrieve mrk_cnt_atw kyl_cpg_foa;;
#use "tlet_x_off_e_argument_caml_paragraph_value_v.ml";; 
#use "tlet_x_off_e_argument_caml_paragraph_formula_v.ml";; 
frm_cpg_foa;;
#use "tlet_x_off_e_argument_caml_paragraph_formula_v.ml";; 
#use "tlet_x_off_e_argument_caml_paragraph_value_v.ml";; 
let pth_cnt=pth_cnt_atw;;
let kyl_cpg=kyl_cpg_foa;;
#use "caml_paragraph_value_v.ml";; 
 #use "tlet_x_off_e_argument_caml_line_formula_v.ml";; 
#use "tlet_x_off_e_argument_caml_paragraph_value_v.ml";; 
	let (smb_cnu, dep_cnu) = 
	  Clf_v.up_constructor_marker_of_constructor_path pth_cnt ;;
 #use "tlet_x_off_e_argument_caml_line_value_v.ml";; 
Clv_v.make_x_off_e_e ecmx ecmf;;
 #use "tlet_x_off_e_argument_caml_line_value_v.ml";; 
Clv_v.make_x_off_e_e ecmx ecmf;;
 #use "tlet_x_off_e_argument_caml_line_value_v.ml";; 
 #use "tlet_x_off_e_argument_caml_paragraph_value_v.ml";; 
Cpf_v.retrieve mrk_cnt_atw kyl_cpg_foa;;
#use "tlet_x_off_e_argument_caml_paragraph_value_v.ml";; 
Cpv_v.make pth_cnt_atsd kyl_cpg_foa;;
#use "tlet_x_off_e_argument_caml_paragraph_value_v.ml";; 
Cpv_v.make pth_cnt_atsd kyl_cpg_foa;;
#use "tlet_x_off_e_argument_caml_paragraph_value_v.ml";; 
Cpv_v.make pth_cnt_atsd kyl_cpg_foa;;
#use "tlet_x_off_e_argument_caml_paragraph_value_v.ml";; 
Cpv_v.make pth_cnt_atsd kyl_cpg_foa;;
#use "tlet_x_off_e_argument_caml_paragraph_value_v.ml";; 
Cpv_v.make pth_cnt_atsd kyl_cpg_foa;;
#use "tlet_x_off_e_argument_caml_paragraph_value_v.ml";; 
 #use "tlet_x_off_e_argument_caml_line_value_v.ml";; 
Clv_v.make_x_off_e_e ecmx ecmf;;
 #use "tlet_x_off_e_argument_caml_line_value_v.ml";; 
Clv_v.make_x_off_e_e dep_cnt_atsd ecmx ecmf
;;
let rec string_list_shift_of_string_list str_l =
  let s_r = List.rev str_l in
  match s_r with
  | [] -> ""
  | h::t -> h^" ":: (string_list_shift_of_string_list t)
;;
let rec string_list_shift_of_string_list str_l =
  let s_r = List.rev str_l in
  match s_r with
  | [] -> ""
  | h::t -> (h^" "):: (string_list_shift_of_string_list t)
;;
let rec string_list_shift_of_string_list str_l =
  let s_r = List.rev str_l in
  match s_r with
  | [] -> []
  | h::t -> (h^" "):: (string_list_shift_of_string_list t)
;;
string_list_shift_of_string_list ["a"; "b"];;
string_list_shift_of_string_list ["a"; "b"; "c"];;
let rec string_list_shift_of_string_list str_l =
  match str_l with
  | [] -> []
  | h::t -> (h^" "):: (string_list_shift_of_string_list t)
;;
string_list_shift_of_string_list ["a"; "b"; "c"];;
let rec string_list_shift_of_string_list str_l =
  let apply l s =
    match l with
  | [] -> []
  | h::t -> h:: (string_list_shift_of_string_list t (s^" "))
  in
  apply str_l " "
;;
let rec string_list_shift_of_string_list str_l =
  let rec apply l s =
    match l with
  | [] -> []
  | h::t -> h:: (apply t (s^" "))
  in
  apply str_l " "
;;
string_list_shift_of_string_list ["a"; "b"; "c"];;
let rec string_list_shift_of_string_list str_l =
  let rec apply l s =
    match l with
  | [] -> []
  | h::t -> (h^s):: (apply t (s^" "))
  in
  apply str_l " "
;;
string_list_shift_of_string_list ["a"; "b"; "c"];;
let rec string_list_shift_of_string_list str_l =
  let rec apply l s =
    match l with
  | [] -> []
  | h::t -> (h^s):: (apply t (s^" "))
  in
  apply str_l ""
;;
string_list_shift_of_string_list ["a"; "b"; "c"];;
let rec string_list_shift_of_string_list str_l =
  let rec apply l s =
    match l with
  | [] -> []
  | h::t -> (h^s):: (apply t (s^"  "))
  in
  apply str_l ""
;;
string_list_shift_of_string_list ["a"; "b"; "c"];;
let rec string_list_shift_of_string_list str_l =
  let rec apply l s =
    match l with
  | [] -> []
  | h::t -> (s^h):: (apply t (s^"  "))
  in
  apply str_l ""
;;
string_list_shift_of_string_list ["a"; "b"; "c"];;
 #use "tlet_x_off_e_argument_caml_line_value_v.ml";; 
 #use "tlet_x_off_e_argument_caml_paragraph_value_v.ml";; 
Cpv_v.make pth_cnt_atsd kyl_cpg_foa;;
 #use "tlet_x_off_e_argument_caml_paragraph_value_v.ml";; 
 #use "tlet_se_off_e_function_caml_paragraph_value_v.ml";; 
  #use "tlet_x_off_e_function_caml_paragraph_value_v.ml";; 
 *)Cpv_v.make pth_cnt_atw kyl_cpg_fun;;
Cpv_v.make pth_cnt_atw kyl_cpg_fun;;
  #use "tlet_x_off_e_function_caml_paragraph_value_v.ml";; 
Cpv_v.make pth_cnt_atw kyl_cpg_fun;;
#use "tlet_x_off_e_argument_caml_paragraph_formula_v.ml";; 
frm_cpg_foa;;
frm_cpg_faf;;
 #use "tlet_se_off_e_function_caml_paragraph_formula_v.ml";; 
   #use "tlet_x_off_e_function_caml_paragraph_formula_v.ml";; 
frm_cpg_faf;;
   #use "tlet_x_off_e_function_caml_paragraph_formula_v.ml";; 
frm_cpg_faf;;
 #use "tlet_x_off_e_function_caml_paragraph_value_v.ml";; 
Cpf_v.retrieve mrk_cnt_atw kyl_cpg_fun;;
 #use "tlet_x_off_e_function_caml_paragraph_value_v.ml";; 
 #use "ttype_definition_caml_line_formula_v.ml";; 
frm_cpg_typ;;
 #use "ttype_definition_caml_line_formula_v.ml";; 
#use "ttype_definition_caml_paragraph_formula_v.ml";; 
frm_cpg_typ;;
#use "ttype_definition_caml_paragraph_formula_v.ml";; 
frm_cpg_typ;;
  #use "tlet_x_off_e_argument_caml_paragraph_formula_v.ml";; 
frm_cpg_foa;;
  #use "tlet_x_off_e_argument_caml_paragraph_formula_v.ml";; 
 #use "tlet_x_off_e_argument_caml_paragraph_value_v.ml";; 
Cpv_v.make pth_cnt_atsd kyl_cpg_foa;;
#use "ttype_definition_caml_line_formula_v.ml";; 
frm_cli_typ;;
#use "ttype_definition_caml_line_formula_v.ml";; 
#use "ttype_definition_caml_line_formula_v.ml";; frm_cpg_typ;;
frm_cpg_typ;;
#use "ttype_definition_caml_line_formula_v.ml";; frm_cpg_typ;;
#use "ttype_definition_caml_line_value_v.ml";; frm_cpg_typ;;
frm_cli_pee;;
#use "ttype_definition_caml_line_value_v.ml";; frm_cpg_typ;;
frm_cli_pee;;
val_cli_pee;;
#use "ttype_definition_caml_line_value_v.ml";; frm_cpg_typ;;
frm_cli_pee;;
#use "ttype_definition_caml_line_value_v.ml";; frm_cpg_typ;;
frm_cli_pee;;
val_cli_pee;;
let val_cli_pee = Clv_v.make pth_cnt_atw kyl_cli_pee;;
#use "ttype_definition_caml_line_value_v.ml";; frm_cpg_typ;;
val_cli_pee
#use "ttype_definition_caml_paragraph_value_v.ml";; 
val_cpg_typ;;
#use "ttype_definition_caml_paragraph_value_v.ml";; 
val_cpg_typ;;
#use "caml_paragraph_value_v.ml";; 
let smb_ent=smb_ent_typ;;
let smb_ent=smb_ent;;
let smb_cnt_l = 
    Cst_v.constructor_symbol_list_of_entity_symbol smb_ent;;
#use "caml_paragraph_formula_v.ml";; 
let smb_cnt_l = Cst_v.constructor_symbol_list_of_entity_symbol smb_ent;;
let smb_cls_l = List.map Tcc_v.translate smb_cnt_l;;
#use "ttype_definition_caml_paragraph_value_v.ml";; 
pth_cnt_atm ;;
 (
pth_cnt_atm 
(* : Constructor_path_t.constructor_path *)
=
[mrk_cnt_atm]
);;
 #use "ttype_definition_caml_paragraph_formula_v.ml";; 
frm_cpg_typ;;
 #use "ttype_definition_caml_paragraph_formula_v.ml";; 
 #use "ttype_definition_caml_line_value_v.ml";; 
#use "ttype_definition_caml_line_value_v.ml";; 
   #use "ttype_definition_caml_paragraph_value_v.ml";; 
val_cpg_typ;;
   #use "caml_paragraph_value_v.ml";; 
let pth_cnt=pth_cnt_typ;;
let pth_cnt=pth_cnt_atm;;
let kyl_cpg=kyl_cpg_typ;;
smb_cli_l=[
   Caml_paragraph_formula_t.Cls_t.Type_definition_symbol;
   Caml_paragraph_formula_t.Cls_t.Type_pipe_se_of_se_symbol;
];;
let smb_cli_l= [
   Caml_paragraph_formula_t.Cls_t.Type_definition_symbol;
   Caml_paragraph_formula_t.Cls_t.Type_pipe_se_of_se_symbol;
];;
let kyl_cli_l =
    List.map (fun s -> ("caml_line", Cls_v.name s) :: kyl_cpg) 
      smb_cli_l;;
 List.map (Clv_v.make pth_cnt) kyl_cli_l;;
let frm_cli = Clf_v.retrieve pth_cnt kyl_cli ;;
let frm_cli = Clf_v.retrieve pth_cnt (List.hd kyl_cli_l) ;;
 let (smb_cnx, dep_cnx) = List.hd pth_cnt;;
q
 #use "tlet_x_off_e_argument_caml_paragraph_value_v.ml";; 
kyl_cpg_foa;;
 #use "tlet_x_off_e_argument_caml_paragraph_value_v.ml";; 
 #use "tlet_x_off_e_argument_caml_paragraph_formula_v.ml";; 
mrk_cnt_atsd;;
Cpf_v.retrieve mrk_cnt_atsd kyl_cpg_foa;;
 #use "tlet_x_off_e_argument_caml_paragraph_value_v.ml";; 
Cpv_v.make pth_cnt_atsd kyl_cpg_foa;;
 #use "caml_paragraph_value_v.ml";; 
let pth_cnt=pth_cnt_atsd;;
let kyl_cpg_foa=kyl_cpg;;
let kyl_cpg=kyl_cpg_foa;;
 let mrk_cnt = List.hd pth_cnt;;
let frm_cpg = Cpf_v.retrieve mrk_cnt kyl_cpg;;
let smb_cli_l=[Caml_paragraph_formula_t.Cls_t.Let_sse_off_e_e_symbol;
    Caml_paragraph_formula_t.Cls_t.Let_f_f_off_e_e_in_symbol;
    Caml_paragraph_formula_t.Cls_t.Sse_off_f_f_symbol]
;;
let val_cli_l = 
    make_caml_line_non_indented_list pth_cnt kyl_cpg smb_cli_l ;;
  
 #use "tconstructor_symbol_v.ml";;
Cns_v.entity_symbol_of_constructor_symbol (Cns_v.make "atom");;
 #use "tconstructor_symbol_v.ml";;
Cns_v.entity_symbol_off_constructor_symbol (Cns_v.make "atom");;
 #use "tconstructor_symbol_v.ml";;
Cns_v.make "n_sd";;
 #use "tlet_x_off_e_argument_caml_paragraph_value_v.ml";; 
Cnf_v.caml_line_symbol_list_off_caml_paragraph_formula  (Cpf_v.retrieve mrk_cnt_atsd kyl_cpg_foa);;
Cpf_v.caml_line_symbol_list_off_caml_paragraph_formula  (Cpf_v.retrieve mrk_cnt_atsd kyl_cpg_foa);;
 #use "tlet_x_off_e_argument_caml_paragraph_value_v.ml";; 
Cpf_v.caml_line_symbol_list_off_caml_paragraph_formula  (Cpf_v.retrieve mrk_cnt_atsd kyl_cpg_foa);;
 #use "tconstructor_symbol_tree_v.ml";; 
Cst_v.constructor_symbol_list_of_constructor_symbol (Cns_v.make "atom_zerotied_anion");;
 #use "tconstructor_symbol_tree_v.ml";; 
 #use "tlet_x_off_e_argument_caml_paragraph_value_v.ml";; 
Cpv_v.path_constructor_son_list pth_cnt_atsd;;
pth_cnt_atsd ;;
Cst_v.constructor_symbol_son_list_of_constructor_symbol smb_cnt_atsd;;
 #use "tlet_x_off_e_argument_caml_paragraph_value_v.ml";; 
Cst_v.constructor_symbol_son_list_of_constructor_symbol smb_cnt_atsd;;
let smb_cli_l = Cpf_v.caml_line_symbol_list_off_caml_paragraph_formula  (Cpf_v.retrieve mrk_cnt_atsd kyl_cpg_foa);;
 #use "tlet_x_off_e_argument_caml_paragraph_value_v.ml";; 
 #use "tlet_x_off_e_argument_caml_paragraph_formula_v.ml";; 
Cpf_v.retrieve mrk_cnt_atsd kyl_cpg_foa;;
 #use "tlet_x_off_e_argument_caml_paragraph_formula_v.ml";; 
 #use "tlet_x_off_e_argument_caml_paragraph_value_v.ml";; 
let pth_cnt=pth_cnt_atsd;;
let kyl_cpg=kyl_cpg_foa;;
let mrk_cnt = List.hd pth_cnt;;
let frm_cpg = Cpf_v.retrieve mrk_cnt kyl_cpg;;
  #use "titem_formula_v.ml";; 
Mds_v.name smb_mod_ext;;
Its_v.name smb_itm_ext ;;
Itf_v.retrieve kyl_itm_ext ;;
  #use "titem_formula_v.ml";; 
Itf_v.retrieve kyl_itm_ext ;;
  #use "titem_formula_v.ml";; 
Itf_v.retrieve kyl_itm_ext ;;
  #use "titem_formula_v.ml";; 
Itf_v.retrieve kyl_itm_ext ;;
  #use "titem_formula_v.ml";; 
kyl_itm_xtw ;;
Itf_v.retrieve kyl_itm_xtw ;;
List.length (Itf_v.retrieve kyl_itm_xtw) ;;
Itf_v.retrieve kyl_itm_xtw;;
List.length (Itf_v.retrieve kyl_itm_xtw) ;;
  #use "titem_formula_v.ml";; 
List.length (Itf_v.caml_paragraph_marker_tree_list_off_item_formula frm_itm_xtw);;
  #use "titem_formula_v.ml";; 
frm_itm_xtw;;
  #use "titem_formula_v.ml";; 
frm_itm_ssg;;
  #use "titem_formula_v.ml";; 
Itf_v.retrieve kyl_itm_typ ;;
Mds_v.name smb_mod_xot;;
  #use "titem_formula_v.ml";; 
  #use "titem_value_v.ml";; 
frm_itm_typ;;
val_itm_typ;;
Itv_v.make kyl_itm_typ;;
  #use "titem_value_v.ml";; 
Itv_v.make kyl_itm_typ;;
  #use "titem_value_v.ml";; 
val_itm_xot ;;
Itv_v.make kyl_itm_xot;;
kyl_itm_typ ;;
Itv_v.make kyl_itm_ssg;;
let smb_ent = Ens_v.make "atom_onetied_single";;
let smb_cat = Cts_v.make "symbol";;
let smb_mod = Mds_v.make "type";;
let val_tgt = Tgv_v.make smb_ent smb_cat smb_mod ;;
Tgp_v.store_force "current" val_tgt;; 
let smb_mod_ssg = Mds_t.Module_function;;
let smb_itm_ssg = Its_v.extracting;;
let kyl_itm_ssg = [("item", "extracting"); ("module", "function"); ("category", "symbol"); ("entity", "atom_onetied_single")];;
let frm_itm_ssg = Itf_v.retrieve kyl_itm_ssg;;
Itv_v.make kyl_itm_ssg;;
  #use "titem_value_v.ml";; 
frm_itm_ssg ;;
  #use "titem_value_v.ml";; 
frm_itm_ssg ;;
  #use "titem_value_v.ml";; 
  #use "item_value_v.ml";; 
let kyl_itm=kyl_itm_ssg 
;;
let let frm_itm = Itf_v.retrieve kyl_itm;;
let frm_itm = Itf_v.retrieve kyl_itm;;
let  mrk_cpg_tl= [Item_formula_t.Cpmt_t.Tre_t.Leaf
     (Item_formula_t.Cpmt_t.Cnm_t.Cns_t.Function_symbol
       (Item_formula_t.Cpmt_t.Cnm_t.Cns_t.Function_as_function_symbol
         (Item_formula_t.Cpmt_t.Cnm_t.Cns_t.Function_as_function_se_off_e
           (Item_formula_t.Cpmt_t.Cnm_t.Cns_t.Cnm_t.Cns_t.Pure_constructor_symbol
             (Item_formula_t.Cpmt_t.Cnm_t.Cns_t.Cnm_t.Cns_t.Leaf_pure_constructor_symbol
               (Item_formula_t.Cpmt_t.Cnm_t.Cns_t.Cnm_t.Cns_t.Bare_leaf_pure_constructor_symbol
                 "h_s")),
            2))),
      2);
    Item_formula_t.Cpmt_t.Tre_t.Leaf
     (Item_formula_t.Cpmt_t.Cnm_t.Cns_t.Function_symbol
       (Item_formula_t.Cpmt_t.Cnm_t.Cns_t.Function_as_function_symbol
         (Item_formula_t.Cpmt_t.Cnm_t.Cns_t.Function_as_function_se_off_e
           (Item_formula_t.Cpmt_t.Cnm_t.Cns_t.Cnm_t.Cns_t.Pure_constructor_symbol
             (Item_formula_t.Cpmt_t.Cnm_t.Cns_t.Cnm_t.Cns_t.Leaf_pure_constructor_symbol
               (Item_formula_t.Cpmt_t.Cnm_t.Cns_t.Cnm_t.Cns_t.Bare_leaf_pure_constructor_symbol
                 "f_s")),
            2))),
      2)]
;;
let val_cpg_t = 
	  make_caml_paragraph_value_tree kyl_itm mrk_cpg_t;;
    Item_formula_t.Cpmt_t.Tre_t.Leaf
  #use "titem_value_v.ml";; 
Itv_v.caml_paragraph_value_tree_list_off_item_value val_itm_ssg ;;
  #use "item_value_v.ml";; 
let mrk_cpg_tl=Itv_v.caml_paragraph_value_tree_list_off_item_value val_itm_ssg ;;
let  kyl_itm= kyl_itm_ssg;;
mrk_cpg_t;;
let mrk_cpg_t=Itf_v.caml_paragraph_marker_tree_list_off_item_formula frm_itm_ssg
;;
let mrk_cpg_tl=Itf_v.caml_paragraph_marker_tree_list_off_item_formula frm_itm_ssg
;;
  #use "titem_value_v.ml";; 
mrk_cpg_tl_xot;;
mrk_cpg_tl_ssg;;
(
frm_itm_ssg 
=
Item_formula_t.Caml_paragraph_marker_tree_list mrk_cpg_tl_ssg
);;
mrk_cpg_tl_xot;;
  #use "titem_value_v.ml";; 
val_cpg_tl_ssg;;
val_itm_ssg ;;
mrk_cpg_tl_xot;;
val_itm_xot;;
mrk_cpg_tl_xot;;
frm_itm_xot;;
let mrk_cpg_t=List.hd mrk_cpg_tl;;
let kyl_itm=kyl_itm_oxt;;
let kyl_itm=kyl_itm_xot;;
let kyl_cpg_t = 
    caml_paragraph_key_list_tree_of_item_key_list_of_caml_paragraph_marker_tree
      kyl_itm mrk_cpg_t ;;
let mrk_cpg_t=List.hd mrk_cpg_tl;;
 let pth_cnl_t = 
    lowest_constructor_path_tree mrk_cpg_t;;
 Tre_v.map2 Cpv_v.make pth_cnl_t kyl_cpg_t;;
  #use "titem_value_v.ml";; 
let mrk_cpg_t=List.hd mrk_cpg_tl;;    
mrk_cpg_tl_xot;;
let mrk_cpg_t=List.hd mrk_cpg_tl_xot;;                                    
List.length let mrk_cpg_t=List.hd mrk_cpg_tl_xot;;                                    
List.length mrk_cpg_tl_xot;;
 mrk_cpg_t  ;;
  #use "item_value_v.ml";; 
(
mrk_cpg_t 
(* : Caml_paragraph_marker_tree_t.caml_paragraph_marker_tree *)
=
  Caml_paragraph_marker_tree_t.Tre_t.Leaf
   (Caml_paragraph_marker_tree_t.Cnm_t.Cns_t.Function_symbol
     (Caml_paragraph_marker_tree_t.Cnm_t.Cns_t.Function_as_function_symbol
       (Caml_paragraph_marker_tree_t.Cnm_t.Cns_t.Function_as_function_se_off_e
         (Caml_paragraph_marker_tree_t.Cnm_t.Cns_t.Cnm_t.Cns_t.Pure_constructor_symbol
           (Caml_paragraph_marker_tree_t.Cnm_t.Cns_t.Cnm_t.Cns_t.Leaf_pure_constructor_symbol
             (Caml_paragraph_marker_tree_t.Cnm_t.Cns_t.Cnm_t.Cns_t.Bare_leaf_pure_constructor_symbol
               "h_s")),
          2))),
    2)
);;
  #use "ttitem_value_v.ml";; 
  #use "titem_value_v.ml";; 
  #use "item_value_v.ml";; 
mrk_cpg_t ;;
(
mrk_cpg_t 
(* : Caml_paragraph_marker_tree_t.caml_paragraph_marker_tree *)
=
  Caml_paragraph_marker_tree_t.Tre_t.Leaf
   (Caml_paragraph_marker_tree_t.Cnm_t.Cns_t.Function_symbol
     (Caml_paragraph_marker_tree_t.Cnm_t.Cns_t.Function_as_function_symbol
       (Caml_paragraph_marker_tree_t.Cnm_t.Cns_t.Function_as_function_se_off_e
         (Caml_paragraph_marker_tree_t.Cnm_t.Cns_t.Cnm_t.Cns_t.Pure_constructor_symbol
           (Caml_paragraph_marker_tree_t.Cnm_t.Cns_t.Cnm_t.Cns_t.Leaf_pure_constructor_symbol
             (Caml_paragraph_marker_tree_t.Cnm_t.Cns_t.Cnm_t.Cns_t.Bare_leaf_pure_constructor_symbol
               "h_s")),
          2))),
    2)
);;
let mrk_cpg_t=List.hd mrk_cpg_tl_xos;;                                    
 (
mrk_cpg_t 
(* : Caml_paragraph_marker_tree_t.caml_paragraph_marker_tree *)
=
  Caml_paragraph_marker_tree_t.Tre_t.Leaf
   (Caml_paragraph_marker_tree_t.Cnm_t.Cns_t.Function_symbol
     (Caml_paragraph_marker_tree_t.Cnm_t.Cns_t.Function_as_function_symbol
       (Caml_paragraph_marker_tree_t.Cnm_t.Cns_t.Function_as_function_se_off_e
         (Caml_paragraph_marker_tree_t.Cnm_t.Cns_t.Cnm_t.Cns_t.Pure_constructor_symbol
           (Caml_paragraph_marker_tree_t.Cnm_t.Cns_t.Cnm_t.Cns_t.Leaf_pure_constructor_symbol
             (Caml_paragraph_marker_tree_t.Cnm_t.Cns_t.Cnm_t.Cns_t.Bare_leaf_pure_constructor_symbol
               "h_s")),
          2))),
    2)
);;
let kyl_cpg_t = 
    caml_paragraph_key_list_tree_of_item_key_list_of_caml_paragraph_marker_tree
      kyl_itm mrk_cpg_t ;;
let kyl_itm = ky_itm_xos;;  
let kyl_itm = kyl_itm_xos;;  
let kyl_cpg_t = 
    caml_paragraph_key_list_tree_of_item_key_list_of_caml_paragraph_marker_tree
      kyl_itm mrk_cpg_t ;;
(
 kyl_cpg_t 
(* : (string, string) Doublet_t.doublet list Tree_t.tree *)
=
  Tree_t.Leaf
   [("caml_paragraph", "function_as_function_se_off_e (h_s,2)");
    ("item", "extracting"); ("module", "function"); ("category", "symbol");
    ("entity", "atom_onetied")]
);;
 kyl_cpg_t ;;
 (
 kyl_cpg_t 
(* : (string, string) Doublet_t.doublet list Tree_t.tree *)
=
  Tree_t.Leaf
   [("caml_paragraph", "function_as_function_se_off_e (h_s,2)");
    ("item", "extracting"); ("module", "function"); ("category", "symbol");
    ("entity", "atom_onetied_single")]
);;
let pth_cnl_t = 
    lowest_constructor_path_tree mrk_cpg_t  ;;
( 
pth_cnl_t 
(* : Constructor_marker_t.constructor_marker list Tree_t.tree *)
=
  Tree_t.Leaf
   [(Constructor_marker_t.Cns_t.Pure_constructor_symbol
      (Constructor_marker_t.Cns_t.Leaf_pure_constructor_symbol
        (Constructor_marker_t.Cns_t.Bare_leaf_pure_constructor_symbol "h_s")),
     2)]
);;
let v = Tre_v.map2 Cpv_v.make pth_cnl_t kyl_cpg_t;;
 #use "tatom_onetied_single_item_value_v.ml";; 
mrk_cnt_t;;
frm_itm ;;
 #use "tatom_onetied_single_item_value_v.ml";; 
let pth_cnl_t = 
    lowest_constructor_path_tree mrk_cnt_t  ;;
 #use "tatom_onetied_single_item_value_v.ml";; 
 #use "item_value_v.ml";; 
    lowest_constructor_path_tree mrk_cnt_t  ;;
Tre_v.map (fun n -> Tre_v.path_of_node_of_tree n mrk_cnl_t) mrk_cnl_t;;
Tre_v.map (fun n -> Tre_v.path_of_node_of_tree n mrk_cnt_t) mrk_cnt_t;;
let constructor_path_tree_of_constructor_marker_tree mrk_cnt_t =
  Tre_v.map (fun n -> Tre_v.path_of_node_of_tree n mrk_cnt_t) mrk_cnt_t
;;
constructor_path_tree_of_constructor_marker_tree mrk_cnt_t;;
 #use "titem_formula_v.ml";; 
Mds_v.name smb_mod_xos;;
Itf_v.retrieve kyl_itm_xos;;
let kyl_itm_xos = [("item", "extracting"); ("module", "function"); ("category", "symbol"); ("entity", "atom_onetied_single")];;
let nam_ent =  "atom";;
let smb_ent = Ens_v.make nam_ent;;
let smb_cat = Cts_v.make "symbol";;
let smb_mod = Mds_v.make "type";;
let val_tgt = Tgv_v.make smb_ent smb_cat smb_mod ;;
Tgp_v.store_force "current" val_tgt;; 
#use "tatom_onetied_single_item_formula_v.ml";; 
Mds_v.name smb_mod_xos;;
let frm_itm_xos = Itf_v.retrieve kyl_itm_xos;;
let mrk_cnt_t = Cmtp_v.provide nam_ent;;
module Cls_v = Caml_line_symbol_v
module Cns_v = Constructor_symbol_v
module Cmt_v = Constructor_marker_tree_v
module Cmtp_v = Constructor_marker_tree_provider_v
module Cpm_v = Caml_paragraph_marker_v
module Cps_t = Caml_paragraph_symbol_t
module Cps_v = Caml_paragraph_symbol_v
module Cts_v = Category_symbol_v
module Dbt_v = Doublet_v
module Edp_v = Entity_data_provider_v
module Itf_t = Item_formula_t
module Its_t = Item_symbol_t
module Its_v = Item_symbol_v
module Kyl_v = Key_list_v
module Mds_t = Module_symbol_t
module Mds_v = Module_symbol_v
module Tgv_v = Target_value_v
module Tvp_v = Target_value_provider_v
module Tcc_v = Translation_constructor_symbol_to_caml_line_v
module Tre_t = Tree_t 
module Tre_v = Tree_v 
;;
	retrieve_extracting mrk_cnt_t kyl_itm;;
let mrk_cpg_t = 
    caml_paragraph_marker_tree_extracting_of_constructor_marker_tree
      mrk_cnt_t;;
#use "item_formula_v.ml";; 
let mrk_cpg_t = 
    caml_paragraph_marker_tree_extracting_of_constructor_marker_tree
      mrk_cnt_t;;
	let mrk_cnt_t = Cmtp_v.provide nam_ent ;;
let mrk_cpg_t = 
    caml_paragraph_marker_tree_extracting_of_constructor_marker_tree
      mrk_cnt_t;;
 #use "ttyping_atom_onetied_single_item_formula_v.ml";; 
frm_itm ;;
 #use "ttyping_atom_onetied_single_item_formula_v.ml";; 
 #use "textracting_atom_onetied_single_item_formula_v.ml";; 
(
Mds_v.name smb_mod
(* : string *)
= 
"function"
);;
 (
Its_v.name smb_itm 
=
 "extracting"
);;
(
kyl_itm 
= 
[
 ("item", "extracting"); 
 ("module", "function"); 
 ("category", "symbol"); 
 ("entity", "atom_onetied_single")
]
);;
#use "ttyping_atom_onetied_single_item_value_v.ml";; 
kyl_itm ;;
#use "ttyping_atom_onetied_single_item_value_v.ml";; 
kyl_itm ;;
frm_itm ;;
mrk_cnt_t;;
#use "ttyping_atom_onetied_single_item_value_v.ml";; 
pth_cnl_t ;;
#use "ttyping_atom_onetied_single_item_value_v.ml";; 
#use "ttyping_atom_onetied_single_item_formula_v.ml";; 
#use "textracting_atom_onetied_single_item_formula_v.ml";; 
frm_itm ;;
#use "textracting_atom_onetied_single_item_value_v.ml";; 
kyl_itm ;;
#use "textracting_atom_onetied_single_item_value_v.ml";; 
 ( 
kyl_itm 
= 
[
 ("item", "extracting"); ("module", "function"); ("category", "symbol"); 
 ("entity", "atom_onetied_single")
]
);;
;;
 ( 
kyl_itm 
= 
[
 ("item", "extracting"); ("module", "function"); ("category", "symbol"); 
 ("entity", "atom_onetied_single")
]
);;
 (
frm_itm 
(* : Item_formula_t.item_formula *)
=
Item_formula_t.Caml_paragraph_marker_tree_list
 [Item_formula_t.Cpmt_t.Tre_t.Leaf
   (Item_formula_t.Cpmt_t.Cnm_t.Cns_t.Function_symbol
     (Item_formula_t.Cpmt_t.Cnm_t.Cns_t.Function_as_function_symbol
       (Item_formula_t.Cpmt_t.Cnm_t.Cns_t.Function_as_function_se_off_e
         (Item_formula_t.Cpmt_t.Cnm_t.Cns_t.Cnm_t.Cns_t.Pure_constructor_symbol
           (Item_formula_t.Cpmt_t.Cnm_t.Cns_t.Cnm_t.Cns_t.Leaf_pure_constructor_symbol
             (Item_formula_t.Cpmt_t.Cnm_t.Cns_t.Cnm_t.Cns_t.Bare_leaf_pure_constructor_symbol
               "h_s")),
          2))),
    2);
  Item_formula_t.Cpmt_t.Tre_t.Leaf
   (Item_formula_t.Cpmt_t.Cnm_t.Cns_t.Function_symbol
     (Item_formula_t.Cpmt_t.Cnm_t.Cns_t.Function_as_function_symbol
       (Item_formula_t.Cpmt_t.Cnm_t.Cns_t.Function_as_function_se_off_e
         (Item_formula_t.Cpmt_t.Cnm_t.Cns_t.Cnm_t.Cns_t.Pure_constructor_symbol
           (Item_formula_t.Cpmt_t.Cnm_t.Cns_t.Cnm_t.Cns_t.Leaf_pure_constructor_symbol
             (Item_formula_t.Cpmt_t.Cnm_t.Cns_t.Cnm_t.Cns_t.Bare_leaf_pure_constructor_symbol
               "f_s")),
          2))),
    2)]
);;
frm_itm ;;
 (
mrk_cnt_t
(* : Cmtp_v.Csdt_t.constructor_marker_tree *)
=
Cmtp_v.Csdt_t.Tre_t.Node
 ((Cmtp_v.Csdt_t.Cnm_t.Cns_t.Entity_constructor_symbol
    (Cmtp_v.Csdt_t.Cnm_t.Cns_t.Several_constructor_symbol
      "atom_onetied_single"),
   1),
 [Cmtp_v.Csdt_t.Tre_t.Leaf
   (Cmtp_v.Csdt_t.Cnm_t.Cns_t.Pure_constructor_symbol
     (Cmtp_v.Csdt_t.Cnm_t.Cns_t.Leaf_pure_constructor_symbol
       (Cmtp_v.Csdt_t.Cnm_t.Cns_t.Bare_leaf_pure_constructor_symbol "h_s")),
    2);
  Cmtp_v.Csdt_t.Tre_t.Leaf
   (Cmtp_v.Csdt_t.Cnm_t.Cns_t.Pure_constructor_symbol
     (Cmtp_v.Csdt_t.Cnm_t.Cns_t.Leaf_pure_constructor_symbol
       (Cmtp_v.Csdt_t.Cnm_t.Cns_t.Bare_leaf_pure_constructor_symbol "f_s")),
    2)])
);;
#use "textracting_atom_onetied_single_item_value_v.ml";; 
#use "textracting_atom_onetied_single_item_value_v.ml";; val_itm
 ( 
pth_cnt_t 
(* : Cmtp_v.Csdt_t.Cnm_t.constructor_marker list Tree_t.tree *)
=
Tree_t.Node
 ([(Cmtp_v.Csdt_t.Cnm_t.Cns_t.Entity_constructor_symbol
     (Cmtp_v.Csdt_t.Cnm_t.Cns_t.Several_constructor_symbol
       "atom_onetied_single"),
    1)],
 [Tree_t.Leaf
   [(Cmtp_v.Csdt_t.Cnm_t.Cns_t.Pure_constructor_symbol
      (Cmtp_v.Csdt_t.Cnm_t.Cns_t.Leaf_pure_constructor_symbol
        (Cmtp_v.Csdt_t.Cnm_t.Cns_t.Bare_leaf_pure_constructor_symbol "h_s")),
     2);
    (Cmtp_v.Csdt_t.Cnm_t.Cns_t.Entity_constructor_symbol
      (Cmtp_v.Csdt_t.Cnm_t.Cns_t.Several_constructor_symbol
        "atom_onetied_single"),
     1)];
  Tree_t.Leaf
   [(Cmtp_v.Csdt_t.Cnm_t.Cns_t.Pure_constructor_symbol
      (Cmtp_v.Csdt_t.Cnm_t.Cns_t.Leaf_pure_constructor_symbol
        (Cmtp_v.Csdt_t.Cnm_t.Cns_t.Bare_leaf_pure_constructor_symbol "f_s")),
     2);
    (Cmtp_v.Csdt_t.Cnm_t.Cns_t.Entity_constructor_symbol
      (Cmtp_v.Csdt_t.Cnm_t.Cns_t.Several_constructor_symbol
        "atom_onetied_single"),
     1)]])
);;
 let kyl_cpg_t = frm_itm;;
Tre_v.map2 Cpv_v.make pth_cnt_t kyl_cpg_t;;
  #use "textracting_atom_onetied_single_item_value_v.ml";; 
 Tre_v.map2 Cpv_v.make pth_cnt_t kyl_cpg_t;;
  #use "textracting_atom_onetied_single_item_value_v.ml";; 
val_itm;;
  #use "textracting_atom_onetied_single_item_value_v.ml";; 
#use "textracting_atom_onetied_single_item_value_v.ml";; 
kyl_cpg_t;;
(
kyl_cpg_t
(* : Item_formula_t.item_formula *)
=
Item_formula_t.Tre_t.Node
 ([("caml_paragraph", "heading"); ("item", "extracting");
   ("module", "function"); ("category", "symbol");
   ("entity", "atom_onetied_single")],
 [Item_formula_t.Tre_t.Leaf
   [("caml_paragraph", "function_as_function_se_off_e (h_s,2)");
    ("item", "extracting"); ("module", "function"); ("category", "symbol");
    ("entity", "atom_onetied_single")];
  Item_formula_t.Tre_t.Leaf
   [("caml_paragraph", "function_as_function_se_off_e (f_s,2)");
    ("item", "extracting"); ("module", "function"); ("category", "symbol");
    ("entity", "atom_onetied_single")]])
);;
( 
kyl_itm 
= 
[
 ("item", "extracting"); ("module", "function"); ("category", "symbol"); 
 ("entity", "atom_onetied_single")
]
);;
( 
pth_cnt_t 
(* : Cmtp_v.Csdt_t.Cnm_t.constructor_marker list Tree_t.tree *)
=
Tree_t.Node
 ([(Cmtp_v.Csdt_t.Cnm_t.Cns_t.Entity_constructor_symbol
     (Cmtp_v.Csdt_t.Cnm_t.Cns_t.Several_constructor_symbol
       "atom_onetied_single"),
    1)],
 [Tree_t.Leaf
   [(Cmtp_v.Csdt_t.Cnm_t.Cns_t.Pure_constructor_symbol
      (Cmtp_v.Csdt_t.Cnm_t.Cns_t.Leaf_pure_constructor_symbol
        (Cmtp_v.Csdt_t.Cnm_t.Cns_t.Bare_leaf_pure_constructor_symbol "h_s")),
     2);
    (Cmtp_v.Csdt_t.Cnm_t.Cns_t.Entity_constructor_symbol
      (Cmtp_v.Csdt_t.Cnm_t.Cns_t.Several_constructor_symbol
        "atom_onetied_single"),
     1)];
  Tree_t.Leaf
   [(Cmtp_v.Csdt_t.Cnm_t.Cns_t.Pure_constructor_symbol
      (Cmtp_v.Csdt_t.Cnm_t.Cns_t.Leaf_pure_constructor_symbol
        (Cmtp_v.Csdt_t.Cnm_t.Cns_t.Bare_leaf_pure_constructor_symbol "f_s")),
     2);
    (Cmtp_v.Csdt_t.Cnm_t.Cns_t.Entity_constructor_symbol
      (Cmtp_v.Csdt_t.Cnm_t.Cns_t.Several_constructor_symbol
        "atom_onetied_single"),
     1)]])
);;
al_itm;;
val_itm;;
Itv_v.make kyl_itm;;
  #use "textracting_atom_onetied_single_item_value_v.ml";; 
val_itm;;
Itv_v.make kyl_itm;;
#use "ttyping_atom_onetied_single_item_value_v.ml";; 
( 
pth_cnt_t 
(* : Cmtp_v.Csdt_t.Cnm_t.constructor_marker list Tree_t.tree *)
=
Tree_t.Node
 ([(Cmtp_v.Csdt_t.Cnm_t.Cns_t.Entity_constructor_symbol
     (Cmtp_v.Csdt_t.Cnm_t.Cns_t.Several_constructor_symbol
       "atom_onetied_single"),
    1)],
 [Tree_t.Leaf
   [(Cmtp_v.Csdt_t.Cnm_t.Cns_t.Pure_constructor_symbol
      (Cmtp_v.Csdt_t.Cnm_t.Cns_t.Leaf_pure_constructor_symbol
        (Cmtp_v.Csdt_t.Cnm_t.Cns_t.Bare_leaf_pure_constructor_symbol "h_s")),
     2);
    (Cmtp_v.Csdt_t.Cnm_t.Cns_t.Entity_constructor_symbol
      (Cmtp_v.Csdt_t.Cnm_t.Cns_t.Several_constructor_symbol
        "atom_onetied_single"),
     1)];
  Tree_t.Leaf
   [(Cmtp_v.Csdt_t.Cnm_t.Cns_t.Pure_constructor_symbol
      (Cmtp_v.Csdt_t.Cnm_t.Cns_t.Leaf_pure_constructor_symbol
        (Cmtp_v.Csdt_t.Cnm_t.Cns_t.Bare_leaf_pure_constructor_symbol "f_s")),
     2);
    (Cmtp_v.Csdt_t.Cnm_t.Cns_t.Entity_constructor_symbol
      (Cmtp_v.Csdt_t.Cnm_t.Cns_t.Several_constructor_symbol
        "atom_onetied_single"),
     1)]])
);;
 Itv_v.make kyl_itm;;
  #use "item_value_v.ml";; 
 pth_cnt_t;;
 kyl_cpg_t;;
kyl_itm;;
  let nam_ent = Kyl_v.entityname_off_key_list kyl_itm;;
  let mrk_cnt_t = Cmtp_v.provide nam_ent;;
  let frm_itm = Itf_v.retrieve kyl_itm;;
  let kyl_cpg_t = frm_itm ;;
 pth_cnt_t;;
  #use "ttyping_atom_onetied_single_item_formula_v.ml";; 
frm_itm ;;
  #use "textracting_atom_onetied_single_item_formula_v.ml";; 
frm_itm ;;
 #use "ttyping_atom_onetied_single_item_value_v.ml";; 
frm_itm ;;
 #use "ttyping_atom_onetied_single_item_value_v.ml";; 
 (
mrk_cnt_t
(* : Cmtp_v.Csdt_t.constructor_marker_tree *)
=
Cmtp_v.Csdt_t.Tre_t.Node
 ((Cmtp_v.Csdt_t.Cnm_t.Cns_t.Entity_constructor_symbol
    (Cmtp_v.Csdt_t.Cnm_t.Cns_t.Several_constructor_symbol
      "atom_onetied_single"),
   1),
 [Cmtp_v.Csdt_t.Tre_t.Leaf
   (Cmtp_v.Csdt_t.Cnm_t.Cns_t.Pure_constructor_symbol
     (Cmtp_v.Csdt_t.Cnm_t.Cns_t.Leaf_pure_constructor_symbol
       (Cmtp_v.Csdt_t.Cnm_t.Cns_t.Bare_leaf_pure_constructor_symbol "h_s")),
    2);
  Cmtp_v.Csdt_t.Tre_t.Leaf
   (Cmtp_v.Csdt_t.Cnm_t.Cns_t.Pure_constructor_symbol
     (Cmtp_v.Csdt_t.Cnm_t.Cns_t.Leaf_pure_constructor_symbol
       (Cmtp_v.Csdt_t.Cnm_t.Cns_t.Bare_leaf_pure_constructor_symbol "f_s")),
    2)])
);;
( 
pth_cnt_t 
(* : Cmtp_v.Csdt_t.Cnm_t.constructor_marker list Tree_t.tree *)
=
Tree_t.Node
 ([(Cmtp_v.Csdt_t.Cnm_t.Cns_t.Entity_constructor_symbol
     (Cmtp_v.Csdt_t.Cnm_t.Cns_t.Several_constructor_symbol
       "atom_onetied_single"),
    1)],
 [Tree_t.Leaf
   [(Cmtp_v.Csdt_t.Cnm_t.Cns_t.Pure_constructor_symbol
      (Cmtp_v.Csdt_t.Cnm_t.Cns_t.Leaf_pure_constructor_symbol
        (Cmtp_v.Csdt_t.Cnm_t.Cns_t.Bare_leaf_pure_constructor_symbol "h_s")),
     2);
    (Cmtp_v.Csdt_t.Cnm_t.Cns_t.Entity_constructor_symbol
      (Cmtp_v.Csdt_t.Cnm_t.Cns_t.Several_constructor_symbol
        "atom_onetied_single"),
     1)];
  Tree_t.Leaf
   [(Cmtp_v.Csdt_t.Cnm_t.Cns_t.Pure_constructor_symbol
      (Cmtp_v.Csdt_t.Cnm_t.Cns_t.Leaf_pure_constructor_symbol
        (Cmtp_v.Csdt_t.Cnm_t.Cns_t.Bare_leaf_pure_constructor_symbol "f_s")),
     2);
    (Cmtp_v.Csdt_t.Cnm_t.Cns_t.Entity_constructor_symbol
      (Cmtp_v.Csdt_t.Cnm_t.Cns_t.Several_constructor_symbol
        "atom_onetied_single"),
     1)]])
);;
let pth_cnt_t = Itv_v.constructor_path_tree_of_constructor_marker_tree mrk_cnt_t;;
let val_itm = Itv_v.make kyl_itm;;
 #use "ttyping_atom_onetied_single_item_value_v.ml";; 
let val_itm = Itv_v.make kyl_itm;;
 #use "ttyping_atom_onetied_single_item_formula_v.ml";; 
frm_itm ;;
 #use "ttyping_atom_onetied_single_item_value_v.ml";; 
frm_itm;;
let val_itm = Itv_v.make kyl_itm;;
 #use "ttyping_atom_onetied_single_item_value_v.ml";; 
 #use "item_value_v.ml";; 
 #use "item_formula_v.ml";; 
kyl_itm ;;
 let smb_itm = Its_v.make nam_itm ;;
  let nam_ent = Kyl_v.entityname_off_key_list kyl_itm in
  let smb_cne = Cns_v.make nam_ent in
  let mrk_cne = Dbt_v.make smb_cne 1 in 
  let mrk_cnt_t = Cmtp_v.provide nam_ent in 
 
  let smb_cat = Kyl_v.category_symbol_off_key_list kyl_itm in
  let smb_mod = Kyl_v.module_symbol_off_key_list kyl_itm in
  let nam_itm = 
    Kyl_v.value_name_of_key_name_off_key_list "item" kyl_itm 
  in
  let smb_itm = Its_v.make nam_itm;;
let nam_ent = Kyl_v.entityname_off_key_list kyl_itm ;;
let smb_cne = Cns_v.make nam_ent;;
let mrk_cne = Dbt_v.make smb_cne 1 ;;
let mrk_cnt_t = Cmtp_v.provide nam_ent ;;
 let smb_cat = Kyl_v.category_symbol_off_key_list kyl_itm;;
let smb_mod = Kyl_v.module_symbol_off_key_list kyl_itm ;;
  let nam_itm = 
    Kyl_v.value_name_of_key_name_off_key_list "item" kyl_itm ;;
let smb_itm = Its_v.make nam_itm ;;
(Format.sprintf "triplet (\"%s\", \"%s\", \"%s\")"
	     (Its_v.name smb_itm) (Mds_v.name smb_mod) (Cts_v.name smb_cat)
	  );;
 #use "ttyping_atom_onetied_single_item_value_v.ml";; 
(Mds_v.name smb_mod);;
 #use "ttyping_atom_onetied_single_item_value_v.ml";; 
frm_itm ;;
let frm_itm = Itf_v.retrieve kyl_itm;;
 #use "ttyping_atom_onetied_single_item_value_v.ml";; 
 #use "textracting_atom_onetied_single_item_formula_v.ml";; 
frm_itm ;;
 #use "textracting_atom_onetied_single_item_value_v.ml";; 
kyl_cpg_t;;
let mrk_cnt_t = Cmtp_v.provide nam_ent;;
 #use "textracting_atom_onetied_single_item_value_v.ml";; 
 ( 
pth_cnt_t 
(* : Cmtp_v.Csdt_t.Cnm_t.constructor_marker list Tree_t.tree *)
=
Tree_t.Node
 ([(Cmtp_v.Csdt_t.Cnm_t.Cns_t.Entity_constructor_symbol
     (Cmtp_v.Csdt_t.Cnm_t.Cns_t.Several_constructor_symbol
       "atom_onetied_single"),
    1)],
 [Tree_t.Leaf
   [(Cmtp_v.Csdt_t.Cnm_t.Cns_t.Pure_constructor_symbol
      (Cmtp_v.Csdt_t.Cnm_t.Cns_t.Leaf_pure_constructor_symbol
        (Cmtp_v.Csdt_t.Cnm_t.Cns_t.Bare_leaf_pure_constructor_symbol "h_s")),
     2);
    (Cmtp_v.Csdt_t.Cnm_t.Cns_t.Entity_constructor_symbol
      (Cmtp_v.Csdt_t.Cnm_t.Cns_t.Several_constructor_symbol
        "atom_onetied_single"),
     1)];
  Tree_t.Leaf
   [(Cmtp_v.Csdt_t.Cnm_t.Cns_t.Pure_constructor_symbol
      (Cmtp_v.Csdt_t.Cnm_t.Cns_t.Leaf_pure_constructor_symbol
        (Cmtp_v.Csdt_t.Cnm_t.Cns_t.Bare_leaf_pure_constructor_symbol "f_s")),
     2);
    (Cmtp_v.Csdt_t.Cnm_t.Cns_t.Entity_constructor_symbol
      (Cmtp_v.Csdt_t.Cnm_t.Cns_t.Several_constructor_symbol
        "atom_onetied_single"),
     1)]])
);;
val_itm;;
let val_itm = Itv_v.make kyl_itm;;
 #use "ttyping_atom_onetied_single_item_value_v.ml";; 
 #use "item_value_v.ml";; 
 Tre_v.map Cpv_v.make frm_itm;;
frm_itm;;
Tre_v.list_of_tree frm_itm;;
Tree_v.list_of_tree frm_itm;;
Tree_v.list_off_tree frm_itm;;
let h = List.hd (Tree_v.list_off_tree frm_itm);;
Cpv_v.make h;;
 Tre_v.map Cpv_v.make frm_itm;;
let l=Tree_v.list_off_tree frm_itm;;
List.map (Cps_v.name l);;
List.map Cps_v.name l);;
List.map Cps_v.name l;;
#use "textracting_atom_onetied_single_item_value_v.ml";; 
let pth_cnt_t = Itf_v.constructor_path_tree_off_item_formula frm_itm;;
let val_itm = Itv_v.make kyl_itm;;
#use "textracting_atom_onetied_single_item_value_v.ml";; 
u #use "textracting_atom_onetied_single_item_formula_v.ml";; 
 #use "textracting_atom_onetied_single_item_formula_v.ml";; 
smb_cpg;;
ctt_cpg;;
let pth_cnt_l = Tre_v.list_off_tree pth_cnt_t;;
 #use "textracting_atom_onetied_single_item_formula_v.ml";; 
smb_cpg;;
let pth_cnt_h_s = (List.nth pth_cnt_l 3) ;;
let pth_cnt_h_s = (List.nth pth_cnt_l 1) ;;
let pth_cnt_h_s = (List.hd (List.nth pth_cnt_l 1)) ;;
 #use "textracting_atom_onetied_single_item_formula_v.ml";; 
let ctt_cpg = Cpc_v.make pth_cnt_h_s kyl_itm;;
let pth_cnt_h_s = [(List.hd (List.nth pth_cnt_l 1))] ;;
let ctt_cpg = Cpc_v.make pth_cnt_h_s kyl_itm;;
let smb_cpg = Itf_v.caml_paragraph_symbol_of_caml_paragraph_context ctt_cpg;;
 #use "textracting_atom_onetied_single_item_formula_v.ml";; 
 #use "textracting_atom_onetied_single_item_value_v.ml";; 
 #use "textracting_atom_onetied_single_item_formula_v.ml";; 
frm_itm ;;
 #use "textracting_atom_onetied_single_item_formula_v.ml";; 
smb_cpg ;;
 #use "textracting_atom_onetied_single_item_formula_v.ml";; 
 #use "textracting_atom_onetied_single_item_value_v.ml";; 
frm_itm;;
 #use "textracting_atom_onetied_single_item_value_v.ml";; 
val_itm;;
 #use "textracting_atom_onetied_single_item_value_v.ml";; 
 #use "ttyping_atom_onetied_single_item_formula_v.ml";; 
frm_itm ;;
 #use "ttyping_atom_onetied_single_item_formula_v.ml";; 
pth_cnt_t ;;
 #use "ttyping_atom_onetied_single_item_formula_v.ml";; 
 #use "ttyping_atom_onetied_single_item_value_v.ml";; 
frm_itm ;;
 #use "ttyping_atom_onetied_single_item_value_v.ml";; 
#use "ttyping_atom_onetied_single_item_value_v.ml";; 
#use "tatom_typing_atom_onetied_single_item_value_v.ml";; 
#use "ttyping_atom_caml_line_value_v.ml";; 
pth_cnt_cpg ;;
let frm_itm = Itf_v.retrieve kyl_itm;;
kyl_itm;;
val_tgt;; 
let frm_itm = Itf_v.retrieve kyl_itm;;
let mrk_cnt_t = Cmtp_v.provide nam_ent;;
let ctt_cpg_t = Itf_v.caml_paragraph_context_tree_of_constructor_marker_tree_of_item_key_list mrk_cnt_t kyl_itm;;
#use "ttyping_atom_caml_line_value_v.ml";; 
let frm_itm = Itf_v.retrieve kyl_itm;;
 let trp_imc = 
    Cpc_v.symboltriplet_off_caml_paragraph_context ctt_cpg ;;
#use "ttyping_atom_caml_line_value_v.ml";; 
 smb_cli_pee;;
 Clv_v.make;;
  let pth_cnt = Cpc_v.constructor_path_off_caml_paragraph_context ctt_cpg ;;
  let mrk_cnx = List.hd pth_cnt ;;
ctt_cpg;;
let pth_cnt_cpg = [(List.hd (List.nth pth_cnt_l 0))] ;;
let ctt_cpg = Cpc_v.make pth_cnt_cpg kyl_itm;;
let pth_cnt_cpg = Tre_v.root_of_tree pth_cnt_t;; 
let pth_cnt_cpg = Tre_v.root_off_tree pth_cnt_t;; 
let ctt_cpg = Cpc_v.make pth_cnt_cpg kyl_itm;;
let smb_cpg = Itf_v.caml_paragraph_symbol_of_caml_paragraph_context ctt_cpg;;
let val_cli_pee = Clv_v.make ctt_cpg smb_cli_pee;;
let val_cli_tdf = Clv_v.make ctt_cpg smb_cli_tdf;;
smb_cli_pee;;
ctt_cpg ;;
Cpf_v.retrieve ;;
let frm_cpg = Cpf_v.retrieve smb_cpg;;
smb_cli_tdf;;
smb_cli_pee;;
val_cli_pss;;
let val_cli_pss = Clv_v.make ctt_cpg smb_cli_pss;;
#use "ttyping_atom_caml_line_value_v.ml";; 
let val_cli_pss = Clv_v.make ctt_cpg smb_cli_pss;;
smb_cne;;
smb_cnt;;
let smb_cns_l =
	  Cst_v.constructor_symbol_son_list_of_constructor_symbol smb_cnt ;;
module Cns_t = Constructor_symbol_t
module Cns_v = Constructor_symbol_v
module Cls_v = Caml_line_symbol_v
module Cts_t = Category_symbol_t
module Cts_v = Category_symbol_v
module Cpc_v = Caml_paragraph_context_v
module Cpf_t = Caml_paragraph_formula_t
module Cps_t = Caml_paragraph_symbol_t
module Cps_v = Caml_paragraph_symbol_v
module Cst_v = Constructor_symbol_tree_v
module Tcc_v = Translation_constructor_symbol_to_caml_line_v
module Ens_v = Entity_symbol_v
module Edp_v = Entity_data_provider_v
module Its_t = Item_symbol_t
module Its_v = Item_symbol_v
module Kyl_v = Key_list_v
module Mds_t = Module_symbol_t
module Mds_v = Module_symbol_v
module Trp_v = Triplet_v;;
let smb_cns_l =
	  Cst_v.constructor_symbol_son_list_of_constructor_symbol smb_cnt ;;
let smb_cli_l = 
	  List.map 
	    type_pipe_caml_line_symbol_of_constructor_symbol smb_cns_l;;
#use "caml_paragraph_formula_v.ml";;
	    type_pipe_caml_line_symbol_of_constructor_symbol smb_cns_l;;
let smb_cns_l =
	  Cst_v.constructor_symbol_son_list_of_constructor_symbol smb_cnt ;;
let smb_cli_l = 
	  List.map 
	    type_pipe_caml_line_symbol_of_constructor_symbol smb_cns_l;;
let smb_cns_l = Cst_v.constructor_symbol_son_list_of_constructor_symbol smb_cnt;;
let smb_cli_l = List.map type_pipe_caml_line_symbol_of_constructor_symbol smb_cns_l;;
  #use "ttyping_atom_caml_line_value_v.ml";; 
 smb_cli_tdf;;
exit
  #use "ttyping_atom_caml_line_value_v.ml";; 
let smb_cpg = Itf_v.caml_paragraph_symbol_of_caml_paragraph_context ctt_cpg;;
 Itf_v.caml_paragraph_symbol_of_caml_paragraph_context ctt_cpg;;
 ctt_cpg_t ;;
 Itf_v.caml_paragraph_symbol_of_caml_paragraph_context ctt_cpg;;
  #use "ttyping_atom_caml_line_value_v.ml";; 
frm_cpg ;;
smb_cli_tdf;;
val_cli_pss;;
 val_cli_tdf;;
val_cli_pss(
frm_cpg 
(* : Caml_paragraph_formula_t.caml_paragraph_formula *)
=
  Caml_paragraph_formula_t.Nonindented
   [Caml_paragraph_formula_t.Cls_t.Singlet_symbol
     (Caml_paragraph_formula_t.Cls_t.Type_definition_symbol ctt_cpg);
    Caml_paragraph_formula_t.Cls_t.Singlet_symbol
     (Caml_paragraph_formula_t.Cls_t.Type_pipe_s_of_s_symbol ctt_cpg);
    Caml_paragraph_formula_t.Cls_t.Singlet_symbol
     (Caml_paragraph_formula_t.Cls_t.Type_pipe_s_of_s_symbol ctt_cpg);
    Caml_paragraph_formula_t.Cls_t.Singlet_symbol
     (Caml_paragraph_formula_t.Cls_t.Type_pipe_s_of_s_symbol ctt_cpg);
    Caml_paragraph_formula_t.Cls_t.Singlet_symbol
     (Caml_paragraph_formula_t.Cls_t.Type_pipe_s_of_s_symbol ctt_cpg);
    Caml_paragraph_formula_t.Cls_t.Singlet_symbol
     (Caml_paragraph_formula_t.Cls_t.Type_pipe_s_of_s_symbol ctt_cpg);
    Caml_paragraph_formula_t.Cls_t.Singlet_symbol
     (Caml_paragraph_formula_t.Cls_t.Type_pipe_bare_symbol ctt_cpg);
    Caml_paragraph_formula_t.Cls_t.Singlet_symbol
     (Caml_paragraph_formula_t.Cls_t.Type_pipe_bare_symbol ctt_cpg)]
);;
(
frm_cpg 
(* : Caml_paragraph_formula_t.caml_paragraph_formula *)
=
  Caml_paragraph_formula_t.Nonindented
   [Caml_paragraph_formula_t.Cls_t.Singlet_symbol
     (Caml_paragraph_formula_t.Cls_t.Type_definition_symbol ctt_cpg);
    Caml_paragraph_formula_t.Cls_t.Singlet_symbol
     (Caml_paragraph_formula_t.Cls_t.Type_pipe_s_of_s_symbol ctt_cpg);
    Caml_paragraph_formula_t.Cls_t.Singlet_symbol
     (Caml_paragraph_formula_t.Cls_t.Type_pipe_s_of_s_symbol ctt_cpg);
    Caml_paragraph_formula_t.Cls_t.Singlet_symbol
     (Caml_paragraph_formula_t.Cls_t.Type_pipe_s_of_s_symbol ctt_cpg);
    Caml_paragraph_formula_t.Cls_t.Singlet_symbol
     (Caml_paragraph_formula_t.Cls_t.Type_pipe_s_of_s_symbol ctt_cpg);
    Caml_paragraph_formula_t.Cls_t.Singlet_symbol
     (Caml_paragraph_formula_t.Cls_t.Type_pipe_s_of_s_symbol ctt_cpg);
    Caml_paragraph_formula_t.Cls_t.Singlet_symbol
     (Caml_paragraph_formula_t.Cls_t.Type_pipe_bare_symbol ctt_cpg);
    Caml_paragraph_formula_t.Cls_t.Singlet_symbol
     (Caml_paragraph_formula_t.Cls_t.Type_pipe_bare_symbol ctt_cpg)]
);;
ctt_cpg);
;;
ctt_cpg;;
#use "ttyping_atom_caml_paragraph_formula_v.ml";; 
ctt_cpg;;
pht_cnt;;
pth_cnt;;
#use "ttyping_atom_caml_paragraph_formula_v.ml";; 
frm_cpg ;;
#use "ttyping_atom_caml_paragraph_formula_v.ml";; 
List.nth frm_cpg 0 ;;
frm_cpg
;;
List.nth (Cpf_v.caml_line_symbol_list_off_caml_paragraph_formula frm_cpg) 0 ;;
List.nth (Cpf_v.caml_line_symbol_list_off_caml_paragraph_formula frm_cpg) 1 ;;
List.length (Cpf_v.caml_line_symbol_list_off_caml_paragraph_formula frm_cpg);;
List.nth (Cpf_v.caml_line_symbol_list_off_caml_paragraph_formula frm_cpg) 7 ;;
  #use "ttyping_atom_onetied_single_item_value_v.ml";; 
val_itm ;;
  #use "ttyping_atom_onetied_single_item_value_v.ml";; 
  #use "ttyping_atom_caml_line_value_v.ml";; 
let val_cli_pss = Clv_v.make smb_cli_pss;;
  #use "ttyping_atom_caml_line_value_v.ml";; 
  #use "ttyping_atom_caml_paragraph_formula_v.ml";; 
pth_cnt;;
  #use "ttyping_atom_caml_line_value_v.ml";; 
let smb_cli_bar = List.nth smb_cli_l 7;;
smb_cli_pss;;
let val_cli_tdf = Clv_v.make smb_cli_tdf;;
let val_cli_tpss = Clv_v.make smb_cli_tpss;;
let val_cli_tpb = Clv_v.make smb_cli_tpb;;
let smb_cli_tdf = List.nth smb_cli_l 0;;
let smb_cli_tpss = List.nth smb_cli_l 1;;
let smb_cli_tpb = List.nth smb_cli_l 7;;
let val_cli_tdf = Clv_v.make smb_cli_tdf;;
let val_cli_tpss = Clv_v.make smb_cli_tpss;;
let val_cli_tpb = Clv_v.make smb_cli_tpb;;
 val_cli_tdf ;;
val_cli_tpss;;
val_cli_tpb ;;
  #use "ttyping_atom_caml_line_value_v.ml";; 
val_cli_tpb ;;
smb_cli_tpb;;
  #use "ttyping_atom_caml_line_value_v.ml";; 
  #use "ttyping_atom_caml_paragraph_formula_v.ml";; 
List.nth smb_cli_l 7 ;;
  #use "caml_paragraph_formula_v.ml";; 
#use "tatom_caml_paragraph_typing_formula_v.ml";; 
List.nth smb_cli_l 0 ;;
let smb_cli_l = frm_cpg;;
#use "tatom_caml_paragraph_typing_formula_v.ml";; 
Cpc_v.symboltriplet_off_caml_paragraph_context ctt_cpg ;;
ctt_cpg;;
cpff_v. retrieve_function_s_off_t_function ctt_cpg;;
Cpff_v.retrieve_function_s_off_t_function ctt_cpg;;
ctt_cpg;;
#use "caml_paragraph_function_formula_v.ml";; 
retrieve_function_s_off_t_function;;
#use "tatom_caml_paragraph_typing_formula_v.ml";; 
 Cpff_v.retrieve_function smb_fun;;
 ctt_cpg;;
kyl_itm;;
 Cpff_v.retrieve_function smb_fun;;
#use "tatom_caml_paragraph_typing_formula_v.ml";; 
#use "tatom_caml_paragraph_function_formula_v.ml";; 
List.nth smb_cli_l 0 ;;
smb_cli_l;;
#use "tatom_typing_caml_paragraph_value_v.ml";; 
frm_cpg;;
val_cpg;;
smb_cpg 
;;
ctt_cpg;;
#use "tatom_typing_caml_paragraph_value_v.ml";; 
smb_cpg ;;
#use "tatom_typing_caml_paragraph_value_v.ml";; 
frm_cpg;;
#use "tatom_typing_caml_paragraph_value_v.ml";; let val_cpg = Cpv_v.make smb_cpg;;
let val_cpg = Cpv_v.make smb_cpg;;
frm_cpg ;;
)(
List.nth smb_cli_l 1 
(* : Caml_line_symbol_t.caml_line_symbol *)
=
Cls_v.type_pipe_s_of_s ctt_cpg
);;
(
List.nth smb_cli_l 1 
(* : Caml_line_symbol_t.caml_line_symbol *)
=
Cls_v.type_pipe_s_of_s ctt_cpg
);;
module Cls_v = Caml_line_symbol_v;;
Cls_v.type_definition (List.nth ctt_cps_l 0);;
#use "tatom_typing_caml_paragraph_value_v.ml";; 
frm_cpg;;
Cls_v.type_definition (List.nth ctt_cps_l 0);;
ctt_cpslet ctt_cps_l = Cpc_v.son_caml_paragraph_context_list_off_caml_paragraph_context ctt_cpg;;
let ctt_cps_l = Cpc_v.son_caml_paragraph_context_list_off_caml_paragraph_context ctt_cpg;;
#use "tatom_typing_caml_paragraph_value_v.ml";; 
Cls_v.type_pipe_s_of_s (List.nth ctt_cps_l 4);;
Cls_v.type_pipe_s_of_s (List.nth ctt_cps_l 5);;
Cls_v.type_pipe_s_of_s (List.nth ctt_cps_l 6);;
Cls_v.type_pipe_s_of_s (List.nth ctt_cps_l 7);;
Cls_v.type_definition (List.nth ctt_cps_l 0);;
#use "tatom_typing_caml_paragraph_value_v.ml";; 
Cls_v.type_pipe_s_of_s (List.nth ctt_cps_l 1);
;;
Cls_v.type_pipe_s_of_s (List.nth ctt_cps_l 3);
;;
Cls_v.type_pipe_s_of_s (List.nth ctt_cps_l 5);;
Cls_v.type_pipe_s_of_s (List.nth ctt_cps_l 6);;
[
Cls_v.type_definition (List.nth ctt_cps_l 0);
Cls_v.type_pipe_s_of_s (List.nth ctt_cps_l 1);
Cls_v.type_pipe_s_of_s (List.nth ctt_cps_l 2);
Cls_v.type_pipe_s_of_s (List.nth ctt_cps_l 3);
Cls_v.type_pipe_s_of_s (List.nth ctt_cps_l 4);
Cls_v.type_pipe_s_of_s (List.nth ctt_cps_l 5);
Cls_v.type_pipe_s_of_s (List.nth ctt_cps_l 6);
];;
Caml_paragraph_formula_t.Nonindented
[
Cls_v.type_definition (List.nth ctt_cps_l 0);
Cls_v.type_pipe_s_of_s (List.nth ctt_cps_l 1);
Cls_v.type_pipe_s_of_s (List.nth ctt_cps_l 2);
Cls_v.type_pipe_s_of_s (List.nth ctt_cps_l 3);
Cls_v.type_pipe_s_of_s (List.nth ctt_cps_l 4);
Cls_v.type_pipe_s_of_s (List.nth ctt_cps_l 5);
Cls_v.type_pipe_s_of_s (List.nth ctt_cps_l 6);
];;
 (
frm_cpg 
(* : Caml_paragraph_formula_t.caml_paragraph_formula *)
=
Caml_paragraph_formula_t.Nonindented
[
Cls_v.type_definition (List.nth ctt_cps_l 0);
Cls_v.type_pipe_s_of_s (List.nth ctt_cps_l 1);
Cls_v.type_pipe_s_of_s (List.nth ctt_cps_l 2);
Cls_v.type_pipe_s_of_s (List.nth ctt_cps_l 3);
Cls_v.type_pipe_s_of_s (List.nth ctt_cps_l 4);
Cls_v.type_pipe_s_of_s (List.nth ctt_cps_l 5);
Cls_v.type_pipe_s_of_s (List.nth ctt_cps_l 6);
]
);;
 Cls_v.type_definition (List.nth ctt_cps_l 0);
;;
frm_cpg;;
Cls_v.type_pipe_s_of_s (List.nth ctt_cps_l 6);;
#use "tatom_typing_caml_paragraph_value_v.ml";; 
(
frm_cpg 
(* : Caml_paragraph_formula_t.caml_paragraph_formula *)
=
Caml_paragraph_formula_t.Nonindented
[
Cls_v.type_definition ctt_cpg;
Cls_v.type_pipe_s_of_s (List.nth ctt_cps_l 0);
Cls_v.type_pipe_s_of_s (List.nth ctt_cps_l 1);
Cls_v.type_pipe_s_of_s (List.nth ctt_cps_l 2);
Cls_v.type_pipe_s_of_s (List.nth ctt_cps_l 3);
Cls_v.type_pipe_s_of_s (List.nth ctt_cps_l 4);
Cls_v.type_pipe_s_of_s (List.nth ctt_cps_l 5);
Cls_v.type_pipe_s_of_s (List.nth ctt_cps_l 6);
]
);;
 #use "tatom_extracting_caml_paragraph_value_v.ml";; 
let val_cpg = Cpv_v.make smb_cpg;;
 #use "tatom_extracting_caml_paragraph_value_v.ml";; 
let ctt_cps_l = Cpc_v.son_caml_paragraph_context_list_off_caml_paragraph_context ctt_cpg;;
 #use "tatom_extracting_item_formula_v.ml";; 
let val_itm = Itv_v.make kyl_itm;;
 #use "tatom_extracting_item_formula_v.ml";; 
let val_itm = Itv_v.make kyl_itm;;
module Cns_t = Constructor_symbol_t
module Cts_v = Category_symbol_v
module Cps_t = Caml_paragraph_symbol_t
module Ens_v = Entity_symbol_v
module Its_v = Item_symbol_v
module Itf_v = Item_formula_v
module Itv_v = Item_value_v
module Mds_t = Module_symbol_t
module Mds_v = Module_symbol_v
module Tgv_v = Target_value_v
module Tgp_v = Target_value_provider_v
module Tre_t = Tree_t
let nam_ent = "atom";;
let smb_ent = Ens_v.make nam_ent;;
let smb_cat = Cts_v.symbol;;
let smb_mod = Mds_v.module_function;;
let smb_itm = Its_v.extracting;;
let val_tgt = Tgv_v.make smb_ent smb_cat smb_mod;;
Tgp_v.store_force "current" val_tgt;; 
let kyl_itm = [("item", Its_v.name smb_itm); ("module", Mds_v.name smb_mod); ("category", Cts_v.name smb_cat); ("entity", Ens_v.name smb_ent)];;
let frm_itm = Itf_v.retrieve kyl_itm;;
let val_itm = Itv_v.make kyl_itm;;let val_itm = Itv_v.make kyl_itm;;
#use "tatom_onetied_single_extracting_item_formula_v.ml";; 
 #use "tatom_onetied_single_extracting_item_formula_v.ml";; 
#use "tatom_onetied_single_extracting_item_value_v.ml";; 
#use "tatom_onetied_extracting_item_value_v.ml";; 
 #use "tatom_onetied_extracting_item_formula_v.ml";; 
frm_itm ;;
 #use "tatom_onetied_extracting_item_value_v.ml";; 
Tre_v.list_off_tree frm_itm ;;
List.filter ;;
List.filter (fun (m, d) -> d=3)  mrk_cpg_l ;;
let mrk_cpg_l = Tre_v.list_off_tree frm_itm;;
List.filter (fun (m, d) -> d=3)  mrk_cpg_l ;;
let mrk_cpg_l = Tre_v.list_off_tree frm_itm;;It
Itf_v.retrieve;;
val_itm ;;
 #use "tatom_onetied_extracting_item_formula_v.ml";; 
List.nth mrk_cpg_l 1;;
List.nth mrk_cpg_l 2;;
List.nth mrk_cpg_l 3;;
List.nth mrk_cpg_l 4;;
 #use "tatom_onetied_extracting_item_formula_v.ml";; 
List.nth mrk_cpg_l 5;;
List.nth mrk_cpg_l 6;;
List.nth smb_cpg_l 6;;
 #use "tatom_onetied_extracting_item_value_v.ml";; 
 #use "tatom_extracting_caml_paragraph_value_v.ml";;
#use "tatom_onetied_extracting_item_formula_v.ml";; 
let frm_itm = Itf_v.retrieve kyl_itm;;
#use "item_formula_v.ml";; 
Tre_v.subtree_remove (fun (s, d) -> ( 
      match s with
      | Cns_t.Pure_constructor_symbol _ -> false
      | _ -> true
)
) mrk_cnt_t;;
#use "item_formula_v.ml";; 
#use "tatom_onetied_extracting_item_formula_v.ml";; 
let mrk_cnt_t = Cmtp_v.provide nam_ent;;
#use "item_formula_v.ml";; 
  let mrk_cne_t =
    Tre_v.subtree_remove (fun (s, d) -> ( 
      match s with
      | Cns_t.Pure_constructor_symbol _ -> false
      | _ -> true
)
) mrk_cnt_t;;
  let mrk_cne_t =
    Tre_v.subtree_remove (fun (s, d) -> ( 
      match s with
      | Cns_t.Pure_constructor_symbol _ -> true
      | _ -> false
)
) mrk_cnt_t;;
 mrk_cnt_t;;
mrk_cne_t ;;
let retrieve_extracting mrk_cnt_t kyl_itm = 
  (* Cut out non-entity constructors : they cannot be extracted. *)
  let mrk_cne_t =
    Tre_v.subtree_remove (fun (s, d) -> ( 
      match s with
      | Cns_t.Pure_constructor_symbol _ -> true
      | _ -> false
     )
			 ) mrk_cnt_t
  in
  
  let ctt_cpg_t = 
    caml_paragraph_context_tree_of_constructor_marker_tree_of_item_key_list 
      mrk_cne_t kyl_itm 
  in
  Tre_v.map
    (* translation ctt -> cpg *)
    Cps_v.caml_paragraph_symbol_of_caml_paragraph_context 
    ctt_cpg_t
;;
let smb_cpg_t = Itf_v.retrieve_extracting mrk_cnt_t kyl_itm;;
#use "tatom_onetied_extracting_item_formula_v.ml";; 
let smb_cpg_t = Itf_v.retrieve_extracting mrk_cnt_t kyl_itm;;
let frm_itm = Itf_v.retrieve kyl_itm;;
let frm_itm = smb_cpg_t;;
frm_itm = smb_cpg_t;;
#use "tatom_onetied_extracting_item_formula_v.ml";; 
frm_itm = smb_cpg_t;;
let smb_cpg_l = Tre_v.list_off_tree frm_itm;;
frm_itm;;
#use "tatom_onetied_extracting_item_value_v.ml";; 
#use "tatom_onetied_single_extracting_item_formula_v.ml";;
 #use "tatom_onetied_single_item_formula_v.ml";; 
 mrk_cnt_t;;
mrk_cne_t ;;
frm_itm;;
#use "tatom_onetied_single_extracting_item_formula_v.ml";;
 mrk_cnt_t;;
mrk_cne_t ;;
#use "tatom_onetied_single_extracting_item_formula_v.ml";;
#use "tatom_onetied_single_extracting_item_value_v.ml";;
frm_itm ;;
val_itm ;;
#use "tatom_onetied_extracting_item_value_v.ml";; 
val_itm;;
#use "tatom_onetied_extracting_item_value_v.ml";; 
val_itm;;
#use "tatom_onetied_updating_item_formula_v.ml";; 
#use "tatom_onetied_upgrading_item_formula_v.ml";; 
#use "tatom_onetied_upgrading_item_value_v.ml";; 
 #use "tatom_onetied_upgrading_item_value_v.ml";; 
d
 #use "tatom_onetied_upgrading_item_value_v.ml";; 
(
 mrk_cnt_t
(* : Cmtp_v.Csdt_t.constructor_marker_tree *)
=
Cmtp_v.Csdt_t.Tre_t.Node
 ((Cmtp_v.Csdt_t.Cnm_t.Cns_t.Entity_constructor_symbol
    (Cmtp_v.Csdt_t.Cnm_t.Cns_t.Several_constructor_symbol "atom_onetied"),
   1),
 [Cmtp_v.Csdt_t.Tre_t.Node
   ((Cmtp_v.Csdt_t.Cnm_t.Cns_t.Entity_constructor_symbol
      (Cmtp_v.Csdt_t.Cnm_t.Cns_t.One_constructor_symbol
        (Cmtp_v.Csdt_t.Cnm_t.Cns_t.Node_one_constructor_symbol
          "atom_onetied_conjugated")),
     2),
   [Cmtp_v.Csdt_t.Tre_t.Leaf
     (Cmtp_v.Csdt_t.Cnm_t.Cns_t.Pure_constructor_symbol
       (Cmtp_v.Csdt_t.Cnm_t.Cns_t.Leaf_pure_constructor_symbol
         (Cmtp_v.Csdt_t.Cnm_t.Cns_t.Bare_leaf_pure_constructor_symbol "o_c")),
      3)]);
  Cmtp_v.Csdt_t.Tre_t.Node
   ((Cmtp_v.Csdt_t.Cnm_t.Cns_t.Entity_constructor_symbol
      (Cmtp_v.Csdt_t.Cnm_t.Cns_t.One_constructor_symbol
        (Cmtp_v.Csdt_t.Cnm_t.Cns_t.Node_one_constructor_symbol
          "atom_onetied_double")),
     2),
   [Cmtp_v.Csdt_t.Tre_t.Leaf
     (Cmtp_v.Csdt_t.Cnm_t.Cns_t.Pure_constructor_symbol
       (Cmtp_v.Csdt_t.Cnm_t.Cns_t.Leaf_pure_constructor_symbol
         (Cmtp_v.Csdt_t.Cnm_t.Cns_t.Bare_leaf_pure_constructor_symbol "o_d")),
      3)]);
  Cmtp_v.Csdt_t.Tre_t.Node
   ((Cmtp_v.Csdt_t.Cnm_t.Cns_t.Entity_constructor_symbol
      (Cmtp_v.Csdt_t.Cnm_t.Cns_t.Several_constructor_symbol
        "atom_onetied_single"),
     2),
   [Cmtp_v.Csdt_t.Tre_t.Leaf
     (Cmtp_v.Csdt_t.Cnm_t.Cns_t.Pure_constructor_symbol
       (Cmtp_v.Csdt_t.Cnm_t.Cns_t.Leaf_pure_constructor_symbol
         (Cmtp_v.Csdt_t.Cnm_t.Cns_t.Bare_leaf_pure_constructor_symbol "h_s")),
      3);
    Cmtp_v.Csdt_t.Tre_t.Leaf
     (Cmtp_v.Csdt_t.Cnm_t.Cns_t.Pure_constructor_symbol
       (Cmtp_v.Csdt_t.Cnm_t.Cns_t.Leaf_pure_constructor_symbol
         (Cmtp_v.Csdt_t.Cnm_t.Cns_t.Bare_leaf_pure_constructor_symbol "f_s")),
      3)]);
  Cmtp_v.Csdt_t.Tre_t.Node
   ((Cmtp_v.Csdt_t.Cnm_t.Cns_t.Entity_constructor_symbol
      (Cmtp_v.Csdt_t.Cnm_t.Cns_t.Several_constructor_symbol
        "atom_onetied_triple"),
     2),
   [Cmtp_v.Csdt_t.Tre_t.Leaf
     (Cmtp_v.Csdt_t.Cnm_t.Cns_t.Pure_constructor_symbol
       (Cmtp_v.Csdt_t.Cnm_t.Cns_t.Leaf_pure_constructor_symbol
         (Cmtp_v.Csdt_t.Cnm_t.Cns_t.Bare_leaf_pure_constructor_symbol "n_t")),
      3);
    Cmtp_v.Csdt_t.Tre_t.Leaf
     (Cmtp_v.Csdt_t.Cnm_t.Cns_t.Pure_constructor_symbol
       (Cmtp_v.Csdt_t.Cnm_t.Cns_t.Leaf_pure_constructor_symbol
         (Cmtp_v.Csdt_t.Cnm_t.Cns_t.Bare_leaf_pure_constructor_symbol "o_t")),
      3)])])
);;
testi 1 (
mrk_cns_tl 
(* : Cmtp_v.Csdt_t.Cnm_t.constructor_marker Tree_t.tree *)
=
Tree_t.Node
 ((Cmtp_v.Csdt_t.Cnm_t.Cns_t.Entity_constructor_symbol
    (Cmtp_v.Csdt_t.Cnm_t.Cns_t.Several_constructor_symbol "atom_onetied"),
   1),
 [Tree_t.Leaf
   (Cmtp_v.Csdt_t.Cnm_t.Cns_t.Entity_constructor_symbol
     (Cmtp_v.Csdt_t.Cnm_t.Cns_t.One_constructor_symbol
       (Cmtp_v.Csdt_t.Cnm_t.Cns_t.Node_one_constructor_symbol
         "atom_onetied_conjugated")),
    2);
  Tree_t.Leaf
   (Cmtp_v.Csdt_t.Cnm_t.Cns_t.Entity_constructor_symbol
     (Cmtp_v.Csdt_t.Cnm_t.Cns_t.One_constructor_symbol
       (Cmtp_v.Csdt_t.Cnm_t.Cns_t.Node_one_constructor_symbol
         "atom_onetied_double")),
    2);
  Tree_t.Leaf
   (Cmtp_v.Csdt_t.Cnm_t.Cns_t.Entity_constructor_symbol
     (Cmtp_v.Csdt_t.Cnm_t.Cns_t.Several_constructor_symbol
       "atom_onetied_single"),
    2);
  Tree_t.Leaf
   (Cmtp_v.Csdt_t.Cnm_t.Cns_t.Entity_constructor_symbol
     (Cmtp_v.Csdt_t.Cnm_t.Cns_t.Several_constructor_symbol
       "atom_onetied_triple"),
    2)])
);;
mrk_cns_tl ;;
 #use "tatom_onetied_upgrading_item_value_v.ml";; 
 #use "tatom_onetied_upgrading_item_formula_v.ml";; 
frm_itm;;
 #use "tatom_onetied_upgrading_item_formula_v.ml";; 
List.nth smb_cpg_l 0;;
List.nth smb_cpg_l 1;;
List.nth smb_cpg_l 2;;
List.nth smb_cpg_l 3;;
List.nth smb_cpg_l 4;;
List.nth smb_cpg_l 5;;
List.nth smb_cpg_l 6;;
 #use "tatom_onetied_upgrading_item_formula_v.ml";; 
List.nth smb_cpg_l 7;;
List.nth smb_cpg_l 8;;
List.nth smb_cpg_l 9;;
List.length smb_cpg_l;;
List.nth smb_cpg_l 7;;
 #use "tatom_onetied_upgrading_item_formula_v.ml";; 
 #use "tatom_onetied_upgrading_item_value_v.ml";; 
let val_itm = Itv_v.make kyl_itm;;
 #use "tatom_onetied_upgrading_item_value_v.ml";; 
let val_itm = Itv_v.make kyl_itm;;
 #use "tatom_onetied_upgrading_item_value_v.ml";; 
val_itm ;;
 #use "tatom_onetied_upgrading_item_value_v.ml";; 
val_itm ;;
#use "tatom_onetied_single_extracting_item_value_v.ml";; 
val_itm ;;
#use "tatom_onetied_extracting_item_value_v.ml";; 
#use "tatom_onetied_querying_item_value_v.ml";; 
#use "tatom_onetied_extracting_item_value_v.ml";; 
#use "tatom_onetied_querying_item_value_v.ml";; 
val_itm;;
#use "tatom_onetied_querying_item_value_v.ml";; 
val_itm;;
#use "tatom_querying_item_value_v.ml";; 
 mrk_cnt_t;;
mrk_cne_t ;;
#use "tatom_querying_item_value_v.ml";; 
frm_itm;;
val_itm;;
#use "tatom_querying_item_value_v.ml";; 
val_itm;;
ecmu;;
 #use "tentitycategorymodule_v.ml";; 
ecmt;;
Ens_v.argument_abbreviation smb_ent;;
 #use "tentitycategorymodule_v.ml";; 
Enc_v.argument_abbreviation ecnt ;;
 #use "tentitycategorymodule_v.ml";; 
Ecm_v.module_abbreviation ecmb ;;
Ecm_v.argument_abbreviation ecmb ;;
Ecm_v.module_abbreviation ecmb;;
 #use "tentitycategorymodule_v.ml";; 
#use "tatom_querying_item_value_v.ml";; 
 #use "tentitycategorymodule_v.ml";; 
val_itm;;
#use "tatom_querying_item_value_v.ml";; 
val_itm;;
#use "tatom_querying_item_value_v.ml";; 
val_itm;;
frm_itm;;
let frm_itm = Itf_v.retrieve kyl_itm;;
let smb_cpg_t = frm_itm;;
let smb_cpg_l = Tre_v.list_off_tree smb_cpg_t;;
let smb_cpg = List.nth smb_cpg_l 5;;
let smb_cpg = List.nth smb_cpg_l 4;;
let smb_cpg = List.nth smb_cpg_l 1;;
List.length smb_cpg_l ;;
let smb_cpg = List.nth smb_cpg_l 30;;
let smb_cpg = List.nth smb_cpg_l 32;;
let smb_cpg = List.nth smb_cpg_l 20;;
let smb_cpg = List.nth smb_cpg_l 25;;
 #use "tmake_u_is_b_off_u_u_caml_line_value_v.ml";; 
Clv_v.make_u_is_b_off_u_u ecmu_25 ecmb_25;;
let ecmu ecmu_25;;
let ecmu = ecmu_25;;
let ecmb = ecmb_25;;
let mdau = Ecm_v.module_abbreviation ecmu ;;
module Cls_t = Caml_line_symbol_t
module Cls_v = Caml_line_symbol_v
module Cpc_v = Caml_paragraph_context_v
module Cts_v = Category_symbol_v
module Cnm_v = Constructor_marker_v
module Cns_v = Constructor_symbol_v
module Dbt_v = Doublet_v
module Ecm_v = Entitycategorymodule_v
module Enc_v = Entitycategory_v
module Ens_v = Entity_symbol_v
module Kyl_v = Key_list_v
module Its_t = Item_symbol_t
module Its_v = Item_symbol_v
module Lst_v = List_v
module Mds_v = Module_symbol_v
;;
let mdau = Ecm_v.module_abbreviation ecmu ;;
ecmu ;;
Ecm_v.module_abbreviation
(Entitycategorymodule_t.Ens_t.String "atom_threetied",
 Entitycategorymodule_t.Cts_t.Symbol_symbol,
 Entitycategorymodule_t.Mds_t.Function_symbol);;
let ecm =ecmu;;
#use "entitycategorymodule_v.ml";;
let enc = entitycategory_off_entitycategorymodule ecm;;
 let abb_enc = Enc_v.module_abbreviation enc ;;
#use "entitycategory_v.ml";;
let enc = entitycategory_off_entitycategorymodule ecm;;
 let smb_ent = entity_symbol_off_entitycategory enc ;;
let smb_cat = category_symbol_off_entitycategory enc ;;
 let abb_ent = Ens_v.module_abbreviation smb_ent;;
#use "entity_symbol_v.ml";;
 let abb_ent = Ens_v.module_abbreviation smb_ent;;
 let smb_ent =  abb_ent;;
 let smb_ent;;
smb_ent;;
 let smb_ent = entity_symbol_off_entitycategory enc ;;
let str = entityname_off_entity_symbol smb_ent;;
 let abb = Str_v.first_characters_string_of_underscored_string str;;
Enc_v.module_abbreviation ecnt ;;
  #use "tentitycategorymodule_v.ml";; 
Ens_v.module_abbreviation smb_ent;;
smb_ent;;
  let str = entityname_off_entity_symbol smb_ent;;
  let abb = Str_v.first_characters_string_of_underscored_string str;;
 let rvs = Str_v.reverse_string str;;
  let abb = Str_v.first_characters_string_of_underscored_string str;;
(String.capitalize abb) ^ (String.sub rvs 0 1)  ;;
  #use "tentitycategorymodule_v.ml";; 
 #use "tatom_querying_item_value_v.ml";; 
 #use "tatom_displaying_item_value_v.ml";; 
let mrk_cnt_t = Cmtp_v.provide nam_ent;;
let kyl_itm = [("item", Its_v.name smb_itm); ("module", Mds_v.name smb_mod); ("category", Cts_v.name smb_cat); ("entity", Ens_v.name smb_ent)];;
let frm_itm = Itf_v.retrieve kyl_itm;;
let smb_cpg_l = Tree_v.list_off_tree frm_itm;;
let val_itm = Itv_v.make kyl_itm;;
let smb_cpg_l = Tree_v.list_off_tree frm_itm;;
List.length smb_cpg_l;;
List.nth smb_cpg_l 0;;
List.nth smb_cpg_l 1;;
List.nth smb_cpg_l 2;;
List.nth smb_cpg_l 97;;
List.nth smb_cpg_l 96;;
 #use "tatom_displaying_item_value_v.ml";; 
let val_itm = Itv_v.make kyl_itm;;
 #use "tatom_displaying_item_value_v.ml";; 
let val_itm = Itv_v.make kyl_itm;;
 #use "tatom_displaying_item_value_v.ml";; 
 mrk_cnt_t;;
let ctt_cpg_t = 
    caml_paragraph_context_tree_of_constructor_marker_tree_of_item_key_list 
      mrk_cnt_t kyl_itm ;;
 #use "item_formula_v.ml";;
    caml_paragraph_context_tree_of_constructor_marker_tree_of_item_key_list 
;;
let ctt_cpg_t = 
    caml_paragraph_context_tree_of_constructor_marker_tree_of_item_key_list 
      mrk_cnt_t kyl_itm ;;
Tree_v.sonlet ctt_pgs_l = Tre_v.sonnode_list_off_tree  ctt_cpg_t;;
let ctt_pgs_l = Tre_v.sonnode_list_off_tree  ctt_cpg_t;;
List.map
    (* translation ctt -> cpg *)
    Cps_v.caml_paragraph_symbol_of_caml_paragraph_context 
    ctt_cps_l;;
let ctt_cps_l = Tre_v.sonnode_list_off_tree  ctt_cpg_t in
 List.map
    (* translation ctt -> cpg *)
    Cps_v.caml_paragraph_symbol_of_caml_paragraph_context 
    ctt_cps_l;;
frm_itm;;
 #use "tatom_naming_item_value_v.ml";; 
 val_itm ;;
#use "entity_symbol_v.ml";;
smb_ent;;
let str ="atom_fourtied";;
 let abb = Str_v.first_characters_string_of_underscored_string str;;
let wrd_l = str_v.split_of_c '_' str;;
let wrd_l = Str_v.split_of_c '_' str;;
let word_abbreviation = function 
  | "zerotied" -> "0"
  | "onetied" -> "1"  
  | "twotied" -> "2"
  | "threetied" -> "3"
  | "fourtied" -> "4"
  | "fivetied" -> "5"
  | "sixtied" -> "6"
  | s -> (String.sub s 0 1))  
;;
let word_abbreviation = function 
  | "zerotied" -> "0"
  | "onetied" -> "1"  
  | "twotied" -> "2"
  | "threetied" -> "3"
  | "fourtied" -> "4"
  | "fivetied" -> "5"
  | "sixtied" -> "6"
  | s -> (String.sub s 0 1)
;;
  let wrd_l = Str_v.split_of_c '_' str;;
List.map word_abbreviation wrd_l;;
 Str_v.word_of_char_list (List.map word_abbreviation wrd_l);;word_of_char_list
 Str_v.word_of_char_list (List.map word_abbreviation wrd_l);;
let char_abbreviation_of_word = function 
  | "zerotied" -> '0'
  | "onetied" -> '1'  
  | "twotied" -> '2'
  | "threetied" -> '3'
  | "fourtied" -> '4'
  | "fivetied" -> '5'
  | "sixtied" -> '6'
  | s -> (String.sub s 0 1)
;;
(String.get "ab" 1)
;;
#use "entity_symbol_v.ml";;
Str_v.word_of_char_list (List.map char_abbreviation_of_word wrd_l);;
let str = "atom_fourtied_single" ;;
#use "entity_symbol_v.ml";;
let str = "atom_fourtied_single" ;;
abbreviation_of_string str;;
#use "entity_symbol_v.ml";;
abbreviation_of_string str;;
abbreviation_of_string  "atom";;
 #use "tatom_querying_item_value_v.ml";; 
val_itm;;
 #use "tatom_naming_item_value_v.ml";; 
 #use "tatom_typing_item_value_v.ml";; 
let frm_itm = Itf_v.retrieve kyl_itm;;
let val_itm = Itv_v.make kyl_itm;;
 #use "tatom_typing_item_value_v.ml";; 
val_itm;;
 #use "tatom_querying_item_value_v.ml";; 
 #use "tatom_querying_item_formula_v.ml";; 
 #use "tatom_onetied_querying_item_formula_v.ml";; 
val_itm;;
let val_itm = Itv_v.make kyl_itm;;
 #use "tatom_onetied_querying_item_value_v.ml";; 
val_itm;;
 #use "tatom_onetied_extracting_item_value_v.ml";; 
val_itm;;
 #use "tatom_onetied_upgrading_item_value_v.ml";; 
val_itm ;;
 #use "tatom_onetied_upgrading_item_value_v.ml";; 
val_itm;;
 #use "tmodule_value_v.ml";; 
time;;
Unix.time;;
Unix.time ();;
Unix.gmtime (Unix.time ());;
Unix.localtime (Unix.time ());;
 let time = Unix.gmtime (Unix.time ();;
 let time = Unix.gmtime (Unix.time ());;
let date =
    Format.sprintf "%i:%i %i %i %i" 
      time.Unix.tm_hour time.Unix.tm_min time.Unix.tm_mday time.Unix.tm_mon time.Unix.tm_year;;
let monthes = [|"Jan"; "Feb"; "Mar"; "Apr"; "May"; "Jun"; "Jul"; "Aug"; "Sep"; "Oct"; "Nov"; "Dec"|];;
 let time = Unix.gmtime (Unix.time ());;
let date =
    Format.sprintf "%i:%i %i %s %i" 
      time.Unix.tm_hour time.Unix.tm_min time.Unix.tm_mday (monthes.(time.Unix.tm_mon)) (1900 +time.Unix.tm_year) 
;;
 #use "tmodule_value_v.ml";; 
val_mod_typ;;
 #use "tmodule_value_v.ml";; 
Mdv_v.write val_mod_typ;;
flush ();;
 #use "tmodule_value_v.ml";; 
Mdv_v.write val_mod_typ;;
 #use "tmodule_value_v.ml";; 
Mdv_v.write val_mod_typ;;
close_out oc;
;;
 #use "tmodule_value_v.ml";; 
Mdv_v.write val_mod_typ;;
exit
 #use "tmodule_value_v.ml";; 
Mdv_v.write val_mod_typ;;
 #use "tmodule_value_v.ml";; 
let val_mod =val_mod_typ;;
List.iter (Itv_v.write stdout) val_mod;;
 #use "module_value_v.ml";; 
List.iter (Itv_v.write stdout) val_mod;;
 #use "module_value_v.ml";; 
 #use "tmodule_value_v.ml";; 
 List.iter (print_string) val_mod;;
 List.iter (print_string) val_mod_typ;;
let oc_ppf = Format.formatter_of_out_channel stdout;;
Format.fprintf oc_ppf "%s" "blabla";;
flush_all ();;
let oc_ppf = Format.formatter_of_out_channel stdout;;
Format.fprintf oc_ppf "%s" "blabla";;
exit 0;;let oc_ppf = Format.formatter_of_out_channel stdout;;
Format.fprintf oc_ppf "%s@." "blabla";;
let oc_ppf = Format.formatter_of_out_channel stdout;;
Format.fprintf oc_ppf "%s" "blabla";;
flush stdout;;
 #use "tmodule_value_v.ml";; 
Fio_v.open_write_of_string_of_string_of_file_name ;;
Fileio_v.open_write_of_string_of_string_of_file_name ;;
let oc =  Fio_v.open_write_of_string_of_string_of_file_name 
    "module_value_v" "write" "./test.dat";; 
module Fio_v = Fileio_v;;
let oc =  Fio_v.open_write_of_string_of_string_of_file_name 
    "module_value_v" "write" "./test.dat";; 
Mdv_v.write oc val_mod_typ;;
let oc =  Fio_v.open_write_of_string_of_string_of_file_name 
    "module_value_v" "write" "./test.out";; 
Mdv_v.write oc val_mod_typ;;
 #use "tmodule_value_v.ml";; 
let l = [1; 2; 3];;
let last_element_of_list =let rec last_element_of_list = function
  | [] -> failwith ("List_empty:last_element_of_list")
  | h :: [] -> h
  | h :: t_l -> last_element_of_list t_l 
;;
let rec last_element_of_list = function
  | [] -> failwith ("List_empty:last_element_of_list")
  | h :: [] -> h
  | h :: t_l -> last_element_of_list t_l 
;;
last_element_of_list l;;
let rec append_of_element_of_list e = function
  | [] -> [e]
  | h :: [] -> h :: [e]
  | h :: t_l -> h :: (append_of_element_of_list e t_l) 
;;
  append_of_element_of_list 5 l;;
let rec append_of_element_of_list e = function
  | [] -> [e]
  | h :: t_l -> h :: (append_of_element_of_list e t_l) 
;;
  append_of_element_of_list 5 [1];;
  append_of_element_of_list 5 [];;
 #use "tmodule_value_v.ml";; 
 #use "tatom_typing_item_value_v.ml";; 
#use "tatom_querying_item_value_v.ml";; 
val_itm;;
  #use "tatom_typing_item_value_v.ml";; 
val_itm;;
frm_itm;;
#use "tatom_querying_item_value_v.ml";; 
#use "tatom_onetied_querying_item_value_v.ml";; 
val_itm;;
#use "tatom_onetied_querying_item_value_v.ml";; 
 #use "tmodule_value_v.ml";; 
frm_mod_typ;;
(
frm_mod_typ
(* Item_symbol_t.item_symbol list *) 
= 
[Its_v.heading;
 Its_v.modules;
 Its_v.heading; 
 Its_v.typing;
 Its_v.ending]
);;
 #use "tmodule_value_v.ml";; 
Mdv_v.name val_mod_typ;;
 #use "tmodule_value_v.ml";; 
Mdv_v.name val_mod_typ;;
 #use "tmodule_value_v.ml";; 
val_mod_typ;;
let nam_fil = "./tmodule_value_v.out";;
let oc =  Fio_v.open_write_of_string_of_string_of_file_name 
    "module_value_v" "write" nam_fil;; 
Mdv_v.write oc val_mod_typ;;
close_out oc;
 #use "tmodule_value_v.ml";; 
let oc =  Fio_v.open_write_of_string_of_string_of_file_name 
    "module_value_v" "write" nam_fil;; 
Mdv_v.write oc val_mod_typ;;
close_out oc;
let nam_fil = "./tmodule_value_v.out";;
let oc =  Fio_v.open_write_of_string_of_string_of_file_name 
    "module_value_v" "write" nam_fil;; 
Mdv_v.write oc val_mod_typ;;
close_out oc;
;;
let oc =  Fio_v.open_write_of_string_of_string_of_file_name 
    "module_value_v" "write" nam_fil;; 
let nam_fil = "./tmodule_value_v.out";;
close_out oc;
 #use "tmodule_value_v.ml";; 
#use "tatom_querying_item_value_v.ml";; 
val_itm;;
  #use "tatom_onetied_single_extracting_item_value_v.ml";; 
val_itm ;;
#use "tatom_querying_item_value_v.ml";; 
  #use "tatom_onetied_querying_item_value_v.ml";; 
val_itm;;
val_itm;;#use "tatom_onetied_extracting_item_value_v.ml";; 
val_itm;;#use "tmodule_value_v.ml";;
#use "tmodule_value_v.ml";;
val_itm;;
Mdv_v.name val_mod_typ;;
#use "tmodule_value_v.ml";;
Mdv_v.name val_mod_typ;;
#use "tmodule_value_v.ml";;
fln_mod_typ
=;;
fln_mod_typ;;
#use "tmodule_value_v.ml";;
 #use "tatom_querying_item_value_v.ml";; 
val_itm;;
Hm
 #use "tatom_functon_module_value_v.ml";; 
 #use "tatom_function_module_value_v.ml";; 
(
Mdv_v.print Format.str_formatter val_mod;
Format.flush_str_formatter ()
=
Mdv_v.name val_mod
);;
 #use "tatom_function_module_value_v.ml";; 
(
frm_mod
(* Item_symbol_t.item_symbol list *) 
= 
[Its_v.heading;
 Its_v.modules;
 Its_v.naming;
 Its_v.printing;
 Its_v.extracting;
 Its_v.querying;
 Its_v.upgrading;
 Its_v.including;
 Its_v.ending]
);;
 #use "tatom_typing_module_value_v.ml";; 
fln_mod;;
 #use "tatom_typing_module_value_v.ml";; 
Mdv_v.name val_mod;;
 #use "tatom_typing_module_value_v.ml";; 
Mdv_v.name val_mod;;
Mdv_v.name_list val_mod;;
 #use "tatom_typing_module_value_v.ml";; 
Mdv_v.name_list val_mod;;
List_v.split_at_last_element_of_list (Mdv_v.name_list val_mod);;
let rec drop_last_element_of_list = function
  | [] -> failwith ("List_empty:Lst_v.last_element_of_list")
  | h :: [] -> []
  | h :: t_l -> drop_last_element_of_list t_l 
;;
drop_last_element_of_list [1; 2; 3];;
 #use "tatom_typing_module_value_v.ml";; 
Lst_v.drop_last_element_of_list (Mdv_v.name_list val_mod);;
fln_mod;;
 (
fln_mod
(* : string *)
= 
"atom_symbol_t.ml"
);;
  #use "tatom_function_module_value_v.ml";; 
Lst_v.drop_last_element_of_list (Mdv_v.name_list val_mod) ;;
  #use "tatom_function_module_value_v.ml";; 
Lst_v.drop_last_element_of_list (Mdv_v.name_list val_mod) ;;
  #use "tatom_function_module_value_v.ml";; 
  #use "tatom_querying_module_value_v.ml";; 
  #use "tatom_querying_item_value_v.ml";; 
val_itm;;
  #use "tatom_upgrading_item_value_v.ml";; 
  #use "tatom_querying_item_value_v.ml";; 
  #use "tatom_upgrading_item_value_v.ml";; 
val_itm;;
  #use "tatom_onetied_upgrading_item_value_v.ml";; 
val_itm ;;
 #use "tatom_typing_item_value_v.ml";; 
 *)nam_fil_itm;;
nam_fil_itm;;
 #use "tatom_typing_item_value_v.ml";; 
nam_fil_itm;;
 #use "tatom_naming_item_value_v.ml";; 
#use "tatom_onetied_querying_item_formula_v.ml";; 
#use  #use "tatom_interface_module_value_v.ml";; 
#use  "tatom_interface_module_value_v.ml";; 
fln_mod;;
frm_mod;;
 #use "tatom_querying_item_value_v.ml";; 
 #use "tatom_naming_item_value_v.ml";; 
#use "tatom_onetied_single_extracting_item_value_v.ml";; 
frm_itm ;;
nam_fil_itm;;
 (
nam_fil_itm
(* : string *)
= 
"atom_onetied_single_symbol_extracting_v.ml"
);;
#use "tatom_onetied_single_extracting_item_formula_v.ml";; 
frm_itm;;
#use "tatom_onetied_single_extracting_item_formula_v.ml";; 
#use "tatom_onetied_single_extracting_item_value_v.ml";; 
 #use "tatom_onetied_querying_item_value_v.ml";; 
val_itm;;
#use "tatom_onetied_single_extracting_item_formula_v.ml";
;;
#use "tatom_onetied_single_extracting_item_formula_v.ml";;
#use "tatom_onetied_extracting_item_formula_v.ml";;
#use "tatom_onetied_upgrading_item_formula_v.ml";;
List.nth smb_cpg_l 0;;
#use "tatom_onetied_implementation_extracting_item_formula_v.ml";;
"tatom_onetied_single_implementation_extracting_item_value_v.ml";; 
# use "tatom_onetied_single_implementation_extracting_item_value_v.ml";; 
nam_fil_itm;;
# use "item_value_v.ml";; 
  let smb_mod = Kyl_v.module_symbol_off_key_list kyl_itm;;
let smb_mod = Kyl_v.module_symbol_off_key_list kyl_itm;;
# use "tatom_onetied_single_implementation_extracting_item_value_v.ml";; 
 #use "tatom_onetied_single_implementation_extracting_item_value_v.ml";; 
# use "tatom_onetied_implementation_extracting_item_value_v.ml";; 
kyl_itm ;;
frm_itm ;;
mrk_cnt_t;;
pth_cnl_t 
;;
fln_itm;;
let oc = Fio_v.open_write_of_string_of_string_of_file_name nam_mod "oc" fln_itm;; 
Itv_v.write oc val_itm;;
close_out oc;
#use "tatom_onetied_single_implementation_extracting_item_value_v.ml";; 
kyl_itm ;;
frm_itm ;;
#use "tatom_onetied_single_implementation_extracting_item_value_v.ml";; 
fln_itm;;
#use "tatom_onetied_single_implementation_extracting_item_value_v.ml";; 
#use "tatom_onetied_interface_querying_item_value_v.ml";; 
val_itm;;
#use "tatom_onetied_interface_querying_item_value_v.ml";; 
#use "tatom_type_module_value_v.ml";; 
Lst_v.drop_last_element_of_list (Mdv_v.name_list val_mod) ;;
#use "tatom_type_module_value_v.ml";; 
#use "tatom_onetied_interface_querying_item_value_v.ml";; 
val_itm;;
#use "tatom_onetied_interface_querying_item_value_v.ml";; 
 #use "tatom_onetied_interface_extracting_item_value_v.ml";; 
 #use "tatom_onetied_interface_querying_item_value_v.ml";; 
val_itm;;
 #use "tatom_onetied_interface_querying_item_value_v.ml";; 
#use "tatom_type_module_value_v.ml";; 
Lst_v.drop_last_element_of_list (Mdv_v.name_list val_mod) ;;
let command_line =" symbol  type atom";;
module Lst_v = List_v;;
let w_l = Lst_v.split_of_c ' ' command_line ;;
let w_l = String_v.split_of_c ' ' command_line ;;
let w_l = Str_v.split_of_c ' ' command_line ;;
module Str_v = String_v 
let w_l = Str_v.split_of_c ' ' command_line ;;
let [nam_cat; nam_mod; nam_ent] = w_l ;;
let nam_cat = List.nth w_l 0;; 
let nam_mod = List.nth w_l 1;; 
let nam_ent = List.nth w_l 2;; module Str_v = String_v 
module Mds_v = Module_symbol_v
module Ens_v = Entity_v
module Cts_v = Category_symbol_v;;
module Ens_v = Entity_symbol_v;;
let smb_cat = Cts_v.make nam_cat;;
let smb_ent = Ens_v.make nam_ent;;
let smb_mod = Mds_v.make nam_mod;;module Cts_v = Category_symbol_v
module Mds_v = Module_symbol_v;;
module Str_v = String_v 
module Mds_v = Module_symbol_v
module Ens_v = Entity_symbol_v
module Cts_v = Category_symbol_v
;;
let w_l = Str_v.split_of_c ' ' command_line ;; (* "symbol" "type" "atom" *)
let nam_cat = List.nth w_l 0;; 
let nam_mod = List.nth w_l 1;; 
let nam_ent = List.nth w_l 2;; 
let smb_cat = Cts_v.make nam_cat;;
let smb_ent = Ens_v.make nam_ent;;
let smb_mod = Mds_v.make nam_mod;;let val_tgt = Tgv_v.make smb_ent smb_cat smb_mod ;;
Tgp_v.store_force "current" val_tgt;; 
module Tvp_v = Target_value_provider_v;;
Tvp_v.store_force "current" val_tgt;; 
let val_tgt = Tgv_v.make smb_ent smb_cat smb_mod ;;
Tvp_v.store_force "current" val_tgt;; 
module Tgv_v = Target_value_v;;
let val_tgt = Tgv_v.make smb_ent smb_cat smb_mod ;;
Tvp_v.store_force "current" val_tgt;; 
let command_line ="symbol type atom";;
let w_l = Str_v.split_of_c ' ' command_line ;; (* symbol type atom *)
module Str_v = String_v 
module Mds_v = Module_symbol_v
module Mdv_v = Module_value_v
module Ens_v = Entity_symbol_v
module Cts_v = Category_symbol_v
module Tgv_v = Target_value_v
module Tvp_v = Target_value_provider_v
;;
let w_l = Str_v.split_of_c ' ' command_line ;; (* symbol type atom *)
let nam_cat = List.nth w_l 0;; 
let nam_mod = List.nth w_l 1;; 
let nam_ent = List.nth w_l 2;; 
let smb_cat = Cts_v.make nam_cat;;
let smb_ent = Ens_v.make nam_ent;;
let smb_mod = Mds_v.make nam_mod;;let val_tgt = Tgv_v.make smb_ent smb_cat smb_mod ;;
Tvp_v.store_force "current" val_tgt;;
let val_tgt = Tgv_v.make smb_ent smb_cat smb_mod ;;
Tvp_v.store_force "current" val_tgt;;
 let kyl_mod = [("module", Mds_v.name smb_mod); ("category", Cts_v.name smb_cat); ("entity", Ens_v.name smb_ent)];;
let val_mod =  Mdv_v.make kyl_mod;;
Mdv_v.write stdout val_mod;;
#use "taggregate_type_module_value_v.ml";; 
frm_mod;;
#use "taggregate_constructor_symbol_v.ml";; 
 Cns_v.make nam_ent;;
Cns_v.is_datastructure_one_constructor_symbol_of_constructorname nam_ent;;
Cns_v.module_abbreviation (Cns_v.make nam_ent);;
Cns_v.entity_symbol_off_constructor_symbol (Cns_v.make nam_ent);;
#use "taggregate_constructor_symbol_v.ml";; 
Cns_v.entity_constructor_symbol_off_constructor_symbol smb_cns;;
Cns_v.entity_symbol_off_constructor_symbol smb_cns;;
#use "taggregate_constructor_symbol_v.ml";; 
Cns_v.entity_symbol_off_constructor_symbol smb_cns;;
#use "taggregate_constructor_symbol_v.ml";; 
smb_cns_l;;
#use "taggregate_constructor_symbol_v.ml";; 
smb_cnt_t;;
Cstp_v.provide "atom_onetied_single";;
#use "taggregate_constructor_symbol_v.ml";; 
let dat_ent = End_v.entity_data_of_entityname nam_ent;;
#use "taggregate_constructor_symbol_v.ml";; 
smb_cnt_t;;
#use "taggregate_constructor_symbol_v.ml";; 
smb_cnt_t;;
#use "taggregate_constructor_symbol_v.ml";; 
smb_cns_l;;
#use "taggregate_constructor_symbol_v.ml";; 
Cns_v.is_entity_constructor_symbol_of_constructorname nam_cnt;;
Cns_v.is_entity_constructor_symbol_of_constructorname "aggregate";;
#use "entity_data_v.ml";; 
#use "taggregate_constructor_symbol_v.ml";; 
string_tree_of_entityname nam_ent;;
let dat_ent = entity_data_of_entityname nam_ent;;
is_entityname_of_string "doublet string ordinal";;
#use "entity_data_v.ml";; 
string_tree_of_entityname nam_ent;;
  let nam_ent_l = 
    entityname_son_list_of_entityname nam_ent 
;;
    entityname_son_list_of_entityname nam_ent ;;
let nam_ent_l =    entityname_son_list_of_entityname nam_ent ;;
is_datastructure_of_entityname "doublet string ordinal";;
Str_v.split_of_c ' ' "doublet string ordinal";;
entityname_son_list_of_entityname nam_ent;;
entityname_son_list_of_entityname "doublet string ordinal";;
entityname_son_list_of_entityname "string";;
Tre_v.make_of_node
    nam_ent [];;
let rec string_tree_of_entityname nam_ent =
  let nam_ent_l = 
    entityname_son_list_of_entityname nam_ent 
  in
  Tre_v.make_of_node
    nam_ent 
    (List.map string_tree_of_entityname nam_ent_l)
 ;;
List.map string_tree_of_entityname [];;
let rec string_tree_of_entityname nam_ent =
  let nam_ent_l = 
    entityname_son_list_of_entityname nam_ent 
  in
  match nam_ent_l with 
  | [] -> Tre_v.make_of_leaf nam_ent
  | _ ->
      Tre_v.make_of_node
	nam_ent 
	(List.map string_tree_of_entityname nam_ent_l)
;;
string_tree_of_entityname nam_ent;;
let rec string_tree_of_entityname nam_ent =
  let nam_ent_l = 
    entityname_son_list_of_entityname nam_ent 
  in
  match nam_ent_l with 
  | [] -> Tre_v.make_of_leaf nam_ent
  | h :: [] ->Tre_v.make_of_leaf nam_ent
  | _ ->
      Tre_v.make_of_node
	nam_ent 
	(List.map string_tree_of_entityname nam_ent_l)
string_tree_of_entityname nam_ent;;
let rec string_tree_of_entityname nam_ent =
  let nam_ent_l = 
    entityname_son_list_of_entityname nam_ent 
  in
  match nam_ent_l with 
  | [] -> Tre_v.make_of_leaf nam_ent
  | h :: [] -> failwith "XXX"
  | _ ->
      Tre_v.make_of_node
	nam_ent 
	(List.map string_tree_of_entityname nam_ent_l)
;;
string_tree_of_entityname nam_ent;;
let rec string_tree_of_entityname nam_ent =
  let nam_ent_l = 
    entityname_son_list_of_entityname nam_ent 
  in
  match nam_ent_l with 
  | [] -> Tre_v.make_of_leaf nam_ent
  | h :: [] -> print_string h; print_newline ();failwith "XXX"
  | _ ->
      Tre_v.make_of_node
	nam_ent 
	(List.map string_tree_of_entityname nam_ent_l)
;;
string_tree_of_entityname nam_ent;;
let nam_ent_l = 
    entityname_son_list_of_entitynam"doublet string ordinal";;
    entityname_son_list_of_entityname "doublet string ordinal";;
let nam_ent_l = 
    entityname_son_list_of_entityname"doublet";;
let entityname_son_list_of_entityname nam_ent =
  if is_entityname_of_string nam_ent 
  then entity_data_of_entityname nam_ent 
  else 
    if is_datastructure_of_entityname nam_ent
    then 
      begin
	let w_l = Str_v.split_of_c ' ' nam_ent in
	if List.length w_l < 3
	then []
	else w_l
      end
    else []
;;
entityname_son_list_of_entityname "doublet";;
entityname_son_list_of_entityname "atom";;
entityname_son_list_of_entityname "string";;
let rec string_tree_of_entityname nam_ent =
  let nam_ent_l = 
    entityname_son_list_of_entityname nam_ent 
  in
  match nam_ent_l with 
  | [] -> Tre_v.make_of_leaf nam_ent
  | _ ->
      Tre_v.make_of_node
	nam_ent 
	(List.map string_tree_of_entityname nam_ent_l)
;;
string_tree_of_entityname nam_ent;;
let entityname_son_list_of_entityname nam_ent =
  if is_entityname_of_string nam_ent 
  then entity_data_of_entityname nam_ent 
  else 
    if is_datastructure_of_entityname nam_ent
    then 
      begin
	let w_l = List.tl (Str_v.split_of_c ' ' nam_ent) in
	if List.length w_l < 2
	then []
	else w_l
      end
    else []
;;
entityname_son_list_of_entityname nam_ent;;
entityname_son_list_of_entityname "doublet string ordinal";;
#use "entity_data_v.ml";;
entityname_son_list_of_entityname nam_ent;;
is_datastructure_of_entityname nam_ent;;
nam_ent;;
is_datastructure_of_string "aggregate"
;;
is_datastructure_of_string "aggregate"
#use "entity_data_v.ml";;
let nam_ent = "aggregate";;
string_tree_of_entityname nam_ent ;;
is_datastructure_of_string nam_ent ;;
entityname_son_list_of_datastructure_string nam_ent;;
is_datastructure_of_string nam_ent;;
entityname_son_list_of_datastructure_string nam_ent;;
let str = nam_ent;;
let w_l = List.tl (Str_v.split_of_c ' ' str);;
#use "entity_data_v.ml";;
entityname_son_list_of_datastructure_string nam_ent;;
entityname_son_list_of_entityname nam_ent;;
entityname_son_list_of_datastructure_entityname nam_ent;;
#use "entity_data_v.ml";;
let nam_ent = "aggregate";;
let str = nam_ent;;
entityname_son_list_of_datastructure_entityname nam_ent;;
is_datastructure_of_string str;;
let dat_ent = entity_data_of_entityname nam_ent;;
let w_l = List.tl (Str_v.split_of_c ' ' nam_ent) ;;
Str_v.split_of_c ' ' nam_ent;;
let w_l = List.tl (Str_v.split_of_c ' ' dat_ent);;
let dat_ent = entity_data_of_entityname nam_ent ;;
let w_l = List.tl (Str_v.split_of_c ' ' dat_ent);;
let str = List.hd dat_ent ;;
let w_l = List.tl (Str_v.split_of_c ' ' str);;
entityname_son_list_of_datastructure_entityname nam_ent ;;
let entityname_son_list_of_datastructure_entityname nam_ent = 
  if not (is_datastructure_of_string str)
  then failwith "End_v.String_does_not_represent_a_datastructure" 
  else
    begin
      let dat_ent = entity_data_of_entityname nam_ent in
      let str = List.hd dat_ent in
      let w_l = List.tl (Str_v.split_of_c ' ' str) in
      if List.length w_l < 2
      then []
      else w_l
    end
;;
entityname_son_list_of_datastructure_entityname nam_ent;;
nam_ent;;
let is_datastructure_of_string str = (* aggregate is one *)
  if not (is_entityname_of_string str)
  then false
  else
    begin
      let dat_ent = entity_data_of_entityname str in
      if List.length dat_ent <> 1
      then false
      else
	begin
	  (* dat_ent = ["doublet string integer"] *)
	  (* dat_ent = ["triplet string integer float"] *)
	  let head = Scanf.sscanf (List.hd dat_ent) "%s " (fun w -> w ) in
	  match head with 
	  | "doublet" 
	  | "triplet" 
	  | "tree" -> true
	  | _ -> false 
	end
    end
;;
is_datastructure_of_string str;;
str;;
is_datastructure_of_string nam_ent;;
entityname_son_list_of_datastructure_entityname nam_ent;;
 not (is_datastructure_of_string str);;
entityname_son_list_of_datastructure_entityname nam_ent;;let entityname_son_list_of_datastructure_entityname nam_ent = 
  if not (is_datastructure_of_string nam_ent)
  then failwith "End_v.String_is_not_a_datastructure" 
  else
    begin
      let dat_ent = entity_data_of_entityname nam_ent in
      let str = List.hd dat_ent in
      let w_l = List.tl (Str_v.split_of_c ' ' str) in
      if List.length w_l < 2
      then []
      else w_l
    end
;;
let entityname_son_list_of_datastructure_entityname nam_ent = 
  if not (is_datastructure_of_string nam_ent)
  then failwith "End_v.String_is_not_a_datastructure" 
  else
    begin
      let dat_ent = entity_data_of_entityname nam_ent in
      let str = List.hd dat_ent in
      let w_l = List.tl (Str_v.split_of_c ' ' str) in
      if List.length w_l < 2
      then []
      else w_l
    end
;;
not (is_datastructure_of_string nam_ent)
;;
entityname_son_list_of_datastructure_entityname nam_ent;;
 entityname_son_list_of_entityname nam_ent;;
is_datastructure_of_string nam_ent;;
entityname_son_list_of_datastructure_entityname nam_ent;;
let entityname_son_list_of_entityname nam_ent =
  if is_datastructure_of_string nam_ent
  then entityname_son_list_of_datastructure_entityname nam_ent
  else
    begin
      if is_entityname_of_string nam_ent 
      then entity_data_of_entityname nam_ent 
      else [] 
    end
;;
entityname_son_list_of_entityname nam_ent;;
let rec string_tree_of_entityname nam_ent =
  let nam_ent_l = 
    entityname_son_list_of_entityname nam_ent 
  in
  match nam_ent_l with 
  | [] -> Tre_v.make_of_leaf nam_ent
  | _ ->
      Tre_v.make_of_node
	nam_ent 
	(List.map string_tree_of_entityname nam_ent_l)
;;
string_tree_of_entityname nam_ent;;
 let nam_ent_l = 
    entityname_son_list_of_entityname nam_ent ;;
#use "entity_data_v.ml";; 
let nam_ent="aggregate";;
 entityname_son_list_of_datastructure_entityname nam_ent;;
#use "entity_data_v.ml";; 
let nam_ent="aggregate";;
let nam_ent_l = 
	entityname_son_list_of_datastructure_entityname nam_ent;;
string_tree_of_datastructure_entityname nam_ent;;
#use "entity_data_v.ml";; 
entityname_son_list_of_entityname nam_ent ;;
#use "entity_data_v.ml";; 
entityname_son_list_of_entityname nam_ent ;;
string_tree_of_entityname nam_ent;;
#use "taggegrate_constructor_symbol_v.ml";; 
#use "taggegate_constructor_symbol_v.ml";; 
#use "taggregate_constructor_symbol_v.ml";; 
#use "entity_data_v.ml";; 
let str_t = string_tree_of_entityname nam_ent 
;;
#use "constructor_symbol_v.ml";; 
let str_t = string_tree_of_entityname nam_ent ;;
Tre_v.map Cns_v.make str_t;;
#use "taggregate_constructor_symbol_v.ml";; 
smb_cnt_t;;
Cns_v.constructor_symbol_list_of_entityname nam_ent;;
Cns_v.constructor_symbol_list_of_entityname nam_ent;;let constructor_symbol_list_of_entityname nam_ent =
  let nam_ent_l = End_v.entityname_son_list_of_entityname nam_ent
  List.map Cns_v.make dat_ent
;;
module Cns_v = Constructor_symbol_v
module Cts_v = Category_symbol_v
module Ens_v = Entity_symbol_v
module End_v = Entity_data_v
module Edp_v = Entity_data_provider_v
module Tre_v = Tree_v 
;;
let constructor_symbol_list_of_entityname nam_ent =
  let nam_ent_l = End_v.entityname_son_list_of_entityname nam_ent
  List.map Cns_v.make dat_ent
;;
#use "constructor_symbol_tree_v.ml";; 
 make nam_ent;;
#use "taggregate_constructor_symbol_v.ml";; 
smb_cns_l;;
#use "taggregate_constructor_symbol_v.ml";; 
#use "tdoublet_aggregate_constructor_symbol_v.ml";; 
smb_cnt_dbl;;
#use "tdoublet_aggregate_constructor_symbol_v.ml";; 
Cns_v.make_of_datastructure_node_pure_constructor_symbol_string nam_ent;;
#use "tdoublet_aggregate_constructor_symbol_v.ml";; 
let smb_cnt = Cns_v.make nam_ent;;
End_v.entityname_son_list_of_entityname nam_ent;;
module Cns_v = Constructor_symbol_v
module Cts_v = Category_symbol_v
module Ens_v = Entity_symbol_v
module End_v = Entity_data_v
module Edp_v = Entity_data_provider_v
module Tre_v = Tree_v ;;
End_v.entityname_son_list_of_entityname nam_ent;;
let str_t = End_v.string_tree_of_entityname nam_ent;;
smb_cns_l;;
#use "tdoublet_aggregate_constructor_symbol_v.ml";; 
#use "taggregate_constructor_symbol_v.ml";; 
Cns_v.entity_symbol_off_constructor_symbol smb_cnt;;
smb_cnt_t;;
#use "taggregate_constructor_symbol_v.ml";; 
let str_t = End_v.string_tree_of_entityname nam_ent;;
#use "taggregate_constructor_symbol_v.ml";; module End_v = Entity_data_v;;
module End_v = Entity_data_v;;
let str_t = End_v.string_tree_of_entityname nam_ent;;
#use "entity_data_v.ml";; 
nam_ent;;
entityname_son_list_of_datastructure_entityname nam_ent;;
#use "taggregate_constructor_symbol_v.ml";; 
smb_ent;;
Ens_v.make "aggregate"";;
Ens_v.make "aggregate";;
#use "taggregate_constructor_symbol_v.ml";; 
smb_epr;;
#use "taggregate_constructor_symbol_v.ml";; 
dat_ent;;
smb_ent;;
dat_ent;;
let rec string_tree_of_entityname nam_ent =
  let nam_ent_l = 
    constructorson_name_list_of_entityname nam_ent 
  in
  match nam_ent_l with 
    | [] -> Tre_v.make_of_leaf nam_ent
    | h:: t_l ->
	Tre_v.make_of_node
	  nam_ent 
	  [Tre_v.make_of_node h  (* name of datastructure *) 
	     (List.map string_tree_of_entityname t_l)]
;;
let rec string_tree_of_entityname nam_ent =
  let dat_ent = entity_data_of_entityname nam_ent in
   match dat_ent with 
    | [] -> Tre_v.make_of_leaf nam_ent
    | h::t_l ->
	Tre_v.make_of_node
	  nam_ent 
	  [Tre_v.make_of_node h  (* name of datastructure *) 
	     (List.map string_tree_of_entityname t_l)]
;;
#use "entity_data_v.ml";;
string_tree_of_entityname "aggregate";;
is_entityname_of_string "doublet string ordinal";;
entity_data_of_entityname "trec";;
let rec string_tree_of_entityname nam_ent =
  let dat_ent = entity_data_of_entityname nam_ent in
   match dat_ent with 
    | [] -> Tre_v.make_of_leaf nam_ent
    | h::t_l ->
	Tre_v.make nam_ent
    [List.map string_tree_of_entityname dat_ent]
;;
Tre_v.make;;
#use "entity_data_v.ml";;
entity_data_of_entityname "trec";;
string_tree_of_entityname "aggregate";;
entitynameson_list_of_datastructure_entityname nam_ent ;;
#use "tdoublet_aggregate_constructor_symbol_v.ml";; 
smb_cnt;;
Ens_v.is_datastructure_of_entity_symbol smb_ent;;
(
dat_ent 
(* : string list *)
= 
["doublet string ordinal"]
);;
smb_cnt_t;;
let smb_cnt_t = Cstp_v.provide smb_ent;;
#use "entity_symbol_v.ml",,
#use "entity_symbol_v.ml";;
let smb_epr = "aggregate";;
make_proper_of_string "aggregate"
;;
let smb_epr = make_proper_of_string "aggregate";;
Ens_t.Entity_fictive_symbol (make_fictive_of_string "aggregate";;
 make_fictive_of_string "aggregate";;
make_proper_of_string "aggregate";;
let make str =
  try (Ens_t.Entity_fictive_symbol (make_fictive_of_string str))  
  with Failure "Not_entity_fictive_symbol:Ens_v.make_fictive_of_string" ->  
    try Ens_t.Entity_proper_symbol (make_proper_of_string str) 
    with Failure "Not_entity_proper_symbol:Ens_v.make_proper_of_string" ->
      print_fatal_error "make" "Entity_symbol" str "check or add a new subtype"
;;
make "aggregate";;
#use "tdoublet_aggregate_constructor_symbol_v.ml";; 
smb_cnt_t;;
let smb_cnt_t = Cstp_v.provide smb_ent;;
#use "tdoublet_aggregate_constructor_symbol_v.ml";; 
let smb_cnt_t = Cstp_v.provide smb_ent;;
#use "constructor_symbol_tree_v.ml";; 
#use "tdoublet_aggregate_constructor_symbol_v.ml";; 
let smb_cnt = Cns_v.make nam_ent;;
let nam_ent = "aggregate";;
let dat_ent = Edp_v.provide nam_ent;;
let smb_epr = Ens_v.make_proper_of_string nam_ent;; 
let smb_ent = Ens_v.make nam_ent;;
let smb_cnt = Cns_v.make nam_ent;;
let smb_cnt = Cns_v.make smb_ent;;
et str_t = End_v.string_tree_of_entityname nam_ent;;
let str_t = End_v.string_tree_of_entityname nam_ent;;
entityson_symbol_list_of_entity_datastructure_symbol smb_ent ;;
(
Est_v.entityson_symbol_list_of_entity_datastructure_symbol smb_ent
(* : Entity_symbol_t.entity_symbol list *)
=
[Entity_symbol_t.Entity_fictive_symbol Entity_symbol_t.String;
 Entity_symbol_t.Entity_fictive_symbol Entity_symbol_t.Ordinal]
);;
#use "constructor_symbol_tree_v.ml";; 
#use "tdoublet_aggregate_constructor_symbol_v.ml";; 
let smb_ent_t = Est_v.make smb_ent;;
smb_ent;;
let smb_ent_t = Est_v.make smb_ent;;
let nam_ent = Ens_v.name smb_ent;;
let str_t = End_v.string_tree_of_entityname nam_ent;;
Ens_v.make  "doublet string ordinal";;
let smb_cnt = Cns_v.make smb_ent;;
#use "entity_symbol_tree_v.ml";; 
make smb_ent;;
#use "tdoublet_aggregate_constructor_symbol_v.ml";; 
smb_cnt_t;;
#use "tdoublet_aggregate_constructor_symbol_v.ml";; 
smb_cns_l;;
smb_cnt_dbl;;
nam_ent_t;;
#use "tdoublet_aggregate_constructor_symbol_v.ml";; 
nam_ent_t;;
let nam_ent_t = End_v.string_tree_of_entityname nam_ent;;
module End_v = Entity_data_v
module Ens_v = Entity_symbol_v
module Est_v = Entity_symbol_tree_v
module Edp_v = Entity_data_provider_v
;;
let nam_ent_t = End_v.string_tree_of_entityname nam_ent;;
smb_ent_t ;;
let smb_ent_t = Est_v.make smb_ent;;
#use "tdoublet_aggregate_constructor_symbol_v.ml";; 
 #use "tatom_onetied_single_extracting_item_formula_v.ml";; 
let smb_ent = Ens_v.make nam_ent;;
 #use "tatom_onetied_single_extracting_item_formula_v.ml";; 
mrk_cnt_t;;
let mrk_cnt_t = Cmtp_v.provide smb_ent;;
let smb_cnt_t = Cstp_v.provide smb_ent;;
module Cstp_v = Constructor_symbol_tree_provider_v;;
let smb_cnt_t = Cstp_v.provide smb_ent;;
 #use "tatom_onetied_single_extracting_item_formula_v.ml";; 
 #use "entity_data_v.ml";; 
oneson_string_of_entityname nam_ent;;
let str = oneson_string_of_entityname nam_ent;;
is_oneson_of_entityname nam_ent;;
nam_ent;;
#use "tatom_onetied_single_extracting_item_formula_v.ml";; 
#use "entity_data_v.ml";;
nam_ent;;
entity_data_filename_of_entityname nam_ent;;
let fln_ent = End_v.entity_data_filename_of_entityname nam_ent;;
End_v.is_entityname_of_string nam_ent;;
let dat_ent = End_v.entity_data_of_entityname nam_ent;;
 (
count_son_of_entityname nam_ent
=
2
);;
End_v.count_son_of_entityname nam_ent;;
(
End_v.count_son_of_entityname nam_ent
(* Index_p.index *)
= 
Index_p.two
);;
End_v.is_oneson_of_entityname nam_ent;;
#use "tatom_onetied_single_extracting_item_formula_v.ml";; 
End_v.is_datastructure_of_entityname nam_ent ;;
 mrk_cnt_t;;
End_v.string_tree_of_entityname nam_ent;;
 Cstp_v.provide smb_ent;;
 End_v.is_entityname_of_string nam_ent;;
make_fictive_of_string str;;
#use "entity_symbol_v.ml";;;;
make_fictive_of_string nam_ent;;
make_proper_of_string nam_ent;;
let make str =
  try (Ens_t.Entity_fictive_symbol (make_fictive_of_string str))  
  with Failure "Not_entity_fictive_symbol:Ens_v.make_fictive_of_string" ->  
    try Ens_t.Entity_proper_symbol (make_proper_of_string str) 
    with Failure "Not_entity_proper_symbol:Ens_v.make_proper_of_string" ->
      failwith "Not_entity_symbol:Ens_v.make" 
;;
make nam_ent;;
#use "tatom_onetied_single_extracting_item_formula_v.ml";; 
let smb_cnt_t = Cstp_v.provide smb_ent;;
smb_ent;;
#use "tatom_onetied_single_extracting_item_formula_v.ml";; 
smb_ent_t;;
let smb_ent_t = Est_v.make smb_ent;;
#use  #use "tatom_onetied_single_entity_data_v.ml";; 
#use "tatom_onetied_single_entity_data_v.ml";; 
let nam_ent = Ens_v.name smb_ent;;
let str_t = End_v.string_tree_of_entityname nam_ent ;;
let se = Ens_v.make s;;
Ens_v.make "atom_onetied_single";;
let se = Ens_v.make "atom_onetied_single";;
(Ens_v.is_datastructure_of_entity_symbol se);;
Tre_v.root_off_tree (Tree_t.Leaf "h_s");;
Ens_v.make "h_s"
;;
#use "tatom_onetied_single_entity_data_v.ml";; 
smb_ent_t;;
#use "taggregate_constructor_symbol_v.ml";; 
smb_cnt_t;;
#use "taggregate_constructor_symbol_v.ml";; 
smb_cns_l;;
#use "tatom_onetied_single_extracting_item_formula_v.ml";; 
mrk_cne_t;;
 (
mrk_cne_t 
(* : Cmtp_v.Csdt_t.Cnm_t.constructor_marker Tree_t.tree *)
=
Tree_t.Leaf
 (Cmtp_v.Csdt_t.Cnm_t.Cns_t.Constructor_proper_symbol
   (Cmtp_v.Csdt_t.Cnm_t.Cns_t.Constructor_several_symbol
     "atom_onetied_single"), 
  1)
);;
#use "tatom_onetied_single_extracting_item_formula_v.ml";; 
(
mrk_cne_t 
(* : Cmtp_v.Csdt_t.Cnm_t.constructor_marker Tree_t.tree *)
=
Tree_t.Leaf
 (Cmtp_v.Csdt_t.Cnm_t.Cns_t.Constructor_proper_symbol
   (Cmtp_v.Csdt_t.Cnm_t.Cns_t.Constructor_several_symbol
     "atom_onetied_single"), 
  1)
);;
(
 mrk_cnt_t
(* : Cmtp_v.Csdt_t.constructor_marker_tree *)
=
Cmtp_v.Csdt_t.Tre_t.Node
 ((Cmtp_v.Csdt_t.Cnm_t.Cns_t.Constructor_proper_symbol
    (Cmtp_v.Csdt_t.Cnm_t.Cns_t.Constructor_several_symbol
      "atom_onetied_single"),
   1),
 [Cmtp_v.Csdt_t.Tre_t.Leaf
   (Cmtp_v.Csdt_t.Cnm_t.Cns_t.Constructor_fictive_symbol
     (Cmtp_v.Csdt_t.Cnm_t.Cns_t.Leaf_constructor_fictive_symbol
       (Cmtp_v.Csdt_t.Cnm_t.Cns_t.Constructor_leave_symbol "h_s")),
    2);
  Cmtp_v.Csdt_t.Tre_t.Leaf
   (Cmtp_v.Csdt_t.Cnm_t.Cns_t.Constructor_fictive_symbol
     (Cmtp_v.Csdt_t.Cnm_t.Cns_t.Leaf_constructor_fictive_symbol
       (Cmtp_v.Csdt_t.Cnm_t.Cns_t.Constructor_leave_symbol "f_s")),
    2)])
);;
mrk_cnt_t;;
#use "tatom_onetied_single_extracting_item_formula_v.ml";; 
frm_itm;;
#use "tatom_onetied_single_extracting_item_formula_v.ml";; 
#use "tatom_onetied_querying_item_formula_v.ml";; 
 mrk_cnt_t;;
mrk_cne_t;;
#use "tatom_onetied_querying_item_formula_v.ml";; 
let mrk_cnt_t = Cmtp_v.provide smb_ent;;
#use "tatom_onetied_querying_item_formula_v.ml";; 
#use "tatom_onetied_single_constructor_marker_tree_v.ml";; 
let smb_cnt = Cns_v.make smb_ent;;
#use "tatom_onetied_single_constructor_marker_tree_v.ml";; 
smb_cnt;;
 #use "tatom_onetied_extracting_item_formula_v.ml";; 
 mrk_cnt_t;;
let mrk_cnt_t = Cmtp_v.provide smb_cnt;;
 #use "tatom_onetied_extracting_item_formula_v.ml";; 
 #use "constructor_symbol_v.ml";; 
constructor_oneline_symbol_of_entity_proper_symbol smb_epr;;
smb_epr;;
 #use "tatom_onetied_single_constructor_marker_tree_v.ml";; 
 #use "constructor_symbol_v.ml";; 
#use "tatom_onetied_extracting_item_formula_v.ml";; 
 #use "tatom_onetied_constructor_marker_tree_v.ml";; 
smb_cnt;;
smb_ent_t;;
#use "tatom_onetied_single_constructor_marker_tree_v.ml";; 
 smb_cnt_t
;;
 #use "tatom_onetied_constructor_marker_tree_v.ml";; 
#use "constructor_symbol_tree_v.ml";;
constructor_symbol_tree_of_entity_symbol smb_ent;;
 let smb_ent_t = Est_v.make smb_ent;;
Cns_v.make (Entity_symbol_t.Entity_proper_symbol "atom_onetied_conjugated");;
#use "tatom_onetied_conjugated_entity_data_v.ml";; 
dat_ent;;
End_v.count_son_of_entityname nam_ent;;
End_v.is_singleson_of_entityname nam_ent;;
End_v.is_datastructure_of_entityname nam_ent ;;
smb_str_t ;;
 smb_ent_t;;
#use "tatom_onetied_conjugated_entity_data_v.ml";; 
 #use "tatom_onetied_conjugated_constructor_marker_tree_v.ml";; 
smb_cnt;;
let smb_ent = Ens_v.entity_symbol_of_entity_proper_symbol smb_epr;;
let smb_cnt = Cns_v.make smb_ent;;
#use "constructor_symbol_v.ml";;
smb_ent;;
is_constructor_several_symbol_of_constructorname nam_ent;;
is_constructor_proper_symbol_of_constructorname nam_ent;;
is_constructor_oneline_symbol_of_constructorname nam_ent;;
is_constructor_datastructure_symbol_of_constructorname nam_ent;;
is_constructor_oneline_basicnamed_symbol_of_constructorname nam_ent;;
constructor_symbol_of_entity_proper_symbol smb_epr;;
let smb_epr = Ens_v.entity_proper_symbol_of_string nam_ent;;
let cnt_son = End_v.count_son_of_entityname smb_epr;;
constructor_oneline_symbol_of_entity_proper_symbol smb_epr;;
constructor_symbol_of_entity_proper_symbol smb_epr;;
smb_epr;;
 #use "tatom_onetied_extracting_item_formula_v.ml";; 
 mrk_cnt_t;;
mrk_cne_t ;;
frm_itm;;
 #use "tatom_onetied_extracting_item_formula_v.ml";; 
 #use "tatom_onetied_upgrading_item_formula_v.ml";; 
#use "tatom_onetied_upgrading_item_formula_v.ml";; 
mrk_cnt_t;;
List.nth smb_cpg_l 2;;
#use "tatom_onetied_upgrading_item_formula_v.ml";; 
List.nth smb_cpg_l 6;;
List.nth smb_cpg_l 7 ;;
 #use "tatom_onetied_single_implementation_extracting_item_value_v.ml";; 
mrk_cnt_t;;
pth_cnl_t ;;
fln_itm::
;;
fln_itm;;
#use "tatom_onetied_upgrading_item_formula_v.ml";; 
#use "tatom_onetied_upgrading_item_formula_v.ml";;  #use "tatom_onetied_querying_item_value_v.ml";; 
 #use "tatom_onetied_querying_item_value_v.ml";; 
 #use "tatom_onetied_querying_item_value_v.ml";;
#use "tatom_onetied_implementation_querying_item_value_v.ml";; 
 mrk_cnt_t;;
mrk_cne_t ;;
#use "tatom_onetied_interface_querying_item_value_v.ml";; 
mrk_cnt_t;;
#use "tatom_onetied_interface_querying_item_value_v.ml";; 
#use "tatom_onetied_interface_upgrading_item_value_v.ml";; 
 #use "tatom_onetied_implementation_upgrading_item_value_v.ml";; 
 mrk_cnt_t;;
 #use "tatom_onetied_implementation_upgrading_item_value_v.ml";; 
(
List.length smb_cpg_l
(* : int *)
= 
11
);;
(
nam_fil_itm
(* : string *)
= 
"atom_onetied_symbol_upgrading_v.ml"
);;
let nam_fil_itm = Itv_v.item_file_name_of_key_list kyl_itm;;
let val_itm = Itv_v.make kyl_itm;;
 (
List.length smb_cpg_l
(* : int *)
= 
11
);;
(
nam_fil_itm
(* : string *)
= 
"atom_onetied_symbol_upgrading_v.ml"
);;
#use "tatom_onetied_single_item_formula_v.ml";; 
 #use "tatom_onetied_interface_upgrading_item_value_v.ml";; 
let val_itm = Itv_v.make kyl_itm;;
let mrk_cnt_t = Cmtp_v.provide smb_cnt;;
#use "tatom_onetied_implementation_upgrading_item_value_v.ml";; 
 *) #use "tatom_onetied_constructor_marker_tree_v.ml";; 
 #use "tatom_onetied_constructor_marker_tree_v.ml";; 
let smb_ent_t = Est_v.make smb_ent;;
 #use "tatom_onetied_entity_symbol_v.ml";; 
smb_epr;;
let smb_ent = Ens_v.entity_symbol_of_entity_proper_symbol smb_epr;;
 #use "tatom_onetied_entity_symbol_v.ml";; 
 #use "tatom_onetied_entity_symbol_tree_v.ml";; 
let str_t = End_v.string_tree_of_entityname nam_ent;;
let smb_ent_t = Est_v.make smb_ent;;
 #use "tatom_onetied_conjugated_entity_symbol_tree_v.ml";; 
smb_ent ;;
str_t ;;
let nam_ent = Ens_v.name smb_ent;;
let str_t = End_v.string_tree_of_entityname nam_ent;;
se = Ens_v.make s;;
Tre_v.root_off_tree (Tree_t.Leaf "o_c");;
Ens_v.make "o_c"
;;
#use "entity_symbol_v.ml";;
entity_fictive_symbol_of_string nam_ent;;
entity_fictive_symbol_of_string "o_c";;
 make "o_c";;
 #use "tatom_onetied_conjugated_entity_symbol_tree_v.ml";; 
smb_ent_t;;
 #use "tatom_onetied_conjugated_entity_symbol_tree_v.ml";; 
 #use "tatom_onetied_interface_upgrading_item_value_v.ml";; 
 mrk_cnt_t;;
 (
List.length smb_cpg_l
(* : int *)
= 
11
);;
(
nam_fil_itm
(* : string *)
= 
"atom_onetied_symbol_upgrading_v.mli"
 #use "tatom_onetied_interface_upgrading_item_value_v.ml";; 
mrk_cnt_t;;
 #use "tatom_onetied_single_item_formula_v.ml";; 
#use "tatom_onetied_single_item_formula_v.ml";; 
 mrk_cnt_t;;
mrk_cne_t ;;
(
frm_itm
(* : Item_formula_t.item_formula *)
=
Item_formula_t.Tre_t.Leaf
 (Item_formula_t.Cpg_t.Heading_symbol
   ([(Item_formula_t.Cpg_t.Cpc_t.Cnp_t.Cnm_t.Cns_t.Constructor_proper_symbol
       (Item_formula_t.Cpg_t.Cpc_t.Cnp_t.Cnm_t.Cns_t.Constructor_several_symbol
         "atom_onetied_single"),
      1)],
    [("item", "extracting"); ("module", "function"); ("category", "symbol");
     ("entity", "atom_onetied_single")]))
);;
#use "tatom_onetied_single_item_formula_v.ml";; 
frm_itm;;
#use "tatom_onetied_conjugated_constructor_marker_tree_v.ml";; 
smb_cnt;;
#use "tatom_onetied_conjugated_constructor_marker_tree_v.ml";; 
 smb_ent_t;;
smb_cnt_t;;
 #use "tatom_onetied_entity_symbol_tree_v.ml";;
smb_ent_t ;;
 #use "tatom_onetied_entity_symbol_tree_v.ml";;
#use "tatom_onetied_interface_extracting_item_value_v.ml";;
#use "tatom_onetied_querying_item_formula_v.ml";; 
 mrk_cnt_t;;
mrk_cne_t ;;
frm_itm;;
 #use "tatom_abbreviating_implementation_module_value_v.ml";; 
 #use "tatom_implementation_abbreviating_module_value_v.ml";; 
(
frm_mod
(* Item_symbol_t.item_symbol list *) 
= 
[Its_v.heading;
 Its_v.modules;
 Its_v.naming;
 Its_v.printing;
 Its_v.extracting;
 Its_v.querying;
 Its_v.upgrading;
 Its_v.including;
 Its_v.ending]
);;
 (
fln_mod
(* : string *)
= 
"atom_symbol_v.ml"
);;
 #use "tatom_implementation_abbreviating_item_value_v.ml";; 
#use "tatom_onetied_implementation_abbreviating_item_value_v.ml";; 
 #use "tatom_onetied_constructor_marker_tree_v.ml";; 
Cmt_v.make;;
 #use "tatom_onetied_constructor_marker_tree_v.ml";; 
Cns_v.entity_symbol_off_constructor_symbol smb_cnt;;
 #use "tatom_onetied_constructor_marker_tree_v.ml";; 
 #use "constructor_symbol_v.ml";; 
#use "tatom_onetied_conjugated_caml_paragraph_typing_formula_v.ml";; 
frm_cpg ;;
ctt_cps_l;;
 #use "tatom_onetied_constructor_marker_tree_v.ml";; 
#use "tatom_onetied_implementation_abbreviating_item_value_v.ml";; 
#use "tatom_onetied_conjugated_caml_paragraph_typing_formula_v.ml";; 
 ctt_cps_l ;;
#use "tatom_onetied_conjugated_caml_paragraph_typing_formula_v.ml";; 
#use "tatom_onetied_conjugated_caml_paragraph_upgrading_formula_v.ml";; 
frm_cpg ;;
ctt_cps_l ;;
#use "tatom_onetied_conjugated_caml_paragraph_typing_formula_v.ml";; 
let ctt_cpb = List.hd ctt_cps_l;;
Cps_v.caml_paragraph_symbol_of_caml_paragraph_context ctt_cpb;;
let ctt_cpg = Cpc_v.make pth_cnt kyl_itm;;
Cps_v.caml_paragraph_symbol_of_caml_paragraph_context ctt_cpb;;
let ctt_cpg = Cpc_v.make pth_cnt kyl_itm;;
Cps_v.caml_paragraph_symbol_of_caml_paragraph_context (List.hd ctt_cps_l);;
#use "tatom_onetied_conjugated_caml_paragraph_upgrading_formula_v.ml";; 
Cps_v.caml_paragraph_symbol_of_caml_paragraph_context (List.hd ctt_cps_l);;
#use "tatom_onetied_conjugated_caml_paragraph_typing_formula_v.ml";; 
#use "tatom_onetied_conjugated_caml_paragraph_upgrading_formula_v.ml";; 
#use "tatom_onetied_implementation_upgrading_item_value_v.ml";; 
 #use "tatom_onetied_conjugated_caml_paragraph_upgrading_formula_v.ml";; 
let val_itm = Itv_v.make kyl_itm;;
ctt_cpg;;
#use "caml_paragraph_context_v.ml";; 
let smb_cat = category_symbol_off_caml_paragraph_context ctt_cpg ;;
  let pth_cnt = constructor_path_off_caml_paragraph_context ctt_cpg;;
  let mrk_cns = Cnp_v.son_constructor_marker_of_constructor_path pth_cnt;;
son_entitycategorymodule_proper_off_caml_paragraph_context ctt_cpg;;
#use "tatom_onetied_implementation_upgrading_item_value_v.ml";; 
let pth_cnb = constructor_path_off_caml_paragraph_context ctt_cpg;;
#use "caml_paragraph_context_v.ml";; 
let pth_cnb = constructor_path_off_caml_paragraph_context ctt_cpg;;
 #use "tatom_onetied_conjugated_caml_paragraph_upgrading_formula_v.ml";; 
let val_itm = Itv_v.make kyl_itm;;
 #use "tatom_onetied_conjugated_caml_paragraph_upgrading_formula_v.ml";; 
ctt_cpg;;
#use "caml_paragraph_context_v.ml";; 
son_entitycategorymodule_proper_off_caml_paragraph_context ctt_cpg;;
 #use "tatom_onetied_conjugated_caml_paragraph_upgrading_formula_v.ml";; 
#use "caml_paragraph_context_v.ml";; 
son_entitycategorymodule_proper_off_caml_paragraph_context ctt_cpg;;
 #use "tatom_onetied_conjugated_caml_paragraph_upgrading_formula_v.ml";; 
#use "caml_paragraph_context_v.ml";; 
 #use "tatom_onetied_conjugated_caml_paragraph_upgrading_formula_v.ml";; 
son_caml_paragraph_context_list_off_caml_paragraph_context ctt_cpg;;
 #use "tatom_onetied_conjugated_caml_paragraph_upgrading_formula_v.ml";; 
  #use "tatom_onetied_implementation_abbreviating_item_value_v.ml";; 
  #use "tatom_onetied_implementation_upgrading_item_value_v.ml";; 
#use "tatom_onetied_conjugated_implementation_upgrading_caml_paragraph_formula_v.ml";; 
Cps_v.caml_paragraph_symbol_of_caml_paragraph_context (List.hd ctt_cps_l);;
let val_itm = Itv_v.make kyl_itm;;
 #use "tatom_onetied_conjugated_implementation_upgrading_caml_paragraph_formula_v.ml";;
ctt_cps_l ;;
  #use "tatom_onetied_implementation_upgrading_item_value_v.ml";; 
Cps_v.caml_paragraph_symbol_of_caml_paragraph_context (List.hd ctt_cps_l);;
  #use "tatom_onetied_implementation_upgrading_item_value_v.ml";; 
val_itm ;;
  #use "tatom_onetied_implementation_upgrading_item_value_v.ml";; 
 #use "tatom_onetied_conjugated_implementation_upgrading_caml_paragraph_formula_v.ml";;  
 val_itm;;
 #use "tatom_onetied_conjugated_implementation_upgrading_caml_paragraph_formula_v.ml";;  
smb_cpg;;
#use "tatom_onetied_conjugated_implementation_upgrading_item_value_v.ml";; 
(* : Constructor_path_t.constructor_path *)
=
let frm_itm = Itf_v.retrieve kyl_itm;;
#use "tatom_onetied_conjugated_implementation_upgrading_item_value_v.ml";; 
#use "tatom_onetied_implementation_upgrading_item_value_v.ml";;
val_itm ;;
 mrk_cnt_t;;
List.length smb_cpg_l;;
 (
val_itm
(* : Item_value_t.item_value *) 
=
Item_value_t.Tre_t.Node (["(** {6 Upgrading.} *)"],
 [Item_value_t.Tre_t.Node
   (["let atom_onetied_symbol_of_atom_onetied_conjugated_symbol smb_aoc =";
     "A1s_v.atom_onetied_conjugated_symbol smb_aoc"; ";;"],
   [Item_value_t.Tre_t.Leaf
     ["let o_c = atom_onetied_symbol_of_atom_onetied_conjugated_symbol A1cs_v.O_c;;"]]);
  Item_value_t.Tre_t.Node
   (["let atom_onetied_symbol_of_atom_onetied_double_symbol smb_aod =";
     "A1s_v.atom_onetied_double_symbol smb_aod"; ";;"],
   [Item_value_t.Tre_t.Leaf
     ["let o_d = atom_onetied_symbol_of_atom_onetied_double_symbol A1ds_v.O_d;;"]]);
  Item_value_t.Tre_t.Node
   (["let atom_onetied_symbol_of_atom_onetied_single_symbol smb_aos =";
     "A1s_v.atom_onetied_single_symbol smb_aos"; ";;"],
   [Item_value_t.Tre_t.Leaf
     ["let h_s = atom_onetied_symbol_of_atom_onetied_single_symbol A1ss_v.H_s;;"];
    Item_value_t.Tre_t.Leaf
     ["let f_s = atom_onetied_symbol_of_atom_onetied_single_symbol A1ss_v.F_s;;"]]);
  Item_value_t.Tre_t.Node
   (["let atom_onetied_symbol_of_atom_onetied_triple_symbol smb_aot =";
     "A1s_v.atom_onetied_triple_symbol smb_aot"; ";;"],
   [Item_value_t.Tre_t.Leaf
     ["let n_t = atom_onetied_symbol_of_atom_onetied_triple_symbol A1ts_v.N_t;;"];
    Item_value_t.Tre_t.Leaf
     ["let o_t = atom_onetied_symbol_of_atom_onetied_triple_symbol A1ts_v.O_t;;"]])])
);;
#use "tatom_onetied_conjugated_implementation_upgrading_item_value_v.ml";; 
val_itm ;;
#use "tatom_onetied_conjugated_implementation_upgrading_item_value_v.ml";; 
val_itm ;;
nam_fil_itm;;
 #use "tatom_onetied_conjugated_constructor_marker_tree_v.ml";; 
smb_cnt_t;;
 #use "taggregate_constructor_symbol_v.ml";; 
smb_cnt_t;;
 #use "taggregate_constructor_symbol_v.ml";; 
smb_cnt_t;;
smb_cns_l;;
 #use "taggregate_constructor_symbol_v.ml";; 
   #use "tatom_onetied_single_constructor_marker_tree_v.ml";; 
smb_cnt_t;;
   #use "tatom_onetied_single_constructor_marker_tree_v.ml";; 
  #use "tatom_onetied_single_extracting_item_formula_v.ml";; 
 mrk_cnt_t;;
mrk_cne_t ;;
  #use "tatom_onetied_single_extracting_item_formula_v.ml";; 
 mrk_cnt_t;;
  #use "tatom_onetied_single_extracting_item_formula_v.ml";; 
#use "tatom_onetied_single_implementation_extracting_item_value_v.ml";; 
mrk_cnt_t;;
pth_cnl_t ;;
#use "tatom_onetied_single_implementation_extracting_item_value_v.ml";; 
 #use "tatom_onetied_single_item_formula_v.ml";; 
#use "tatom_onetied_single_implementation_extracting_item_formula_v.ml";; 
mrk_cnt_t;;
mrk_cne_t ;;
frm_itm;;
#use "tatom_onetied_single_implementation_extracting_item_formula_v.ml";; 
  #use "tatom_onetied_implementation_extracting_item_formula_v.ml";; 
mrk_cnt_t;;
mrk_cne_t;;
frm_itm;;
  #use "tatom_onetied_implementation_extracting_item_formula_v.ml";; 
#use "tatom_onetied_implementation_querying_item_value_v.ml";; 
 mrk_cnt_t;;
mrk_cne_t ;;
val_itm;;
#use "tatom_onetied_implementation_querying_item_value_v.ml";; 
#use "tatom_onetied_interface_querying_item_value_v.ml";; 
 #use "tgenerator.ml";;
let val_mod =  Mdv_v.make kyl_mod;;
 #use "taggregate_constructor_symbol_v.ml";; 
 #use "taggregate_type_module_value_v.ml";; 
(
frm_mod
(* Item_symbol_t.item_symbol list *) 
= 
[Its_v.heading;
 Its_v.modules;
 Its_v.typing;
 Its_v.ending]
);;
 #use "taggregate_constructor_symbol_v.ml";; 
 #use "taggregate_constructor_symbol_v.ml";;  #use "taggregate_type_module_value_v.ml";; 
 #use "taggregate_type_module_value_v.ml";; 
let smb_cnt = Cns_v.make smb_ent;;
 #use "taggregate_type_module_value_v.ml";; 
let nam_fil_mod = Mdv_v.module_file_name_of_key_list kyl_mod;;
let val_mod = Mdv_v.make kyl_mod;;
 #use "taggregate_type_module_value_v.ml";; 
let frm_mod = Mdf_v.retrieve (smb_mod, smb_cat);;
 #use "taggregate_type_module_value_v.ml";; 
#use "taggregate_implementation_modules_type_module_value_v.ml";; 
#use "taggregate_symbol_implementation_modules_type_module_value_v.ml";; 
#use "taggregate_symbol_implementation_modules_item_value_v.ml";; 
 mrk_cnt_t;;
ctt_cpg;;
 val_itm;;
nam_fil_itm;;
#use "taggregate_symbol_implementation_modules_item_value_v.ml";; 
#use "caml_paragraph_context_v.ml";;
let smb_cat = category_symbol_off_caml_paragraph_context ctt_cpg ;;
let smb_mod = module_symbol_off_caml_paragraph_context ctt_cpg ;;
 let pth_cnt = constructor_path_off_caml_paragraph_context ctt_cpg;;
let mrk_cns = Cnp_v.son_constructor_marker_of_constructor_path pth_cnt;;
#use "taggregate_symbol_implementation_modules_item_value_v.ml";; 
frm_itm;;
let smb_cns_l =
    Cst_v.constructorson_symbol_list_of_constructor_symbol smb_cnt 
;;
#use "taggregate_symbol_implementation_modules_item_value_v.ml";; 
mrk_cnt_t;;
 ctt_cpg;;
 (
 ctt_cpg
(* : Caml_paragraph_context_t.caml_paragraph_context *)
=
([(Caml_paragraph_context_t.Cnp_t.Cnm_t.Cns_t.Constructor_proper_symbol
    (Caml_paragraph_context_t.Cnp_t.Cnm_t.Cns_t.Constructor_oneline_symbol
      (Caml_paragraph_context_t.Cnp_t.Cnm_t.Cns_t.Constructor_datastructure_symbol
        (Caml_paragraph_context_t.Cnp_t.Cnm_t.Cns_t.Constructor_doublet_symbol
          "aggregate"))),
   1)],
 [("item", "modules"); ("module", "implementation"); ("category", "symbol");
  ("entity", "aggregate")])
);;
#use "taggregate_symbol_implementation_modules_item_value_v.ml";; 
val_itm ;;
#use "tatom_onetied_interface_upgrading_item_value_v.ml";; 
 mrk_cnt_t;;
#use "tatom_onetied_interface_upgrading_item_value_v.ml";; 
 #use "tatom_onetied_querying_item_formula_v.ml";; 
 mrk_cnt_t;;
mrk_cne_t ;;
frm_itm;;
 #use "tatom_onetied_querying_item_formula_v.ml";; 
 #use "tatom_onetied_upgrading_item_formula_v.ml";; 
 mrk_cnt_t;;
(
List.length smb_cpg_l
(* : int *)
= 
11
);;
 (
List.nth smb_cpg_l 0
(* : Item_formula_t.Cpg_t.caml_paragraph_symbol *)
=
Item_formula_t.Cpg_t.Heading_symbol
 ([(Item_formula_t.Cpg_t.Cpc_t.Cnp_t.Cnm_t.Cns_t.Constructor_proper_symbol
     (Item_formula_t.Cpg_t.Cpc_t.Cnp_t.Cnm_t.Cns_t.Constructor_several_symbol
       "atom_onetied"),
    1)],
  [("item", "upgrading"); ("module", "implementation");
   ("category", "symbol"); ("entity", "atom_onetied")])
);;
 (
List.nth smb_cpg_l 0
(* : Item_formula_t.Cpg_t.caml_paragraph_symbol *)
=
Item_formula_t.Cpg_t.Heading_symbol
 ([(Item_formula_t.Cpg_t.Cpc_t.Cnp_t.Cnm_t.Cns_t.Constructor_proper_symbol
     (Item_formula_t.Cpg_t.Cpc_t.Cnp_t.Cnm_t.Cns_t.Constructor_several_symbol
       "atom_onetied"),
    1)],
  [("item", "upgrading"); ("module", "implementation");
   ("category", "symbol"); ("entity", "atom_onetied")])
);;
 #use "tatom_onetied_upgrading_item_formula_v.ml";; 
 (
List.nth smb_cpg_l 2
(* : Item_formula_t.Cpg_t.caml_paragraph_symbol *)
=
Item_formula_t.Cpg_t.Functions_definitions_symbol
 (Item_formula_t.Cpg_t.Function_argument_symbol
   (Item_formula_t.Cpg_t.Function_t_of_b_argument
     ([(Item_formula_t.Cpg_t.Cpc_t.Cnp_t.Cnm_t.Cns_t.Constructor_fictive_symbol
         (Item_formula_t.Cpg_t.Cpc_t.Cnp_t.Cnm_t.Cns_t.Constructor_barebasic_symbol
           (Item_formula_t.Cpg_t.Cpc_t.Cnp_t.Cnm_t.Cns_t.Ens_t.Entity_bare_symbol
             "o_c")),
        3);
       (Item_formula_t.Cpg_t.Cpc_t.Cnp_t.Cnm_t.Cns_t.Constructor_proper_symbol
         (Item_formula_t.Cpg_t.Cpc_t.Cnp_t.Cnm_t.Cns_t.Constructor_oneline_symbol
           (Item_formula_t.Cpg_t.Cpc_t.Cnp_t.Cnm_t.Cns_t.Constructor_nodeoneline_symbol
             "atom_onetied_conjugated")),
        2);
       (Item_formula_t.Cpg_t.Cpc_t.Cnp_t.Cnm_t.Cns_t.Constructor_proper_symbol
         (Item_formula_t.Cpg_t.Cpc_t.Cnp_t.Cnm_t.Cns_t.Constructor_several_symbol
           "atom_onetied"),
        1)],
      [("item", "upgrading"); ("module", "implementation");
       ("category", "symbol"); ("entity", "atom_onetied")])))
);;
List.nth smb_cpg_l 2;;
 (
List.nth smb_cpg_l 6
(* : Item_formula_t.Cpg_t.caml_paragraph_symbol *)
=
Item_formula_t.Cpg_t.Functions_definitions_symbol
 (Item_formula_t.Cpg_t.Function_argument_symbol
   (Item_formula_t.Cpg_t.Function_t_of_b_argument
     ([(Item_formula_t.Cpg_t.Cpc_t.Cnp_t.Cnm_t.Cns_t.Constructor_fictive_symbol
         (Item_formula_t.Cpg_t.Cpc_t.Cnp_t.Cnm_t.Cns_t.Constructor_barebasic_symbol
           (Item_formula_t.Cpg_t.Cpc_t.Cnp_t.Cnm_t.Cns_t.Ens_t.Entity_bare_symbol
             "h_s")),
        3);
       (Item_formula_t.Cpg_t.Cpc_t.Cnp_t.Cnm_t.Cns_t.Constructor_proper_symbol
         (Item_formula_t.Cpg_t.Cpc_t.Cnp_t.Cnm_t.Cns_t.Constructor_several_symbol
           "atom_onetied_single"),
        2);
       (Item_formula_t.Cpg_t.Cpc_t.Cnp_t.Cnm_t.Cns_t.Constructor_proper_symbol
         (Item_formula_t.Cpg_t.Cpc_t.Cnp_t.Cnm_t.Cns_t.Constructor_several_symbol
           "atom_onetied"),
        1)],
      [("item", "upgrading"); ("module", "implementation");
       ("category", "symbol"); ("entity", "atom_onetied")])))
);;
List.nth smb_cpg_l 6;;
List.nth smb_cpg_l 7 ;;
#use "tatom_implementation_extracting_caml_paragraph_formula_v.ml";; 
smb_cli_l ;;
#use "tatom_implementation_extracting_caml_paragraph_value_v.ml";; 
let frm_cpg = Cpf_v.retrieve smb_cpg;;
let val_cpg = Cpv_v.make smb_cpg;;
#use "tatom_implementation_extracting_caml_paragraph_value_v.ml";; 
#use "tatom_implementation_typing_caml_paragraph_value_v.ml";; 
frm_cpg ;;
 (
frm_cpg 
(* : Caml_paragraph_formula_t.caml_paragraph_formula *)
=
Caml_paragraph_formula_t.Nonindented
[
Cls_v.type_definition ctt_cpg;
Cls_v.type_pipe_s_of_s (List.nth ctt_cps_l 0);
Cls_v.type_pipe_s_of_s (List.nth ctt_cps_l 1);
Cls_v.type_pipe_s_of_s (List.nth ctt_cps_l 2);
Cls_v.type_pipe_s_of_s (List.nth ctt_cps_l 3);
Cls_v.type_pipe_s_of_s (List.nth ctt_cps_l 4);
Cls_v.type_pipe_s_of_s (List.nth ctt_cps_l 5);
Cls_v.type_pipe_s_of_s (List.nth ctt_cps_l 6);
]
);;
(
frm_cpg 
(* : Caml_paragraph_formula_t.caml_paragraph_formula *)
=
[
Cls_v.type_definition ctt_cpg;
Cls_v.type_pipe_s_of_s (List.nth ctt_cps_l 0);
Cls_v.type_pipe_s_of_s (List.nth ctt_cps_l 1);
Cls_v.type_pipe_s_of_s (List.nth ctt_cps_l 2);
Cls_v.type_pipe_s_of_s (List.nth ctt_cps_l 3);
Cls_v.type_pipe_s_of_s (List.nth ctt_cps_l 4);
Cls_v.type_pipe_s_of_s (List.nth ctt_cps_l 5);
Cls_v.type_pipe_s_of_s (List.nth ctt_cps_l 6);
]
);;
(List.nth ctt_cps_l 0);;
frm_cpg ;;
val_cpg;;
(
val_cpg
(* : Caml_paragraph_value_t.caml_paragraph_value *)
=
  ["type atom_symbol =";
   "  | Atom_zerotied_symbol of Azs_t.atom_zerotied_symbol";
   "  | Atom_onetied_symbol of Aos_t.atom_onetied_symbol";
   "  | Atom_twotied_symbol of Ats_t.atom_twotied_symbol";
   "  | Atom_threetied_symbol of Ats_t.atom_threetied_symbol";
   "  | Atom_fourtied_symbol of Afs_t.atom_fourtied_symbol";
   "  | Atom_fivetied_symbol of Afs_t.atom_fivetied_symbol";
   "  | Atom_sixtied_symbol of Ass_t.atom_sixtied_symbol"]
);;
List.nth frm_cpg 5;;
List.nth frm_cpg 7;;
List.nth frm_cpg 8;;
(
frm_cpg 
(* : Caml_paragraph_formula_t.caml_paragraph_formula *)
=
[
Cls_v.type_definition ctt_cpg;
Cls_v.type_pipe_s_of_s (List.nth ctt_cps_l 0);
Cls_v.type_pipe_s_of_s (List.nth ctt_cps_l 1);
Cls_v.type_pipe_s_of_s (List.nth ctt_cps_l 2);
Cls_v.type_pipe_s_of_s (List.nth ctt_cps_l 3);
Cls_v.type_pipe_s_of_s (List.nth ctt_cps_l 4);
Cls_v.type_pipe_s_of_s (List.nth ctt_cps_l 5);
Cls_v.type_pipe_s_of_s (List.nth ctt_cps_l 6);
Caml_paragraph_formula_t.Cls_t.Constant_symbol
 Caml_paragraph_formula_t.Cls_t.Double_semicolon_symbol
]
);;
 #use "tatom_type_typing_caml_paragraph_formula_v.ml";; 
mrk_cnt;;
frm_cpg;;
Cpf_v.retrieve;;
let mrk_cnt_t = Cmtp_v.provide smb_cnt;;
let mrk_cnt = Cnm_v.make smb_cnt 1;;
let pth_cnt = [mrk_cnt];;
let frm_cpg = Cpf_v.retrieve smb_cpg;;
let smb_cpg = Cps_v.type_definition;;
Cps_v.type_definition;;
 #use "tatom_type_typing_caml_paragraph_formula_v.ml";; 
frm_cpg;;
   #use "tatom_type_typing_caml_paragraph_value_v.ml";; 
mgrep Fi
 #use "tatom_type_typing_caml_paragraph_formula_v.ml";; 
  #use "tatom_type_typing_caml_paragraph_value_v.ml";; 
nam_fil_cpg;;
let nam_fil_cpg = Cpv_v.caml_paragraph_file_name_of_caml_paragraph_symbol smb_cpg;;
let nam_cpg = Cps_v.name smb_cpg;;
 #use "tatom_implementation_module_value_v.ml";; 
frm_mod;;
nam_fil_mod;;
 #use "tatom_implementation_module_value_v.ml";; 
  #use "tatom_heading_item_value_v.ml";; 
#use "tatom_implementation_heading_item_value_v.ml";; 
frm_itm ;;
val_itm ;;
#use "tatom_implementation_heading_item_value_v.ml";; 
frm_itm 
;;
val_itm ;;
#use "tatom_implementation_heading_item_value_v.ml";; 
nam_fil_itm;;
#use "tatom_implementation_heading_item_value_v.ml";; 
val_itm ;;
#use "tatom_implementation_heading_item_value_v.ml";; 
 #use "tatom_interface_module_value_v.ml";; 
frm_mod;;
 #use "tatom_interface_module_value_v.ml";; 
frm_mod;;
(
frm_mod
(* Item_symbol_t.item_symbol list *) 
= 
[Its_v.heading;
 Its_v.naming;
 Its_v.printing;
 Its_v.extracting;
 Its_v.querying;
 Its_v.upgrading;
 Its_v.including;
 Its_v.ending]
);;
 #use "tatom_interface_module_value_v.ml";; 
nam_fil_mod;;
 #use "tatom_interface_module_value_v.ml";; 
#use "tatom_implementation_modules_item_value_v.ml";; 
frm_itm ;;
#use "tatom_implementation_modules_item_value_v.ml";; 
  #use "tatom_type_typing_caml_paragraph_value_v.ml";; 
let c = Cns_v.constructor_symbol_of_entityname "error_messages";;
let c = Cns_v.constructor_symbol_of_entityname "string";;
#use "taggregate_implementation_modules_item_value_v.ml";; 
let smb_ent = Ens_v.make nam_ent;;
#use "taggregate_implementation_modules_item_value_v.ml";; 
let smb_epr = Ens_v.entity_proper_symbol_of_string nam_ent;;
#use "taggregate_implementation_modules_item_value_v.ml";; 
#use "taggregate_implementation_module_value_v.ml";; 
#use "tatom_implementation_module_value_v.ml";; 
Mdv_v.name ;;
Ecm_v.name;;
Enmodule Ecm_v = Entitycategorymodule_v;;
module Ecm_v = Entitycategorymodule_v;;
Ecm_v.name;;
#use "tatom_implementation_module_value_v.ml";; 
let ecm = Ecm_t.Proper (Ecm_v.make_proper smb_epr smb_cat smb_mod);;  
#use "tatom_implementation_module_value_v.ml";; 
Ecm_v.name ecm;;
  #use "tentitycategory_n_suffix_abbreviation_provider_v.ml";;
let enc_ppr = Enc_v.entitycategory_proper_of_string_of_string "atom" "symbol";;
  #use "tentitycategory_n_suffix_abbreviation_provider_v.ml";;
let abb_ecs = Ecns_v.module_abbreviation ecs;;
  #use "tentitycategory_n_suffix_abbreviation_provider_v.ml";;
Ecsap_v.provide ecs;;
  #use "tentitycategory_n_suffix_abbreviation_provider_v.ml";;
  #use "tentitycategory_n_suffix_abbreviations_provider_v.ml";;
#use "taggregate_implementation_modules_item_value_v.ml";;
let pth_cns_l = List.map (fun s -> (Cns_t.Constructor_proper_symbol s, 2) :: pth_cnt) smb_cns_l;;
pth_cns_l ;;
#use "taggregate_implementation_modules_item_value_v.ml";;
let smb_erm = Cns_v.constructor_symbol_of_entityname "error_messages";;
#use "taggregate_constructor_symbol_v.ml";; 
 smb_cnt;;
smb_ent_t ;;
#use "taggregate_constructor_symbol_v.ml";; 
Ens_v.is_datastructure_off_entity_symbol smb_ent;;
smb_ent;;
End_v.is_datastructure_off_entityname nam_ent nam_ent;;
module End_v = Entity_data_v
;;
End_v.is_datastructure_off_entityname nam_ent nam_ent;;
End_v.is_datastructure_off_entityname nam_ent;;
#use "taggregate_constructor_symbol_v.ml";; 
#use "tatom_onetied_conjugated_entity_symbol_tree_v.ml";; 
 *)smb_epr;;
smb_epr;;
smb_ent;;
#use "tatom_onetied_conjugated_entity_symbol_tree_v.ml";; 
smb_ent_t ;;
 #use "tatom_onetied_conjugated_constructor_marker_tree_v.ml";; 
 smb_ent_t;;
 #use "tatom_onetied_conjugated_constructor_marker_tree_v.ml";; 
 #use "tatom_onetied_conjugated_entity_data_v.ml";; 
 smb_ent_t;;
#use "tatom_onetied_constructor_marker_tree_v.ml";; 
 smb_ent_t;;
Cns_v.entity_symbol_off_constructor_symbol smb_cnt;;
#use "taggregate_constructor_symbol_v.ml";; 
Ens_v.is_datastructure_off_entity_symbol smb_ent;;
smb_cnt;;
#use "taggregate_constructor_symbol_v.ml";; 
smb_ent_t ;;
#use "taggregate_constructor_symbol_v.ml";; 
smb_cnt_t;;
smb_cns_l;;
nam_ent_t;;
#use "constructor_symbol_tree_v.ml";;
contructorson_symbol_list_of_entity_datastructure_symbol smb_ent;;
nam_ent;;
let smb_ens_l =
      Est_v.entityson_symbol_list_of_datastructure_entityname nam_ent;;
contructorson_symbol_list_of_entity_datastructure_symbol smb_ent ;;
Cst_v.contructorson_symbol_list_of_entity_datastructure_symbol smb_ent;;
#use "taggregate_constructor_symbol_v.ml";; 
Cst_v.contructorson_symbol_list_of_entity_datastructure_symbol smb_ent;;
let contructorson_symbol_list_of_entity_datastructure_symbol smb_end =
  let nam_ent = smb_end in
  let smb_ens_l =
    Est_v.entityson_symbol_list_of_datastructure_entityname nam_ent 
  in
  List.map Cns_v.make smb_ens_l
;;
entityson_symbol_list_of_datastructure_entityname nam_ent;; 
contructorson_symbol_list_of_entity_datastructure_symbol "aggregate";;
#use "taggregate_constructor_symbol_v.ml";; 
Cst_v.contructorson_symbol_list_of_entity_datastructure_symbol smb_ent;;
Cst_v.contructorson_symbol_list_of_entity_datastructure_symbol nam_ent;;
#use "taggregate_constructor_symbol_v.ml";; 
smb_cns_l ;;
#use "taggregate_implementation_modules_item_value_v.ml";; 
smb_cns_l ;;
  #use "taggregate_implementation_modules_item_value_v.ml";; 
smb_cns_l ;;
smb_cps_l ;;
  #use "taggregate_implementation_modules_item_value_v.ml";; 
pth_cps_l;;
  #use "taggregate_implementation_modules_item_value_v.ml";; 
mrk_cnt_t;;
(
 ctt_cpg
(* : Caml_paragraph_context_t.caml_paragraph_context *)
=
([(Caml_paragraph_context_t.Cnp_t.Cnm_t.Cns_t.Constructor_proper_symbol
    (Caml_paragraph_context_t.Cnp_t.Cnm_t.Cns_t.Constructor_oneline_symbol
      (Caml_paragraph_context_t.Cnp_t.Cnm_t.Cns_t.Constructor_datastructure_symbol
        (Caml_paragraph_context_t.Cnp_t.Cnm_t.Cns_t.Constructor_doublet_symbol
          "aggregate"))),
   1)],
 [("item", "modules"); ("module", "implementation"); ("category", "symbol");
  ("entity", "aggregate")])
);;
val_itm ;;
  #use "taggregate_implementation_modules_item_value_v.ml";; 
val_itm ;;
  #use "taggregate_implementation_modules_item_value_v.ml";; 
val_itm ;;
  #use "taggregate_implementation_modules_item_value_v.ml";; 
val_itm ;;
#use "tatom_symbol_entitycategorymodule_v.ml";; 
let enc_ppr = Enc_v.entitycategory_proper_of_string_of_string nam_ent nam_cat;;
let enc = Enc_v.make_of_proper enc_ppr;;
let enc = Enc_v.make_of_entitycategory_proper enc_ppr;;
let ecn_aba = Enc_v.argument_abbreviation enc;;
let ecn_abm = Enc_v.module_abbreviation enc;;
 #use "tordinal_entitycategorymodule_v.ml";; 
let smb_ent = Ens_v.make nam_ent;;
let smb_cat = Cts_v.make nam_cat;;
let smb_mod = Mds_v.make nam_mod;;
let enc_ppr = Enc_v.entitycategory_proper_of_string_of_string nam_ent nam_cat;;
 #use "tordinal_entitycategorymodule_v.ml";; 
let enc_ppr = Enc_v.entitycategory_proper_of_string_of_string nam_ent nam_cat;;
let st1 ="ordinal";;
End_v.is_entityname_off_string st1;;
Entity_data_v.is_entityname_off_string st1;;
 #use "tordinal_entitycategorymodule_v.ml";; 
smb_ent ;;
let smb_ent = Ens_v.make nam_ent;;
 #use "tordinal_entitycategorymodule_v.ml";; 
let smb_ent = Ens_v.make nam_ent;;
Ers_v.is_entity_reference_symbol_off_string "ordinal";;
#use "entity_symbol_v.ml";;
Ers_v.is_entity_reference_symbol_off_string "ordinal";;
nam_ent;;
Ers_v.is_entity_reference_symbol_off_string "ordinal";;
 #use "tordinal_entitycategorymodule_v.ml";; 
#use "entity_symbol_v.ml";;
let str = nam_ent;;
is_entity_barebasic_symbol_off_string str;;
 is_entity_datastructure_symbol_off_string str;;
 is_entity_local_symbol_off_string str;;
is_entity_reference_symbol_off_string str;;
 #use "tordinal_entitycategorymodule_v.ml";; 
testi 0 (
 not (Ens_v.is_entity_barebasic_symbol_off_string nam_ent)
);;
testi 1 (
not (Ens_v.is_entity_bare_symbol_off_string nam_ent)
);;
testi 2 (
 Ens_v.is_entity_reference_symbol_off_string nam_ent
);;
testi 3 (
not (Ens_v.is_entity_local_symbol_off_string nam_ent)
);;
testi 4 (
not (Ens_v.is_entity_fictive_symbol_off_string nam_ent)
);;
testi 5 (
not (Ens_v.is_entity_proper_symbol_off_string nam_ent)
);;
testi 0 (
 not (Ens_v.is_entity_barebasic_symbol_off_string nam_ent)
);;
Ens_v.is_entity_barebasic_symbol_off_string nam_ent;;
 #use "tordinal_entitycategorymodule_v.ml";; 
testi 0 (
 not (Ens_v.is_entity_barebasic_symbol_off_string nam_ent)
);;
testi 1 (
not (Ens_v.is_entity_bare_symbol_off_string nam_ent)
);;
testi 2 (
 Ens_v.is_entity_reference_symbol_off_string nam_ent
);;
testi 3 (
not (Ens_v.is_entity_local_symbol_off_string nam_ent)
);;
testi 4 (
not (Ens_v.is_entity_fictive_symbol_off_string nam_ent)
);;
testi 5 (
not (Ens_v.is_entity_proper_symbol_off_string nam_ent)
);;
let smb_ent = Ens_v.make nam_ent;;
(
smb_ent 
(* : Entity_symbol_t.entity_symbol *)
=
  Entity_symbol_t.Entity_proper_symbol
   (Entity_symbol_t.Entity_reference_symbol Entity_symbol_t.Ers_t.Ordinal)
);;
smb_ent ;;
enc_ppr;;
let enc_ppr = Enc_v.entitycategory_proper_of_string_of_string nam_ent nam_cat;;
let enc = Enc_v.entitycategory_of_string_of_string nam_ent nam_cat;;
 #use "tordinal_entitycategorymodule_v.ml";; 
enc_ref;;
 enc ;;
 #use "tordinal_entitycategorymodule_v.ml";; 
let ecm_ref = Ecm_v.entitycategorymodule_reference_of_string_of_string nam_ent nam_mod;;
 #use "tordinal_entitycategorymodule_v.ml";; 
ecm;;
ecm_ref;;
 #use "tordinal_entitycategorymodule_v.ml";; 
Ens_v.argument_abbreviation smb_ent;;
 #use "tordinal_entitycategorymodule_v.ml";; 
Ens_v.argument_abbreviation smb_ent;;
Ens_v.module_abbreviation smb_ent;;
Cts_v.argument_abbreviation smb_cat;;
 #use "tordinal_entitycategorymodule_v.ml";; 
Cts_v.argument_abbreviation smb_cat;;
Cts_v.module_abbreviation smb_cat;;
Mds_v.suffix smb_mod;;
Enc_v.argument_abbreviation ecn ;;
Enc_v.argument_abbreviation enc ;;
Enc_v.module_abbreviation enc ;;
Ecm_v.argument_abbreviation ecm ;;
Ecm_v.module_abbreviation ecm;;
 #use "tordinal_entitycategorymodule_v.ml";; 
 #use "tatom_symbol_entitycategorymodule_v.ml";; 
ecm_ppr ;;
ecm;;
Ens_v.argument_abbreviation smb_ent;;
Mds_v.suffix smb_mod;;
#use "taggregate_constructor_symbol_v.ml";; 
Cst_v.contructorson_symbol_list_of_entity_datastructure_symbol nam_ent;;
smb_cnt_t;;
Cst_v.contructorson_symbol_list_of_entity_datastructure_symbol nam_ent;;
#use "taggregate_constructor_symbol_v.ml";; 
smb_cns_l;;
#use "taggregate_constructor_symbol_v.ml";; 
#use "taggregate_symbol_implementation_modules_item_value_v.ml";; 
ctt_cpg;;
let ecm_ps = 
	  Cpc_v.son_entitycategorymodule_proper_off_caml_paragraph_context ctt_cpg;;
#use "taggregate_symbol_implementation_modules_item_value_v.ml";; 
#use "caml_paragraph_formula_v.ml";;
let smb_cnt = 
    Cpc_v.top_constructor_symbol_off_caml_paragraph_context ctt_cpg;;
let smb_cnt = Cns_v.make smb_ent;;
#use "caml_paragraph_formula_v.ml";;
#use "taggregate_symbol_implementation_modules_item_value_v.ml";; 
let ctt_cps_l = (* caml_line_context *)
    List.map (fun p -> Cpc_v.make p kyl_itm) pth_cps_l  ;;
let trp_imc = 
    Cpc_v.symboltriplet_off_caml_paragraph_context ctt_cpg ;;
List.map (fun c -> Cls_v.module_definition c) ctt_cps_l;;
let ctt_cps = List.hd (List.map (fun c -> Cls_v.module_definition c) ctt_cps_l);;
son_entitycategorymodule_proper_off_caml_paragraph_context ctt_cps;;
#use "caml_paragraph_context_v.ml";;
son_entitycategorymodule_proper_off_caml_paragraph_context ctt_cps;;
let ctt_cps = List.hd (List.map (fun c -> Cls_v.module_definition c) ctt_cps_l);;List.map (fun c -> Cls_v.module_definition c) ctt_cps_l;;
son_entitycategorymodule_proper_off_caml_paragraph_context ctt_cps;;
let ctt_cps = List.hd ctt_cps_l;;
son_entitycategorymodule_proper_off_caml_paragraph_context ctt_cps;;
 let mrk_cns = Cnp_v.son_constructor_marker_of_constructor_path pth_cnt;;
son_entitycategorymodule_proper_off_caml_paragraph_context ctt_cps;; let smb_cat = category_symbol_off_caml_paragraph_context ctt_cps;;
 let smb_cat = category_symbol_off_caml_paragraph_context ctt_cps;;
  let smb_mod = module_symbol_off_caml_paragraph_context ctt_cps;;
  let pth_cnt = constructor_path_off_caml_paragraph_context ctt_cps;;
Cnp_v.son_constructor_marker_of_constructor_path pth_cnt;;
let mrk_cns = Cnp_v.son_constructor_marker_of_constructor_path pth_cnt;;
let smb_cns = Dbt_v.left_off_doublet mrk_cns;;
Cns_v.is_constructor_reference_symbol_off_constructor_symbol smb_cns;;
 #use "taggregate_symbol_implementation_modules_item_value_v.ml";; 
    List.map (fun p -> Cpc_v.make p kyl_itm) pth_cps_l  ;;
 #use "taggregate_symbol_implementation_modules_item_value_v.ml";; 
let ctt_cps = List.hd ctt_cps_l;; (* ordinal *)
let ecm_ps = Cpc_v.son_entitycategorymodule_reference_off_caml_paragraph_context ctt_cps;;
smb_cps_l ;;
let smb_cps = List.hd smb_cps_l;;
Cls_v.module_definition;;
let smb_cnt = Cpc_v.top_constructor_symbol_off_caml_paragraph_context ctt_cps;;
Cns_v.is_constructor_reference_symbol_off_constructor_symbol smb_cnt;;
ctt_cps;;
Cpc_v.son_entitycategorymodule_off_caml_paragraph_context ctt_cpg
;;
smb_cns ;;
smb_cps;;
let mrk_cns = Cnp_v.son_constructor_marker_of_constructor_path pth_cnt;;
let smb_cns = Dbt_v.left_off_doublet mrk_cns;;module Cnp_v = Constructor_path_v;;
 #use "taggregate_symbol_implementation_modules_item_value_v.ml";; 
smb_cns ;;
let mrk_cns = Cnp_v.son_constructor_marker_of_constructor_path pth_cnt;;
 #use "taggregate_symbol_implementation_modules_item_value_v.ml";; 
ctt_cps;;
let smb_cat = category_symbol_off_caml_paragraph_context ctt_cps;;
let son_entitycategorymodule_off_caml_paragraph_context ctt_cpg =
(* son constructor may be proper and oneline and reference *)
(* son constructor may be proper and ... *)
  let smb_cat = category_symbol_off_caml_paragraph_context ctt_cpg in
  let smb_mod = module_symbol_off_caml_paragraph_context ctt_cpg in
  let pth_cnt = constructor_path_off_caml_paragraph_context ctt_cpg in
  let mrk_cns = Cnp_v.son_constructor_marker_of_constructor_path pth_cnt in
  let smb_cns = Dbt_v.left_off_doublet mrk_cns in
  if Cns_v.is_constructor_proper_symbol_off_constructor_symbol smb_cns
  then
    begin (* here adapt son ecm to its entity symbol*)
      let smb_cps = 
	Cns_v.constructor_proper_symbol_off_constructor_symbol smb_cns 
      in
      let smb_eps = 
	Cns_v.entity_proper_symbol_off_constructor_proper_symbol smb_cps 
      in 
      Ecm_v.make_proper smb_eps smb_cat smb_mod
    end
  else print_fatal_error 
	    "son_entitycategorymodule_off_caml_paragraph_context"
            "a proper constructor" 
            (">" ^ (Cns_v.name smb_cns) ^ 
	     "< path >" ^(Cnp_v.name pth_cnt)^
    "< itm_kyl >" ^ (Kyl_v.name (item_key_list_off_caml_paragraph_context ctt_cpg))) "check"
;;
#use "caml_paragraph_context_v.ml";;
let smb_cat = category_symbol_off_caml_paragraph_context ctt_cps;;
let smb_mod = module_symbol_off_caml_paragraph_context ctt_cps;;
let pth_cnt = constructor_path_off_caml_paragraph_context ctt_cps;;
let mrk_cns = Cnp_v.son_constructor_marker_of_constructor_path pth_cns;;
let pth_cnt = constructor_path_off_caml_paragraph_context ctt_cps;;
let mrk_cns = Cnp_v.son_constructor_marker_of_constructor_path pth_cnt;;
let smb_cns = Dbt_v.left_off_doublet mrk_cns ;;
 Cns_v.is_constructor_proper_symbol_off_constructor_symbol smb_cns;;
 Cns_v.is_constructor_reference_symbol_off_constructor_symbol smb_cns;;
let smb_cps = 
	Cns_v.constructor_proper_symbol_off_constructor_symbol smb_cns;;
let smb_eps = 
	Cns_v.entity_proper_symbol_off_constructor_proper_symbol smb_cps;;
Cns_v.entity_symbol_off_constructor_proper_symbol smb_cps;;
q
 #use "tscope_provider_v.ml";;
Sco_v.entitycategory_n_scope_off_string "ordinal all private";;
Sco_v.entitycategory_n_scope_list;;
Enc_v.make ;;
let enc = Enc_v.make "ordinal any";;
let enc = Enc_v.make "ordinal" "any";;
Scp_v.provide enc ;;
Scp_v.provide (Enc_v.make "aggregate" "symbol") ;;
 #use "tordinal_entitycategorymodule_v.ml";; 
let ecm_ref = Ecm_v.entitycategorymodule_reference_of_string_of_string nam_ent nam_mod;;
 (
 not (Ens_v.is_entity_barebasic_symbol_off_string nam_ent)
);;
(
not (Ens_v.is_entity_bare_symbol_off_string nam_ent)
);;
testi 2 (
 Ens_v.is_entity_reference_symbol_off_string nam_ent
);;
testi 3 (
not (Ens_v.is_entity_local_symbol_off_string nam_ent)
);;
(
 Ens_v.is_entity_reference_symbol_off_string nam_ent
);;
(
not (Ens_v.is_entity_local_symbol_off_string nam_ent)
);;
 (
not (Ens_v.is_entity_fictive_symbol_off_string nam_ent)
);;
(
not (Ens_v.is_entity_proper_symbol_off_string nam_ent)
);;
 (
smb_ent 
(* : Entity_symbol_t.entity_symbol *)
=
Entity_symbol_t.Entity_reference_symbol Entity_symbol_t.Ers_t.Ordinal
);;
 (
enc_ref
(* : Entitycategory_t.entitycategory_reference *)
=
Entitycategory_t.Ers_t.Ordinal
);;
(
 enc 
(* : Entitycategory_t.entitycategory *)
=
Entitycategory_t.Reference Entitycategory_t.Ers_t.Ordinal
);;
(
ecm_ref
(* : Entitycategorymodule_t.entitycategorymodule_reference *)
=
(Entitycategorymodule_t.Ens_t.Ers_t.Ordinal,
 Entitycategorymodule_t.Mds_t.Private
  Entitycategorymodule_t.Mds_t.Private_implementation_symbol)
);;
(
Ens_v.argument_abbreviation smb_ent
=
"ord"
);;
(
Ens_v.module_abbreviation smb_ent
=
"Ord"
);;
let enc = Enc_v.entitycategory_of_string_of_string nam_ent nam_cat;;
 Ecm_v.entitycategorymodule_reference_of_string_of_string nam_ent nam_mod;;
 #use "tordinal_entitycategorymodule_v.ml";; 
 Ecm_v.entitycategorymodule_reference_of_string_of_string nam_ent nam_mod;;
ecm;;
 #use "tordinal_entitycategorymodule_v.ml";; 
Ens_v.module_abbreviation smb_ent;;
 #use "tordinal_entitycategorymodule_v.ml";; 
Mds_v.suffix smb_mod;;
 #use "tordinal_entitycategorymodule_v.ml";; 
Ecm_v.module_abbreviation ecm;;
Enc_v.argument_abbreviation enc ;;
 #use "tordinal_entitycategorymodule_v.ml";; 
 #use "taggregate_symbol_implementation_modules_item_value_v.ml";;
 #use "taggregate_symbol_implementation_modules_item_value_v.ml";; 
 Cpc_v.symboltriplet_off_caml_paragraph_context ctt_cpg;;
let ecm_ps = Cpc_v.son_entitycategorymodule_proper_off_caml_paragraph_context ctt_cps;;
 #use "taggregate_symbol_implementation_modules_item_value_v.ml";; 
(
trp_imc 
(* :
  (Item_symbol_t.item_symbol, Module_symbol_t.module_symbol, Category_symbol_t.category_symbol) Triplet_t.triplet *)
=
  (Item_symbol_t.Modules_symbol,
   Module_symbol_t.Implementation_symbol,
   Category_symbol_t.Symbol_symbol)
);;
 (
smb_cli_l 
(* : Caml_line_symbol_t.caml_line_symbol list *)
=
[Caml_line_symbol_t.Singlet_symbol
  (Caml_line_symbol_t.Module_definition_symbol
    ([(Caml_line_symbol_t.Cpc_t.Cnp_t.Cnm_t.Cns_t.Constructor_proper_symbol
        (Caml_line_symbol_t.Cpc_t.Cnp_t.Cnm_t.Cns_t.Constructor_oneline_symbol
          (Caml_line_symbol_t.Cpc_t.Cnp_t.Cnm_t.Cns_t.Constructor_reference_symbol
            Caml_line_symbol_t.Cpc_t.Cnp_t.Cnm_t.Cns_t.Ers_t.Ordinal)),
       2);
      (Caml_line_symbol_t.Cpc_t.Cnp_t.Cnm_t.Cns_t.Constructor_proper_symbol
        (Caml_line_symbol_t.Cpc_t.Cnp_t.Cnm_t.Cns_t.Constructor_oneline_symbol
          (Caml_line_symbol_t.Cpc_t.Cnp_t.Cnm_t.Cns_t.Constructor_datastructure_symbol
            (Caml_line_symbol_t.Cpc_t.Cnp_t.Cnm_t.Cns_t.Constructor_doublet_symbol
              "aggregate"))),
       1)],
     [("item", "modules"); ("module", "implementation");
      ("category", "symbol"); ("entity", "aggregate")]))]
);;
 #use "taggregate_symbol_implementation_modules_item_value_v.ml";; 
let smb_cli_l = List.map (fun c -> Cls_v.module_definition c) ctt_cps_l;;
 #use "taggregate_symbol_implementation_modules_item_value_v.ml";; 
ctt_cps;;
let ctt_cpg= ctt_cps;;
let smb_cat = category_symbol_off_caml_paragraph_context ctt_cpg;;
#use "caml_paragraph_context_v.ml";;
let smb_cat = category_symbol_off_caml_paragraph_context ctt_cpg;;
let smb_mod = module_symbol_off_caml_paragraph_context ctt_cpg ;;
let pth_cnb = constructor_path_off_caml_paragraph_context ctt_cpg ;;
let mrk_cnu = Cnp_v.up_constructor_marker_of_constructor_path pth;;
let mrk_cnu = Cnp_v.up_constructor_marker_of_constructor_path pth_cnb;;
let pth_cnb = constructor_path_off_caml_paragraph_context ctt_cpg ;;
  let mrk_cnd = Cnp_v.down_constructor_marker_of_constructor_path pth_cnb;;
  let smb_cnd = Dbt_v.left_off_doublet mrk_cnd;;
 Cns_v.is_constructor_proper_symbol_off_constructor_symbol smb_cnd;;
let smb_cpd = 
	Cns_v.constructor_proper_symbol_off_constructor_symbol smb_cnd;;
smb_ent;;
let ctt_cpg= ctt_cps;;
 let smb_cat = category_symbol_off_caml_paragraph_context ctt_cpg;;
  let smb_mod = module_symbol_off_caml_paragraph_context ctt_cpg in
  let pth_cnt = constructor_path_off_caml_paragraph_context ctt_cpg in
  let mrk_cns = Cnp_v.son_constructor_marker_of_constructor_path pth_cnt;;
let smb_mod = module_symbol_off_caml_paragraph_context ctt_cpg ;;
  let pth_cnt = constructor_path_off_caml_paragraph_context ctt_cpg ;;
  let mrk_cns = Cnp_v.son_constructor_marker_of_constructor_path pth_cnt ;;
 let smb_cns = Dbt_v.left_off_doublet mrk_cns;;
Cns_v.is_constructor_proper_symbol_off_constructor_symbol smb_cns;;
let smb_cps = 
	Cns_v.constructor_proper_symbol_off_constructor_symbol smb_cns;;
let smb_ent = 
	Cns_v.entity_symbol_off_constructor_proper_symbol smb_cps ;;
 #use "tatom_symbol_entitycategorymodule_v.ml";; 
Ens_v.module_abbreviation smb_ent;;
 #use "tatom_symbol_entitycategorymodule_v.ml";; 
Enc_v.module_abbreviation enc ;;
 #use "tatom_symbol_entitycategorymodule_v.ml";; 
Ecm_v.module_abbreviation ecm;;
  #use "taggregate_symbol_implementation_modules_item_value_v.ml";; 
ecm_s ;;
let prob1f =
  let rec foo bar =
    match bar with
    | (a, (b, c)) :: xs -> a * (b + c + (foo xs))
    | _ -> 1
  in foo []
;;
  foo [(1,(2,3))]
;;
let prob1f =
  let rec foo bar =
    match bar with
    | (a, (b, c)) :: xs -> a * (b +  (b + c + (foo xs))
    | _   -> 1
    in foo []
;;
  let rec foo bar =
      match bar with
      | (a, (b, c)) :: xs -> a * (b +  (b + c + (foo xs))
      | _   -> 1
;;
  let rec foo bar =
      match bar with
        | (a, (b, c)) :: xs -> a * (b +  (b + c + (foo xs)))
;;
let prob1f =
  let rec foo bar =
      match bar with
      | (a, (b, c)) :: xs -> a * (b +  (b + c + (foo xs)))
      | _   -> 1
      in foo []
    ;;           
 #use "taggregate_symbol_implementation_modules_item_value_v.ml";; 
val_itm ;;
 #use "tordinal_entitycategorymodule_v.ml";; 
Cts_v.module_abbreviation smb_cat;;
Cts_v.argument_abbreviation smb_cat;;
(
Cts_v.argument_abbreviation smb_cat
=
""
);;
 #use "tordinal_entitycategorymodule_v.ml";; 
Ecm_v.module_suffix_of_entitycategorymodule ecm;;
 #use "entitycategorymodule_v.ml";; 
let smb_mod = module_symbol_off_entitycategorymodule ecm ;;
 let enc = entitycategory_off_entitycategorymodule ecm ;;
let sco = Scp_v.provide enc;;
 #use "entitycategorymodule_v.ml";; 
 #use "tordinal_entitycategorymodule_v.ml";; 
Scp_v.provide enc;;
Ecm_v.name ecm;;
 #use "tordinal_entitycategorymodule_v.ml";; 
Ecm_v.name ecm;;
Ecm_v.file_name_of_entitycategorymodule ecm;;
Ecm_v.entitycategorysuffix_n_entitycategory_of_entitycategorymodule ecm;;
 #use "tatom_symbol_entitycategorymodule_v.ml";; 
smb_ent ;;
 enc ;;
Ens_v.argument_abbreviation smb_ent;;
 #use "tatom_symbol_entitycategorymodule_v.ml";; 
ecm;;
 #use "tatom_symbol_entitycategorymodule_v.ml";; 
Ens_v.module_abbreviation smb_ent;;
(
Cts_v.argument_abbreviation smb_cat
=
"atm"
);;
 #use "tatom_symbol_entitycategorymodule_v.ml";; 
Cts_v.argument_abbreviation smb_cat;;
Cts_v.module_abbreviation smb_cat;;
Enc_v.argument_abbreviation enc ;;
Enc_v.module_abbreviation enc ;;
Scp_v.provide enc;;
 #use "tatom_symbol_entitycategorymodule_v.ml";; 
Ecm_v.module_suffix_of_entitycategorymodule ecm;;
 #use "tatom_symbol_entitycategorymodule_v.ml";; 
 #use "tordinal_entitycategorymodule_v.ml";; 
#use "taggregate_symbol_implementation_modules_item_value_v.ml";; 
frm_itm;;
d
#use "taggregate_symbol_implementation_modules_item_value_v.ml";; 
val_itm ;;
 #use "tatom_implementation_modules_item_value_v.ml";; 
frm_itm ;;
val_itm ;;
#use "tatom_onetied_single_constructor_marker_tree_v.ml";; 
smb_cnt;;
 smb_ent_t;;
#use "tatom_onetied_single_constructor_marker_tree_v.ml";; 
 #use "tatom_onetied_single_entity_data_v.ml";; 
 smb_ent_t;;
 #use "tatom_onetied_single_entity_data_v.ml";; 
#use "tatom_onetied_single_symbol_type_item_formula_v.ml";; 
frm_itm ;;
#use "tatom_onetied_single_symbol_type_item_formula_v.ml";; 
mrk_cnt_t;;
pth_cnt_t ;;
Cmtp_v.provide ;;
#use "tatom_onetied_single_symbol_type_item_formula_v.ml";; 
mrk_cnt_t;;
pth_cnt_t ;;
#use "tatom_onetied_single_symbol_type_item_formula_v.ml";; 
#use "tatom_onetied_entity_symbol_tree_v.ml";; 
smb_epr;;
#use "tatom_onetied_entity_symbol_tree_v.ml";; 
smb_ent ;;
str_t ;;
smb_ent_t ;;
#use "tatom_onetied_entity_symbol_tree_v.ml";; 
 #use "tatom_onetied_single_symbol_type_typing_item_value_v.ml";; 
frm_itm ;;
 #use "tatom_onetied_single_symbol_type_typing_item_value_v.ml";; 
mrk_cnt_t;;
pth_cnt_t ;;
val_itm ;;
 #use "tatom_onetied_single_symbol_type_typing_item_value_v.ml";; 
pth_cnt_t ;;
 #use "tatom_onetied_single_symbol_type_typing_item_value_v.ml";; 
nam_fil_itm;;
 #use "tatom_onetied_single_symbol_type_typing_item_value_v.ml";; 
 #use "tentity_data_provider_v.ml";; 
End_v;;
End_v.is_datastructure_off_entityname nam_ent ;;
not ( End_v.is_datastructure_off_entityname nam_ent) ;;
not ( End_v.is_entityname_off_string nam_ent);;
End_v.is_singleson_off_entityname nam_ent;;
End_v.count_son_of_entityname nam_ent;;
 #use "tentity_data_provider_v.ml";; 
Clv_v.make;;
   #use "tatom_type_typing_caml_line_value_v.ml";; 
 Clv_v.make;;
Cls_v.type_definition;;
   #use "tatom_type_typing_caml_line_value_v.ml";; 
smb_cli_tdf;;
val_cli_tdf;;
smb_cli_pee;;
   #use "tatom_type_typing_caml_line_value_v.ml";; 
smb_cli_tdf;;
 #use "tatom_type_typing_caml_line_value_v.ml";; 
smb_cli_tdf;;
(
smb_cli_tdf
(* : Caml_line_symbol_t.caml_line_symbol *)
=
Caml_line_symbol_t.Singlet_symbol
 (Caml_line_symbol_t.Type_definition_symbol
   ([(Caml_line_symbol_t.Cpc_t.Cnp_t.Cnm_t.Cns_t.Constructor_proper_symbol
       (Caml_line_symbol_t.Cpc_t.Cnp_t.Cnm_t.Cns_t.Constructor_several_symbol
         "atom"),
      1)],
    [("item", "typing"); ("module", "type"); ("category", "symbol");
     ("entity", "atom")]))
);;
(
val_cli_tdf
(* : Caml_line_value_t.caml_line_value *)
= 
"type atom_symbol ="
);;
(
smb_cli_pee
(* : Clf_v.Clf_t.caml_line_formula *)
=
Clf_v.Clf_t.Singlet
 (Clf_v.Clf_t.Cnm_t.Cns_t.Constructor_proper_symbol
   (Clf_v.Clf_t.Cnm_t.Cns_t.Constructor_several_symbol "atom_twotied"), 2)
);;
 #use "tatom_type_typing_caml_line_value_v.ml";; 
smb_cli_pee;;
 #use "tatom_type_typing_caml_line_value_v.ml";; 
val_cli_pee;;
 #use "tatom_type_typing_caml_line_value_v.ml";; 
Clv_v.make smb_cli_pss;;
 #use "tatom_type_typing_caml_line_value_v.ml";; 
Clv_v.make smb_cli_pss;;
 #use "tatom_type_typing_caml_line_value_v.ml";; 
 #use "tentity_data_provider_v.ml";; 
 (
End_v.count_son_of_entityname nam_ent
(* Index_p.index *) 
= 
Index_p.seven
);;
 #use "tentity_data_provider_v.ml";; 
 #use "entitycategorymodule_v.ml";;
module Dbt_v = Doublet_v
module Ecm_t = Entitycategorymodule_t
module Ecm_v = Entitycategorymodule_v
module Fio_v = Fileio_v
module Fln_v = Filename_v
module Reg_t = Register_t
module Reg_v = Register_v
module Str_v = String_v
(** {6 Register.} *)
let nam_reg = "entitycategorymodule_external_by_entitycategorymodule";;
let entitycategorymodule_external_by_entitycategorymodule : 
    (Ecm_t.entitycategorymodule_proper, 
     Ecm_t.entitycategorymodule_reference) 
    Reg_t.register = Reg_v.make 137;;
let store ecm ecx_l =
  try Reg_v.store entitycategorymodule_external_by_entitycategorymodule ecm ecx_l
  with Failure ("Already_stored:Reg_v.store") ->
    failwith ("Already_stored:Ecmxp_v.store")
;;
let is_stored ecm =
  Reg_v.is_stored 
    entitycategorymodule_external_by_entitycategorymodule ecm
;;
let retrieve ecm =
  try Reg_v.retrieve 
      entitycategorymodule_external_by_entitycategorymodule ecm
  with Failure ("Not_stored:Reg_v.retrieve") ->
    failwith ("Not_stored:Ecmxp_v.retrieve")
;;  
let entitycategorymodule_n_entitycategorymodule_external_of_string str =
  let w_l = Str_v.split_of_c ' ' str in
  let nam_ent = List.nth w_l 0 in
  let nam_cat = List.nth w_l 1 in
  let nam_mod = List.nth w_l 2 in
  let nam_enx = List.nth w_l 3 in
  let nam_mox = List.nth w_l 4 in
  let ecm_ppr =
    Ecm_v.entitycategorymodule_proper_of_string_of_string_of_string 
      nam_ent nam_cat nam_mod
  in
  let ecm_ref =
    Ecm_v.entitycategorymodule_reference_of_string_of_string 
      nam_enx nam_mox
  in
  Dbt_v.make ecm_ppr ecm_ref
;;
  let fln = Fln_v.make "entitycategorymodule_external.dat" ;;
 let str_l = Fio_v.string_list_of_filename fln ;;
 let ecm_n_ecx_l = 
      List.map 
	entitycategorymodule_n_entitycategorymodule_external_of_string 
	str_l;;
entitycategorymodule_n_entitycategorymodule_external_of_string ""atom symbol implementation messages implementation";;
;;
let w_l = Str_v.split_of_c ' ' "atom symbol implementation messages implementation";;
 let nam_ent = List.nth w_l 0;;
let nam_enx = List.nth w_l 3 ;;
  let nam_mox = List.nth w_l 4 ;;
Ecm_v.entitycategorymodule_reference_of_string_of_string 
      nam_enx nam_mox;;
Ers_v.is_entity_reference_symbol_off_string "messages";;
let is_entity_reference_symbol_off_string str =
  let _ =
    try make str
    with Failure "Not_entity_reference:Ers_v.make" ->
      failwith "False"
  in
  true
;;
let make = function   
  | "doublet" -> Ers_t.Doublet
  | "empty" -> Ers_t.Empty
  | "error_messages" -> Ers_t.Error_messages
  | "messages" -> Ers_t.Messages
  | "list_frames" -> Ers_t.List_frames
  | "index" -> Ers_t.Index
  | "ordinal" -> Ers_t.Ordinal
  | "string_frames" -> Ers_t.String_frames
  | "tree" -> Ers_t.Tree
  | "triplet" -> Ers_t.Triplet
  | "utils" -> Ers_t.Utils
  | s -> failwith "Not_entity_reference:Ers_v.make"
;;
let entity_reference_symbol_of_string str = make str;;
module Dbt_v = Doublet_v
module Ecm_t = Entitycategorymodule_t
module Ecm_v = Entitycategorymodule_v
module Fio_v = Fileio_v
module Fln_v = Filename_v
module Reg_t = Register_t
module Reg_v = Register_v
module Str_v = String_v
(** {6 Register.} *)
let nam_reg = "entitycategorymodule_external_by_entitycategorymodule";;
let entitycategorymodule_external_by_entitycategorymodule : 
    (Ecm_t.entitycategorymodule_proper, 
     Ecm_t.entitycategorymodule_reference) 
    Reg_t.register = Reg_v.make 137;;
let store ecm ecx_l =
  try Reg_v.store entitycategorymodule_external_by_entitycategorymodule ecm ecx_l
  with Failure ("Already_stored:Reg_v.store") ->
    failwith ("Already_stored:Ecmxp_v.store")
;;
let is_stored ecm =
  Reg_v.is_stored 
    entitycategorymodule_external_by_entitycategorymodule ecm
;;
let retrieve ecm =
  try Reg_v.retrieve 
      entitycategorymodule_external_by_entitycategorymodule ecm
  with Failure ("Not_stored:Reg_v.retrieve") ->
    failwith ("Not_stored:Ecmxp_v.retrieve")
;;  
let retrieve ecm =
  try Reg_v.retrieve 
      entitycategorymodule_external_by_entitycategorymodule ecm
  with Failure ("Not_stored:Reg_v.retrieve") ->
    failwith ("Not_stored:Ecmxp_v.retrieve")
;;  
let fln = Fln_v.make "entitycategorymodule_external.dat";;
let str_l = Fio_v.string_list_of_filename fln;;
entitycategorymodule_n_entitycategorymodule_external_of_string "atom symbol implementation messages implementation";;
let entitycategorymodule_n_entitycategorymodule_external_of_string str =
  let w_l = Str_v.split_of_c ' ' str in
  let nam_ent = List.nth w_l 0 in
  let nam_cat = List.nth w_l 1 in
  let nam_mod = List.nth w_l 2 in
  let nam_enx = List.nth w_l 3 in
  let nam_mox = List.nth w_l 4 in
  let ecm_ppr =
    Ecm_v.entitycategorymodule_proper_of_string_of_string_of_string 
      nam_ent nam_cat nam_mod
  in
  let ecm_ref =
    Ecm_v.entitycategorymodule_reference_of_string_of_string 
      nam_enx nam_mox
  in
  Dbt_v.make ecm_ppr ecm_ref
;;
entitycategorymodule_n_entitycategorymodule_external_of_string "atom symbol implementation messages implementation";;
#use "entitycategorymodule_external_list_provider_v.ml";;
let nam_mod = "tentitycategorymodule_external_list_provider_v.ml";;
module Ecmxlp_v = Entitycategorymodule_external_list_provider_v
module Ecm_v = Entitycategorymodule_v
;;
#use "tentitycategorymodule_external_list_provider_v.ml";;
Ecmxlp_v.provide ecm_ppr;;
let ecm_compare (ecm_1, enc_1) (ecm_2, enc_2) =
  String.compare (Ecm_v.name ecm_1) (Ecm_v.name ecm_2) 
;;
module Ecmxlp_v = Entitycategorymodule_external_list_provider_v
module Ecm_v = Entitycategorymodule_v
;;
let ecm_compare (ecm_1, enc_1) (ecm_2, enc_2) =
  String.compare (Ecm_v.name ecm_1) (Ecm_v.name ecm_2) 
;;
  #use "tentitycategorymodule_external_list_provider_v.ml";;
 let srt_l = List.sort ecm_n_enc_compare dbt_l;;
let ecm_n_enc_compare (ecm_1, enc_1) (ecm_2, enc_2) =
  String.compare (Ecm_v.name ecm_1) (Ecm_v.name ecm_2) 
;;
let dbt_l = [("a", 1); ("a", 2); ("b", 3)];;
List.filter (fun (s, i) -> s = "a") dbt_l;;
Lust_v.once_list_of_list ["a","a","b"];
;;
List_v.once_list_of_list ["a","a","b"];
;;
List_v.once_list_of_list ["a","a","b"];;
List_v.once_list_of_list ["a";"a";"b"];;
Doublet_list_v.doublet_list_of_left_off_doublet_list "a" dbt_l;;
Doublet_list_v.doublet_list_of_left_off_doublet_list "x" dbt_l;;
Doublet_list_v.doublet_list_of_left_off_doublet_list "b" dbt_l;;
Doublet_list_v.doublet_list_of_left_off_doublet_list "a" dbt_l;;
List.split dbt_l;;
fst;;
let ecm_l = fst (List.split dbt_l);;
let ecm_ol = List_v.once_list_of_list (fst (List.split dbt_l));;
let ecm_ol = List.rev (List_v.once_list_of_list (fst (List.split dbt_l)));;
let ecm = "a";;
List.filter (fun (p, r) -> p = ecm ) dbt_l;;
List.map  (List.filter (fun (p, r) -> p = ecm ) ) ecm_ol;;
List.map  (fun e -> List.filter (fun (p, r) -> p = e) ) ecm_ol;;
ecm_ol;;
List.map (fun e -> (List.filter (fun (p, r) -> p = e) ))  ecm_ol;;
let ext e l = List.filter (fun (p, r) -> p = e ) l;;
List.map (ext e) ecm_ol;;
List.map (fun e -> ext e dbt_l) ecm_ol;;
ext "a" dbt_l;;
let ecp_n_enrl_of_ecp_n_ecn_l ecp_n_ecn_l =
List.map (fun (a, b) -> b)  ecp_n_ecn_l
;;
let ecp_n_enrl_of_ecp_n_ecn_l ecp_n_ecn_l =
snd (List.split ecp_n_ecn_l)
;;
let ecp_n_enr_ll = List.map (fun e -> ext e dbt_l) ecm_ol;;
let ecp_n_ecn_l = List.hd ecp_n_enr_ll ;;
let ecp_n_enrl_of_ecp_n_ecn_l ecp_n_ecn_l =
  snd (List.split ecp_n_ecn_l)
;;
ecp_n_enrl_of_ecp_n_ecn_l  ecp_n_enr_ll ;;
let ecp_n_ecn_l = List.hd ecp_n_enr_ll ;;
snd (List.split ecp_n_ecn_l);;
let ecp_n_enrl_of_ecp_n_ecn_l ecp_n_ecn_l =
  snd (List.split ecp_n_ecn_l)
;;
let ecp_n_enrl_of_ecp_n_ecn_l ecp_n_ecn_l;;
ecp_n_enrl_of_ecp_n_ecn_l ecp_n_ecn_l;;
List.map (fun e ->  extract_sublist e dbt_l) ecm_ol;;
let extract_sublist e l = 
  List.filter (fun (p, r) -> p = e ) l 
;;
let ecm_ol =  (* *)
    List.rev (List_v.once_list_of_list (fst (List.split dbt_l)));;
 List.map (fun e -> extract_sublist e dbt_l) ecm_ol;;
let ll =  List.map (fun e -> extract_sublist e dbt_l) ecm_ol ;;
 List.map (fun l -> snd (List.split l) ll ;;
 List.map (fun l -> snd (List.split l)) ll ;;
let l = [("a", 1); ("a", 2)];;
let a_n_bl_of_a_n_b_l l =
  let b_l = snd (List.split l)in
  let a = List.hd (fst List.split l)) in
(a, bl)
;;
let a_n_bl_of_a_n_b_l l =
  let b_l = snd (List.split l) in
  let a = List.hd (fst List.split l)) in
(a, bl)
;;
let a_n_bl_of_a_n_b_l l =
  let b_l = snd (List.split l) in
  let a = List.hd (fst List.split l) in
(a, bl)
;;
let a_n_bl_of_a_n_b_l l =
  let b_l = snd (List.split l) in
  let a = List.hd (fst (List.split l) ) in
(a, bl)
;;
let a_n_bl_of_a_n_b_l l =
  let b_l = snd (List.split l) in
  let a = List.hd (fst (List.split l) ) in
(a, b_l)
;;
List.map a_n_bl_of_a_n_b_l ll ;;
let doublet_of_left_off_doublet_list lft dbl = 
  find_if_left (fun l -> l = lft) dbl 
;;
let doublet_list_of_left_off_doublet_list lft dbl =
  Lst_v.right_list_include_of_predicate_of_list 
    (fun l -> lft = Dbt_v.left_off_doublet l) dbl
;;
module Lst_v = List_v;;
let doublet_list_of_left_off_doublet_list lft dbl =
  Lst_v.right_list_include_of_predicate_of_list 
    (fun l -> lft = Dbt_v.left_off_doublet l) dbl
;;
#use "doublet_list_v.ml";;
once_right_n_left_list_of_doublet_list dbt_l;;
doublet_list_of_left_off_doublet_list "a" dbt_l;;
doublet_list_of_left_off_doublet_list "a" [("a", "b");("a", "c");("a", "d");("b", "c");("b", "d");("c", "d")]
;;
Dbl_v.doublet_list_of_left_off_doublet_list "a" [("a", "b");("a", "c");("a", "d");("b", "c");("b", "d");("c", "d")];;
  #use "tdoublet_list_v.ml";; 
 #use "tentitycategorymodule_external_list_provider_v.ml";;
Ecmxlp_v.provide ecm_ppr;;
 #use "tentitycategorymodule_external_list_provider_v.ml";;
Ecmxlp_v.provide ecm_ppr;;
#use "entitycategorymodule_external_list_provider_v.ml";;
    let fln = Fln_v.make "entitycategorymodule_external.dat";;
  let str_l = Fio_v.string_list_of_filename fln;;
let ecp_n_ecx_l = (* [(ecp, ecx); ...] *)
      List.map 
	entitycategorymodule_n_entitycategorymodule_external_of_string 
	str_l;;
   let ecp_n_ecxl_l = 
      Dbl_v.once_left_n_right_list_list_of_doublet_list
	ecp_n_ecx_l;;
   let str_l = List.sort String.compare Fio_v.string_list_of_filename fln;;
let str_l = List.sort String.compare (Fio_v.string_list_of_filename fln) in
;;
let str_l = List.sort String.compare (Fio_v.string_list_of_filename fln);;
  let ecp_n_ecx_l = (* [(ecp, ecx); ...] *)
      List.map 
	entitycategorymodule_n_entitycategorymodule_external_of_string 
	str_l;;
    let ecp_n_ecxl_l = 
      Dbl_v.once_left_n_right_list_list_of_doublet_list
	ecp_n_ecx_l;;
ecp_n_ecx_l;;
Doublet_list.vfirst_left_n_right_list_of_doublet_list  ecp_n_ecx_l;;
Doublet_list_v.first_left_n_right_list_of_doublet_list  ecp_n_ecx_l;;
str_l ;;
Ecmxlp_v.provide ecm_ppr;;
 Reg_v.is_stored entitycategorymodule_external_by_entitycategorymodule ecm ;;
 Reg_v.is_stored entitycategorymodule_external_by_entitycategorymodule ecm_ppr ;;
#use "entitycategorymodule_external_list_provider_v.ml";;
#use "tentitycategorymodule_external_list_provider_v.ml";;
Ecmxlp_v.provide ecm_ppr;;
let ecp_atm = Ecm_v.entitycategorymodule_proper_of_string_of_string_of_string "atom" "symbol" "implementation";;
let ecp_agg = Ecm_v.entitycategorymodule_proper_of_string_of_string_of_string "aggregate" "symbol" "implementation";;
let ecp_atm = Ecm_v.entitycategorymodule_proper_of_string_of_string_of_string "atom" "symbol" "implementation";;
ecp_agg ;;
Ecmxlp_v.provide ecp_agg;;
str_l;;
#use "tentitycategorymodule_external_list_provider_v.ml";;
Reg_v.key_list Ecmxlp_v.entitycategorymodule_external_by_entitycategorymodule;;
Reg_v.value_list Ecmxlp_v.entitycategorymodule_external_by_entitycategorymodule;;
#use "tentitycategorymodule_external_list_provider_v.ml";;
Ecmxlp_v.provide ecp_atm;;
#use "tentitycategorymodule_external_list_provider_v.ml";;
#use "entitycategorymodule_external_list_provider_v.ml";;
  let fln = Fln_v.make "entitycategorymodule_external.dat";;
 let str_l = List.sort String.compare (Fio_v.string_list_of_filename fln);;
let str = "aggregate        symbol implementation doublet        implementation";;
	entitycategorymodule_n_entitycategorymodule_external_of_string str;;
let ecp_n_ecx = entitycategorymodule_n_entitycategorymodule_external_of_string str;;
Dbl_v.once_left_n_right_list_list_of_doublet_list [ ecp_n_ecx ];;
let str_l =   ["aggregate        symbol implementation doublet        implementation";
   "aggregate        symbol type           doublet        type";];;
let ecp_n_ecx_l = (* [(ecp, ecx); ...] *)
      List.map 
	entitycategorymodule_n_entitycategorymodule_external_of_string 
	str_l;;
let ecp_n_ecxl_l = 
      Dbl_v.once_left_n_right_list_list_of_doublet_list
	ecp_n_ecx_l;;
	ecp_n_ecx_l = ecp_n_ecxl_l ;;
    List.iter 
      (fun (e, x_l) -> store e x_l) 
      ecp_n_ecxl_l;;
Reg_v.value_list Ecmxlp_v.entitycategorymodule_external_by_entitycategorymodule;;
#use "tentitycategorymodule_external_list_provider_v.ml";;
Reg_v.value_list Ecmxlp_v.entitycategorymodule_external_by_entitycategorymodule;;
;;
Reg_v.key_list Ecmxlp_v.entitycategorymodule_external_by_entitycategorymodule;;
#use "tentitycategorymodule_external_list_provider_v.ml";;
Reg_v.value_list Ecmxlp_v.entitycategorymodule_external_by_entitycategorymodule;;
Reg_v.entry_list Ecmxlp_v.entitycategorymodule_external_by_entitycategorymodule;;
ecp_n_ecxl_l;;
    let str_l = List.sort String.compare (Fio_v.string_list_of_filename fln);;
#use "tentitycategorymodule_external_list_provider_v.ml";;
    let str_l = List.sort String.compare (Fio_v.string_list_of_filename fln);;
    let ecp_n_ecx_l = (* [(ecp, ecx); ...] *)
      List.map 
	entitycategorymodule_n_entitycategorymodule_external_of_string 
	str_l;;
#use "entitycategorymodule_external_list_provider_v.ml";;
    let ecp_n_ecx_l = (* [(ecp, ecx); ...] *)
      List.map 
	entitycategorymodule_n_entitycategorymodule_external_of_string 
	str_l;;
str_l;;
    let ecp_n_ecx_l = (* [(ecp, ecx); ...] *)
      List.map 
	entitycategorymodule_n_entitycategorymodule_external_of_string 
	str_l;;
    let ecp_n_ecxl_l = 
      Dbl_v.once_left_n_right_list_list_of_doublet_list
	ecp_n_ecx_l;;
Dbl_v.once_left_n_right_list_list_of_doublet_list 
#use "tentitycategorymodule_external_list_provider_v.ml";;
#use "entitycategorymodule_external_list_provider_v.ml";;
#use "tentitycategorymodule_external_list_provider_v.ml";;
ecp_n_ecxl_l;;
str_l ;;
#use "tentitycategorymodule_external_list_provider_v.ml";;
str_l ;;
#use "tentitycategorymodule_external_list_provider_v.ml";;
ecp_n_ecx_l;;
let dbl = ecp_n_ecx_l;;
let or_l =  (* once right list *)
    List.rev (List_v.once_list_of_list (fst (List.split dbl)));;or_l;;
let ll =  
    List.map (fun e -> doublet_list_of_left_off_doublet_list  e dbl) or_l ;;
let ll =  
    List.map (fun e -> Dbl_v.doublet_list_of_left_off_doublet_list  e dbl) or_l ;;
 Dbl_v.doublet_list_of_left_off_doublet_list  ecp_atm dbl;;
or_l;;
 Dbl_v.doublet_list_of_left_off_doublet_list  (List.nth or_l 0) dbl;;
 Dbl_v.doublet_left_once_list_of_left_off_doublet_list (List.nth or_l 0) dbl;;
let ll =  
    List.map (fun e -> 
      Dbl_v.doublet_left_once_list_of_left_off_doublet_list e dbl) or_l ;;
let r_l = List.map first_left_n_right_list_of_doublet_list ll;;
let r_l = List.map Dbl_v.first_left_n_right_list_of_doublet_list ll;;
#use "tentitycategorymodule_external_list_provider_v.ml";;
Ecmxlp_v.provide ecp_atm;;
once_left_n_right_list_list_of_doublet_list 
[("a", "b");("a", "c");("a", "d");("b", "c");("b", "d");("c", "d")] 
;;
#use "doublet_list_v.ml";;once_left_n_right_list_list_of_doublet_list 
once_left_n_right_list_list_of_doublet_list [("a", "b");("a", "c");("a", "d");("b", "c");("b", "d");("c", "d")];;
[("a", ["b"; "c"; "d"]); ("b", ["c"; "d"]); ("c", ["d"])] = 
once_left_n_right_list_list_of_doublet_list [("a", "b");("a", "c");("a", "d");("b", "c");("b", "d");("c", "d")] ;;
("a", ["b"; "c"; "d"; "c"; "d"; "d"]) = first_left_n_right_list_of_doublet_list [("a", "b");("a", "c");("a", "d");("b", "c");("b", "d");("c", "d")];;
 #use "tparameter_value_provider_v.ml";;
Pas_v.name smb_par;;
Pvp_v.provide smb_par ;;
let val_pfi_ecx = Pav_v.make smb_pfi_ecx;;
 #use "tparameter_value_provider_v.ml";;
let val_pfi_ecx = Pav_v.make smb_pfi_ecx;;
 #use "tparameter_value_provider_v.ml";;
val_pfi_ecx;;
 #use "tparameter_value_provider_v.ml";;
Pvp_v.provide smb_pfi_ecx ;;
 #use "tparameter_value_provider_v.ml";;
 #use "tentitycategorymodule_external_list_provider_v.ml";;
Ecmxlp_v.provide ecp_atm;;
 #use "tentitycategorymodule_external_list_provider_v.ml";;
Ecmxlp_v.provide ecp_atm;;
 #use "tentitycategorymodule_external_list_provider_v.ml";;
Ecmxlp_v.provide ecp_atm;;
 #use "tentitycategorymodule_external_list_provider_v.ml";;
Ecmxlp_v.provide ecp_atm;;
 #use "tentitycategorymodule_external_list_provider_v.ml";;
Pvp_v.provide smb_pfi_ecx;;
 #use "entitycategorymodule_external_list_provider_v.ml";;
 #use "tentitycategorymodule_external_list_provider_v.ml";;
filename;;
let str_l = List.sort String.compare (Fio_v.string_list_of_filename fln);;
 let fln = filename ;;
let str_l = List.sort String.compare (Fio_v.string_list_of_filename fln);;
let smb_pfi = Pas_v.make "entitycategorymodule_external" ;;
let smb_pfi_ecx = Pas_v.entitycategorymodule_external_file;;
Pvp_v.store_force smb_pfi_ecx (Pav_v.make_filename_of_string "tentitycategorymodule_external_list_provider_v.dat");;
Pvp_v.provide smb_pfi_ecx;;
let filename =
  let smb_pfi = Pas_v.make "entitycategorymodule_external" in 
  let val_pfi = Pvp_v.provide smb_pfi in
  Pav_v.filename_off_parameter_value val_pfi
;;
 let fln = filename ;;
 let str_l = List.sort String.compare (Fio_v.string_list_of_filename fln);;
let str_l = try List.sort String.compare (Fio_v.string_list_of_filename fln) 
with Sys_error _ -> failwith "X";;
 #use "tentitycategorymodule_external_list_provider_v.ml";;
Pvp_v.provide smb_pfi_ecx;;
Ecmxlp_v.provide ecp_atm;;
 #use "tentitycategorymodule_external_list_provider_v.ml";;
Ecmxlp_v.provide ecp_atm;;
 #use "tentitycategorymodule_external_list_provider_v.ml";;
Ecmxlp_v.provide ecp_atm;;
Ecmxlp_v.provide ecp_agg;;
Reg_v.entry_list Ecmxlp_v.entitycategorymodule_external_by_entitycategorymodule;;
Reg_v.value_list Ecmxlp_v.entitycategorymodule_external_by_entitycategorymodule;;
 #use "tentitycategorymodule_external_list_provider_v.ml";;
ecp_agg;;
 #use "tentitycategorymodule_external_list_provider_v.ml";;
Ecmxlp_v.provide ecp_agg;;
(
Reg_v.entry_list Ecmxlp_v.entitycategorymodule_external_by_entitycategorymodule
=
[((Ecmxlp_v.Ecm_t.Ens_t.Entity_local_symbol "chemicalset",
   Ecmxlp_v.Ecm_t.Cts_t.Symbol_symbol,
   Ecmxlp_v.Ecm_t.Mds_t.Implementation_symbol),
  [(Ecmxlp_v.Ecm_t.Ens_t.Ers_t.Messages,
    Ecmxlp_v.Ecm_t.Mds_t.Implementation_symbol)]);
 ((Ecmxlp_v.Ecm_t.Ens_t.Entity_datastructure_symbol "polyglycine",
   Ecmxlp_v.Ecm_t.Cts_t.Symbol_symbol,
   Ecmxlp_v.Ecm_t.Mds_t.Implementation_symbol),
  [(Ecmxlp_v.Ecm_t.Ens_t.Ers_t.Triplet,
    Ecmxlp_v.Ecm_t.Mds_t.Implementation_symbol)]);
 ((Ecmxlp_v.Ecm_t.Ens_t.Entity_local_symbol "molecule_polymer",
   Ecmxlp_v.Ecm_t.Cts_t.Symbol_symbol,
   Ecmxlp_v.Ecm_t.Mds_t.Implementation_symbol),
  [(Ecmxlp_v.Ecm_t.Ens_t.Ers_t.Doublet, Ecmxlp_v.Ecm_t.Mds_t.Type_symbol)]);
 ((Ecmxlp_v.Ecm_t.Ens_t.Entity_datastructure_symbol "polyproline",
   Ecmxlp_v.Ecm_t.Cts_t.Symbol_symbol,
   Ecmxlp_v.Ecm_t.Mds_t.Implementation_symbol),
  [(Ecmxlp_v.Ecm_t.Ens_t.Ers_t.Tree, Ecmxlp_v.Ecm_t.Mds_t.Interface_symbol)]);
 ((Ecmxlp_v.Ecm_t.Ens_t.Entity_local_symbol "atom",
   Ecmxlp_v.Ecm_t.Cts_t.Symbol_symbol,
   Ecmxlp_v.Ecm_t.Mds_t.Implementation_symbol),
  [(Ecmxlp_v.Ecm_t.Ens_t.Ers_t.Error_messages,
    Ecmxlp_v.Ecm_t.Mds_t.Implementation_symbol);
   (Ecmxlp_v.Ecm_t.Ens_t.Ers_t.Error_messages,
    Ecmxlp_v.Ecm_t.Mds_t.Interface_symbol)])]
);;
Reg_v.key_list Ecmxlp_v.entitycategorymodule_external_by_entitycategorymodule;;
 #use "tentitycategorymodule_external_list_provider_v.ml";;
Ecmxlp_v.provide ecp_agg;;
Reg_v.key_list Ecmxlp_v.entitycategorymodule_external_by_entitycategorymodule;;
Reg_v.value_list Ecmxlp_v.entitycategorymodule_external_by_entitycategorymodule;;
Reg_v.entry_list Ecmxlp_v.entitycategorymodule_external_by_entitycategorymodule;;
 #use "tentitycategorymodule_external_list_provider_v.ml";;
#use "tatom_symbol_type_typing_caml_paragraph_value_v.ml";; 
#use "tpolypeptide_symbol_type_module_value_v.ml";; 
 #use "taggregate_symbol_type_module_value_v.ml";; 
#use "taggregate_symbol_type_module_value_v.ml";; 
#use "taggregate_symbol_type_typing_item_value_v.ml";; 
let nam_fil_itm = Itv_v.item_file_name_of_key_list kyl_itm;;
kyl_itm ;;
frm_itm ;;
mrk_cnt_t;;
pth_cnt_t ;;
nam_fil_itm;;
#use "taggregate_symbol_type_typing_item_value_v.ml";; 
#use  "entitycategorymodule_v.ml";;
let enc = entitycategory_off_entitycategorymodule ecm  ;;
Format.sprintf "%s_%s" 
    (Enc_v.name enc) (module_suffix_name_of_entitycategorymodule ecm);;
module_suffix_private_scope_of_module_symbol smb_mod;;
module_suffix_public_scope_of_module_symbol smb_mod;;
let sco = Scp_v.provide enc;;
 #use "taggregate_symbol_type_typing_caml_line_value_v.ml";; 
smb_cli_tdf;;
val_cli_tdf;;
smb_cli_pss;;
 #use "taggregate_symbol_type_typing_caml_line_value_v.ml";; 
smb_cli_pss;;
val_cli_pss;;
exit
 #use "tatom_symbol_type_modules_item_value_v.ml";; 
frm_itm ;;
 #use "tatom_symbol_type_modules_item_value_v.ml";; 
frm_itm ;;
 #use "tatom_symbol_type_modules_item_value_v.ml";; 
val_itm ;;
 #use "tatom_symbol_type_modules_item_value_v.ml";; 
 #use "tatom_symbol_implementation_codefile_value_v.ml";; 
#use "tatom_symbol_implementation_codefile_value_v.ml";; 
#use "tatom_symbol_implementation_modules_item_value_v.ml";; 
frm_itm ;;
nam_fil_itm;;
#use "tatom_symbol_type_modules_item_value_v.ml";; 
#use "tatom_symbol_type_codefile_value_v.ml";; 
frm_cfi;;
Lst_v.drop_last_element_of_list (Cfv_v.name_list val_cfi) ;;
nam_fil_cfi;;
#use "tatom_symbol_type_codefile_value_v.ml";; 
#use "tatom_symbol_implementation_codefile_value_v.ml";; 
#use "tatom_symbol_implementation_modules_item_value_v.ml";; 
  #use "tatom_symbol_implementation_modules_item_value_v.ml";; 
 #use "tatom_symbol_interface_codefile_value_v.ml";; 
  #use "tatom_symbol_implementation_extracting_caml_paragraph_value_v.ml";; 
mrk_cnt;;
smb_cpg;;
#use "taggregate_symbol_type_typing_item_value_v.ml";; 
let nam_fil_itm = Itv_v.item_file_name_of_key_list kyl_itm;;
#use "tconstructor_symbol_v.ml";; 
 Cns_v.make (Ens_v.make "polyglycine");;
#use "tconstructor_symbol_v.ml";; 
 Cns_v.make (Ens_v.make "xxxx");;
Cns_v.make (Ens_v.make "atom_fivetied");;
Cns_v.make (Ens_v.make"protein");;
Cns_v.module_abbreviation (Cns_v.make "atom_zerotied_anion_minus_two");;
Cns_v.module_abbreviation (Cns_v.make (Ens_v.make "atom_zerotied_anion_minus_two"));;
Cns_v.entity_symbol_off_constructor_symbol (Cns_v.make  (Ens_v.make "atom"));;
Cns_v.entity_symbol_off_constructor_symbol (Cns_v.make  (Ens_v.make "atom_zerotied"));;
Cns_v.make (Ens_v.make "n_sd");;
#use "tconstructor_symbol_v.ml";; 
 #use "taggregate_symbol_type_typing_caml_line_value_v.ml";; 
smb_cli_tdf;;
Clv_v.make smb_cli_tdf;;
let val_cli_pss = Clv_v.make smb_cli_pss;;
 #use "taggregate_symbol_type_typing_caml_line_value_v.ml";; 
let ecs_t = 
	  Cpc_v.top_entitycategorysuffix_off_caml_paragraph_context ctt_cpg;;
top_entitycategorycodefile_off_caml_paragraph_context ctt_cpg;;
Cpc_v.top_entitycategorycodefile_off_caml_paragraph_context ctt_cpg;;
Cpc_v.top_entitycategorysuffix_off_caml_paragraph_context ctt_cpg;;
 #use "taggregate_symbol_type_typing_caml_line_value_v.ml";; 
Cpc_v.top_entitycategorysuffix_off_caml_paragraph_context ctt_cpg;;
let smb_cfi = Ecc_v.codefile_symbol_off_entitycategorycodefile ecc;;
 #use "tentitycategorysuffix_v.ml";; 
ecnt;;
ecct;;
 #use "tentitycategorysuffix_v.ml";; 
Ens_v.module_abbreviation smb_ent;;
Cts_v.argument_abbreviation smb_cat;;
 #use "tentitycategorysuffix_v.ml";; 
Ecc_v.codefile_suffix_of_entitycategorycodefile smb_cfi;;
Ecs_v.codefile_suffix_of_entitycategorycodefile smb_cfi;;
Ecs_v.codefile_suffix_of_entitycategorycodefile ecct;;
Ecs_v.codefile_suffix_of_entitycategorycodefile eccb;;
 #use "entitycategorysuffix_v.ml";; 
let ecc = ecct;;
 let smb_cfi = Ecc_v.codefile_symbol_off_entitycategorycodefile ecc;;
let sco = Scp_v.provide ecc ;;
let sco = Scp_v.provide eccb;;
#use "scope_provider_v.ml";;
Sco_v.entitycategorycodefile_n_scope_list ();;
#use "scope_v.ml";;
#use "parameter_value_provider_v";;
#use "parameter_value_provider_v.ml";;
Pav_v.make;;
Pas_v.module_scope_file;;
#use "tparameter_value_provider_v.ml";;
Pas_v.name smb_pfi_ecx;;
#use "tparameter_value_provider_v.ml";;
smb_scf;;
Pas_v.name smb_scf;;
Pvp_v.provide smb_scf ;;
val_scf;;
Pvp_v.store_force smb_scf (Pav_v.make_filename_of_string "truc");
Pvp_v.provide smb_scf ;;
#use "tparameter_value_provider_v.ml";;
 #use "tentitycategorysuffix_v.ml";; 
 #use "scope_v.ml";; 
let par_scf = Pvp_v.provide Pas_v.module_scope_file;;
let fln = Pav_v.filename_off_parameter_value par_scf;;
let str_l = Fio_v.string_list_of_filename fln ;;
List.map entitycategorycodefile_n_scope_off_string str_l;;
let w_l = Str_v.split_of_c ' "ordinal symbol interface      private";;
let w_l = Str_v.split_of_c ' ' "ordinal symbol interface      private";;
#use "tparameter_value_provider_v.ml";;
 #use "tentitycategorysuffix_v.ml";; 
 #use "tscope_provider_v.ml";; 
module Enc_v = Entitycategory_v
module Pas_t = Parameter_symbol_t
module Pas_v = Parameter_symbol_v
module Pav_v = Parameter_value_v
module Pvp_v = Parameter_value_provider_v
module Sco_v = Scope_v
module Scp_v = Scope_provider_v
let smb_scf = Pas_v.module_scope_file;;
let val_scf = Pav_v.make smb_scf;;
let (ecc, sco) = Sco_v.entitycategorycodefile_n_scope_off_string "ordinal symbol implementation private";;
Sco_v.entitycategorycodefile_n_scope_list ();;
 #use "tscope_provider_v.ml";; 
Sco_v.entitycategorycodefile_n_scope_list ();;
Scp_v.provide ecc_ord ;;
let par_scf = Pvp_v.provide Pas_v.module_scope_file;;
let fln = Pav_v.filename_off_parameter_value par_scf 
let str_l = Fio_v.string_list_of_filename fln;;
module Fio_v = Fileio_v;;
let str_l = Fio_v.string_list_of_filename fln;;
let fln = Pav_v.filename_off_parameter_value par_scf ;;
let str_l = Fio_v.string_list_of_filename fln;;
let w_l = Str_v.split_of_c ' ' "";;
let w_l = String_v.split_of_c ' ' "";;
 #use "tscope_provider_v.ml";; 
Sco_v.entitycategorycodefile_n_scope_list ();;
 #use "tscope_provider_v.ml";; 
Sco_v.entitycategorycodefile_n_scope_list ();;
 #use "tscope_provider_v.ml";; 
Sco_v.entitycategorycodefile_n_scope_list ();;
 #use "tscope_provider_v.ml";; 
Sco_v.entitycategorycodefile_n_scope_list ();;
 #use "tscope_provider_v.ml";; 
Sco_v.entitycategorycodefile_n_scope_list ();;
 #use "tscope_provider_v.ml";; 
Sco_v.entitycategorycodefile_n_scope_list ();;
Scp_v.provide ecc_ord ;;
(
Scp_v.provide ecc_ord 
(* : Scope_t.scope *)
= 
Scope_t.Private_scope
);;
Scp_v.provide ecc_ord ;;
 #use "tscope_provider_v.ml";; 
 #use "tentitycategorysuffix_v.ml";; 
Cts_v.module_abbreviation smb_cat;;
Ecs_v.codefile_suffix_of_entitycategorycodefile ecc_t;;
 #use "tentitycategorysuffix_v.ml";; 
Enc_v.module_abbreviation ecn_t ;;
Ecc_v.argument_abbreviation ecc_t ;;
 #use "tentitycategorysuffix_v.ml";; 
Csu_v.make ;;
let suf_cfi = Csu_v.make "type";;
 #use "tentitycategorysuffix_v.ml";; 
Ecs_v.module_abbreviation;;
 #use "tentitycategorysuffix_v.ml";; 
Ecs_v.module_abbreviation ecs;;
Ecs_v.module_abbreviation ecs;;Ecs_v.module_abbreviation ecs_t;;
Ecs_v.module_abbreviation ecs_t;;
Ecs_v.module_abbreviation ecs_b;;
 #use "tentitycategorysuffix_v.ml";; 
Ecs_v.module_abbreviation ecs_t ;;
Ecs_v.argument_abbreviation ecs_t ;;
 #use "tentitycategorysuffix_v.ml";; 
Ecs_v.module_abbreviation ecs_t ;;
 #use "tentitycategorysuffix_v.ml";; 
 #use "taggregate_symbol_type_typing_caml_line_value_v.ml";;
Cpc_v.top_entitycategorysuffix_off_caml_paragraph_context ctt_cpg;;
(
smb_cli_pss
(* : Caml_line_symbol_t.caml_line_symbol *)
=
Caml_line_symbol_t.Singlet_symbol
 (Caml_line_symbol_t.Type_pipe_s_of_s_symbol
   ([(Caml_line_symbol_t.Cpc_t.Cnp_t.Cnm_t.Cns_t.Constructor_proper_symbol
       (Caml_line_symbol_t.Cpc_t.Cnp_t.Cnm_t.Cns_t.Constructor_oneline_symbol
         (Caml_line_symbol_t.Cpc_t.Cnp_t.Cnm_t.Cns_t.Constructor_datastructure_symbol
           (Caml_line_symbol_t.Cpc_t.Cnp_t.Cnm_t.Cns_t.Constructor_doublet_symbol
             "aggregate"))),
      1)],
    [("item", "typing"); ("codefile", "type"); ("category", "symbol");
     ("entity", "aggregate")]))
);;
 #use "taggregate_symbol_type_typing_caml_line_value_v.ml";;
 #use "tordinal_entitycategorycodefile_v.ml";; 
Cfp_v.provide ecc;;
 #use "tordinal_entitycategorycodefile_v.ml";; 
Cfp_v.provide ecc;;
Ecc_v.entitycategorysuffix_n_entitycategory_of_entitycategorycodefile ecc;;
Ecs_v.entitycategorysuffix_n_entitycategory_of_entitycategorysuffix ecs ;;
Ecs_v.module_abbreviation_n_entitycategory_of_entitycategorysuffix ecs;;
 #use "tordinal_entitycategorycodefile_v.ml";; 
Ecs_v.module_abbreviation_n_entitycategory_of_entitycategorysuffix ecs;;
(
Ecs_v.module_abbreviation_n_entitycategory_of_entitycategorysuffix ecs
(* : string *)
= 
"Ord_p_ordinal"
);;
Ecs_v.module_abbreviation_n_entitycategory_of_entitycategorysuffix ecs;;
 #use "tordinal_entitycategorycodefile_v.ml";; 
#use "tatom_symbol_implementation_modules_item_value_v.ml";; 
frm_itm ;;
#use "tatom_symbol_implementation_modules_item_value_v.ml";; 
#use "tatom_symbol_type_modules_item_value_v.ml";; 
frm_itm ;;
 #use "taggregate_symbol_implementation_modules_item_value_v.ml";; 
ecm_s;;
 #use "taggregate_symbol_implementation_modules_item_value_v.ml";; 
#use "taggregate_symbol_implementation_modules_item_value_v.ml";; 
 ctt_cps_l ;;
#use "taggregate_symbol_implementation_modules_item_value_v.ml";; 
ecs_s;;
#use "taggregate_symbol_implementation_modules_item_value_v.ml";; 
ecs_s;;
#use "taggregate_symbol_implementation_modules_item_value_v.ml";; 
val_itm ;;
#use "taggregate_symbol_implementation_modules_item_value_v.ml";; tordinal_entitycategorycodefile_v.ml \
tordinal_entitycategorycodefile_v.ml ;;
#use "tordinal_entitycategorycodefile_v.ml";;
#use "taggregate_symbol_implementation_modules_item_value_v.ml";; 
ecs_s;;
#use  "caml_paragraph_context_v.ml";;
ctt_cpg;;
let smb_cat = category_symbol_off_caml_paragraph_context ctt_cpg;;
#use "taggregate_symbol_implementation_modules_item_value_v.ml";; 
#use "taggregate_symbol_type_typing_item_value_v.ml";; 
frm_itm ;;
#use "taggregate_symbol_type_typing_item_value_v.ml";; 
mrk_cnt_t;;
#use "taggregate_symbol_type_typing_item_value_v.ml";; 
pth_cnt_t;;
(
val_itm 
(* : Item_value_t.item_value *)
=
Item_value_t.Tre_t.Node (["(** {6 Typing.} *)"],
    [Item_value_t.Tre_t.Leaf
       ["type aggregate_symbol ="; 
	"  | H_s"; 
	"  | F_s"; 
	";;"]
   ])
);;
val_itm;;
#use "taggregate_symbol_type_typing_item_value_v.ml";; 
#use "taggregate_symbol_implementation_modules_item_value_v.ml";; 
#use "taggregate_symbol_type_typing_item_value_v.ml";; 
val_itm ;;
#use "taggregate_symbol_type_typing_caml_line_value_v.ml";; 
Clv_v.make smb_cli_tdf;;
#use "taggregate_symbol_type_typing_caml_line_value_v.ml";; 
#use "taggregate_symbol_type_typing_item_value_v.ml";; 
Cps_v.heading ctt_cpg;;
frm_itm ;;
#use "taggregate_symbol_type_typing_item_value_v.ml";; 
val_itm ;;
 #use "taggregate_symbol_type_typing_caml_paragraph_value_v.ml";; 
frm_cpg ;;
 #use "taggregate_symbol_type_typing_caml_paragraph_value_v.ml";; 
frm_cpg ;;
Cls_v.type_pipe_s_of_b;;
Cls_v.type_pipe_s_of_b (List.nth ctt_cps_l 0);
;;
 #use "taggregate_symbol_type_typing_caml_paragraph_value_v.ml";; 
frm_cpg ;;
 #use "taggregate_symbol_type_typing_caml_paragraph_value_v.ml";; 
ctt_cps_l ;;
 #use "taggregate_symbol_type_typing_caml_paragraph_value_v.ml";; 
val_cpg;;
(
nam_fil_cpg
(* : string *)
= 
"aggregate_symbol_typing_type_definition_t.ml"
);;
#use "taggregate_symbol_type_typing_caml_paragraph_value_v.ml";; 
ctt_cpg;;
#use "taggregate_symbol_type_typing_caml_paragraph_value_v.ml";; 
#use "caml_paragraph_typing_formula_v.ml";;
let smb_cns_l =
    Cst_v.son_constructor_symbol_list_of_constructor_symbol smb_cnt ;;
let trp_imc = 
    Cpc_v.symboltriplet_off_caml_paragraph_context ctt_cpg;;
let smb_cli_l = 
	  List.map2 
	    type_pipe_caml_line_symbol_of_caml_paragraph_context_of_constructor_symbol 
	    ctt_cps_l smb_cns_l;;
let smb_cli_l = 
	  List.map2 
	    type_pipe_caml_line_symbol_of_caml_paragraph_context_of_constructor_symbol 
	    ctt_cps_l smb_cns_l;;
module Cptf_v = Caml_paragraph_typing_formula_v;;
List.map2 
  Cptf_v.type_pipe_caml_line_symbol_of_caml_paragraph_context_of_constructor_symbol 
	    ctt_cps_l smb_cns_l;;
#use "taggregate_symbol_type_typing_caml_paragraph_value_v.ml";; 
smb_cns_l;;
#use "taggregate_symbol_type_typing_caml_paragraph_value_v.ml";; 
smb_cli_l ;;
let smb_cpg = Cps_v.caml_paragraph_symbol_of_caml_paragraph_context ctt_cpg;;
let nam_cpg = Cps_v.name smb_cpg;;
let frm_cpg = Cpf_v.retrieve smb_cpg;;
let ctt_cps_l = Cpc_v.son_caml_paragraph_context_list_off_caml_paragraph_context ctt_cpg;;
let smb_cns_l = Cpc_v.son_constructor_symbol_list_off_caml_paragraph_context ctt_cpg;;
let smb_cli_l = List.map (fun c -> Cptf_v.type_pipe_caml_line_symbol_of_caml_paragraph_context c smb_cnt) ctt_cps_l;;
#use "taggregate_symbol_type_typing_caml_paragraph_value_v.ml";; 
smb_cli;;
smb_cli
(* : Caml_line_symbol_t.caml_line_symbol list *)
=
Caml_line_symbol_t.Datastructure_symbol
 (Caml_line_symbol_t.Type_pipe_doublet_a_b_symbol
ctt_cps_l);;
#use "taggregate_symbol_type_typing_caml_paragraph_value_v.ml";; 
frm_cpg ;;
#use "taggregate_symbol_type_typing_caml_paragraph_value_v.ml";; 
val_cpg;;
#use "taggregate_symbol_type_typing_caml_paragraph_value_v.ml";; 
ecs_l;;
#use "taggregate_symbol_type_typing_caml_paragraph_value_v.ml";; 
ecs_l;;
List.map Cpc_v.son_entitycategorysuffix_off_caml_paragraph_context ctt_cps_l;;
pth_cns_l;;
let entitycategorycodefile_off_caml_paragraph_context ctt_cpg =
  let smb_cat = category_symbol_off_caml_paragraph_context ctt_cpg in
  let smb_cfi = codefile_symbol_off_caml_paragraph_context ctt_cpg in
  let pth_cnt = constructor_path_off_caml_paragraph_context ctt_cpg in
  let mrk_cnt = Cnp_v.bottom_constructor_marker_of_constructor_path pth_cnt in
  let smb_ent = Cns_v.entity_symbol_off_constructor_symbol smb_cnt in 
  Ecc_v.make smb_ent smb_cat smb_cfi
;;
let entitycategorycodefile_off_caml_paragraph_context ctt_cpg =
  let smb_cat = category_symbol_off_caml_paragraph_context ctt_cpg in
  let smb_cfi = codefile_symbol_off_caml_paragraph_context ctt_cpg in
  let pth_cnt = constructor_path_off_caml_paragraph_context ctt_cpg in
  let mrk_cnt = Cnp_v.bottom_constructor_marker_of_constructor_path pth_cnt in
  let smb_ent = Cns_v.entity_symbol_off_constructor_symbol smb_cnt in 
  Ecc_v.make smb_ent smb_cat smb_cfi
;;
#use "taggregate_symbol_type_typing_caml_paragraph_value_v.ml";; 
let ecs_l = List.map Cpc_v.entitycategorysuffix_off_caml_paragraph_context ctt_cps_l;;
#use "taggregate_symbol_type_typing_caml_paragraph_value_v.ml";; 
#use "taggregate_symbol_type_typing_caml_paragraph_value_v.ml";; ecs_l 
ecs_l ;;
let ecs_l = List.map Cpc_v.entitycategorysuffix_off_caml_paragraph_context ctt_cps_l;;
#use "taggregate_symbol_type_typing_caml_paragraph_value_v.ml";; 
let ecs_l = List.map Cpc_v.entitycategorysuffix_off_caml_paragraph_context ctt_cps_l;;
#use "taggregate_symbol_type_typing_caml_paragraph_value_v.ml";; 
val_cpg;;
smb_cli;;
Clv_v.make smb_cli;;
#use "caml_line_value_v.ml";; 
#use "taggregate_symbol_type_typing_caml_paragraph_value_v.ml";; 
let val_cpg = Cpv_v.make smb_cpg;;
#use "taggregate_symbol_type_typing_caml_paragraph_value_v.ml";; 
frm_cpg ;;
val_cpg;;
#use "taggregate_symbol_type_typing_caml_paragraph_value_v.ml";; 
val_cpg;;
#use "taggregate_symbol_type_typing_caml_paragraph_value_v.ml";; 
val_cpg;;
ecc;;
#use "taggregate_symbol_type_typing_caml_paragraph_value_v.ml";; 
val_cpg;;
let enc_ppr = Ecs_v.entitycategory_proper_off_entitycategorysuffix (List.nth ecs_l 1);;
gmodule Ecs_v = Entitycategorysuffix_v;;
module Ecs_v = Entitycategorysuffix_v;;
let enc_ppr = Ecs_v.entitycategory_proper_off_entitycategorysuffix (List.nth ecs_l 1);;
#use "taggregate_symbol_type_typing_caml_paragraph_value_v.ml";; 
Ecs_v.codefile_suffix_name_of_entitycategorysuffix ecs_ord;;
#use "taggregate_symbol_type_typing_caml_paragraph_value_v.ml";; 
Ecs_v.codefile_suffix_of_entitycategorysuffix ecs_ord;;
#use "taggregate_symbol_type_typing_caml_paragraph_value_v.ml";; 
  #use "tscope_provider_v.ml";;
enc_ord ;;
sco_ord;;
Scp_v.provide enc_ord;;
enc_agg;;
Sco_v.entitycategory_private_scope_list ();;
  #use "tscope_provider_v.ml";;
#use "taggregate_symbol_type_typing_caml_paragraph_value_v.ml";; 
let ecs_l = List.map Cpc_v.entitycategorysuffix_off_caml_paragraph_context ctt_cps_l;;
ctt_cps_l;;
let ecc_l = List.map Cpc_v.entitycategorycofile_off_caml_paragraph_context ctt_cps_l;;
#use "taggregate_symbol_type_typing_caml_paragraph_value_v.ml";; 
 #use "tordinal_entitycategorycodefile_v.ml";; 
let ecc_ord_fake = Ecc_v.make (Ens_v.make "ordinal") smb_cat Cfs_v.codefile_type;;
 #use "tordinal_entitycategorycodefile_v.ml";; 
 enc ;;
ecc;;
 ecc_l;;
 #use "tordinal_entitycategorycodefile_v.ml";; 
 ecc_l;;
 #use "tordinal_entitycategorycodefile_v.ml";; 
Enc_v.module_abbreviation enc ;;
#use "taggregate_symbol_type_typing_caml_paragraph_value_v.ml";; 
#use "taggregate_symbol_type_typing_caml_paragraph_value_v.ml";;  #use "taggregate_symbol_type_typing_caml_paragraph_value_v.ml";; 
 #use "taggregate_symbol_type_typing_caml_paragraph_value_v.ml";; 
enc_ord ;;
#use "taggregate_symbol_type_typing_caml_paragraph_value_v.ml";; 
Ecs_v.codefile_suffix_off_entitycategorysuffix ecs_ord;;
#use "taggregate_symbol_type_typing_caml_paragraph_value_v.ml";; 
let ecc_l = List.map Cpc_v.entitycategorycodefile_off_caml_paragraph_context ctt_cps_l;;
let smb_ens_l = Cps_v.entity_symbol_of_constructor_symbol smb_cns_l;;
let smb_ens_l = Cns_v.entity_symbol_of_constructor_symbol smb_cns_l;;
let smb_ens_l = Cns_v.entity_symbol_off_constructor_symbol smb_cns_l;;
List.map Cns_v.entity_symbol_off_constructor_symbol smb_cns_l;;
#use "taggregate_symbol_type_typing_caml_paragraph_value_v.ml";; 
ecc_l ;;
#use "taggregate_symbol_type_typing_caml_paragraph_value_v.ml";; 
ecs_l ;;
#use "taggregate_symbol_type_typing_caml_paragraph_value_v.ml";; 
let suf_ord = Ecs_v.entitycategorysuffix_of_entitycategorycodefile ecc_ord;;
let suf_ord = Ecc_v.codefile_suffix_of_entitycategorycodefile ecc_ord;;
let sco_ord = Ecc_v.scope_of_entitycategorycodefile ecc_ord;;
d
#use "taggregate_symbol_type_typing_caml_paragraph_value_v.ml";; 
let sco_ord = Ecc_v.scope_of_entitycategorycodefile ecc_ord;;
let enc_ord = Ecc_v.entitycategory_off_entitycategorycodefile ecc_ord;;
let s = Scp_v.provide enc_ord;;
#use "taggregate_symbol_type_typing_caml_paragraph_value_v.ml";; 
s;;
 #use "tscope_provider_v.ml";;
enc_ord ;;
 #use "tscope_provider_v.ml";;
enc ;;
 #use "tordinal_scope_provider_v.ml";;
ecs;;
Sco_v.entitycategory_private_scope_list ();;
 #use "tordinal_scope_provider_v.ml";;
Sco_v.entitycategory_private_scope_list ();;
fln;;
 #use "tordinal_scope_provider_v.ml";;
 #use "taggregate_symbol_type_typing_caml_paragraph_value_v.ml";; 
let enc_ord = Ecc_v.entitycategory_off_entitycategorycodefile ecc_ord;;
let s = Scp_v.provide enc_ord;;
 #use "tordinal_scope_provider_v.ml";;
ecs;;
enc ;;
let smb_ent = Ens_v.make "ordinal";;
let enc = Enc_v.make smb_ent smb_cat;;
#use "tordinal_scope_provider_v.ml";;
ecc;;
#use "tordinal_scope_provider_v.ml";;
#use "entitycategorycodefile_v.ml";;
scope_of_entitycategorycodefile ecc;;
entitycategory_off_entitycategorycodefile ecc;;
ecc;;
smb_cat;;
let enc = Enc_v.make smb_ent smb_cat;;
let smb_enc = Enc_v.make smb_ent smb_cat ;;
let enc = Enc_v.entitycategory_of_string_of_string "ordinal" "symbol";;
category_symbol_off_entitycategorycodefile ecc;;
let smb_enc = Enc_v.make smb_ent smb_cat ;;
let smb_enc = Enc_v.category_off_entitycategory enc;;
let smb_enc = Enc_v.category_symbol_off_entitycategory enc;;
let smb_cat = Enc_v.category_symbol_off_entitycategory enc;;
category_symbol_off_entitycategorycodefile ecc;;
smb_cat;;
let smb_cat = Enc_v.category_symbol_off_entitycategory enc;;
#use "tordinal_scope_provider_v.ml";;
ecc;;
#use "tordinal_scope_provider_v.ml";;
 #use "tentitycategorysuffix_v.ml";; 
enc_t;;
#use "tentitycategorysuffix_v.ml";; 
ecc_t;;
#use "tentitycategorysuffix_v.ml";; 
Enc_v.argument_abbreviation enc_t ;;
#use "tentitycategorysuffix_v.ml";; 
 #use "taggregate_symbol_type_typing_caml_paragraph_value_v.ml";; 
ecs_l ;;
 #use "taggregate_symbol_type_typing_caml_paragraph_value_v.ml";; 
ecs_l ;;
 #use "taggregate_symbol_type_typing_caml_paragraph_value_v.ml";; 
 ecc_l ;;
 #use "taggregate_symbol_implementation_modules_item_value_v.ml";; 
 ctt_cpgecs_s;;
ecs_s;;
 #use "taggregate_symbol_implementation_modules_item_value_v.ml";; 
nam_fil_itm;;
 #use "taggregate_symbol_implementation_modules_item_value_v.ml";; 
 #use "tatom_symbol_implementation_codefile_value_v.ml";; 
(
frm_cfi
(* Item_symbol_t.item_symbol list *) 
= 
[Its_v.heading;
 Its_v.modules;
 Its_v.naming;
 Its_v.printing;
 Its_v.extracting;
 Its_v.querying;
 Its_v.upgrading;
 Its_v.including;
 Its_v.ending]
);;
let val_cfi = Cfv_v.make kyl_cfi;;
 #use "tatom_symbol_implementation_codefile_value_v.ml";; 
let val_tgt = Tgv_v.make smb_ent smb_cat smb_cfi ;;
let ecc = Ecc_v.make smb_ent smb_cat smb_cfi;;  
Cfv_v.make kyl_cfi;;
 let smb_cfi = Kyl_v.codefile_symbol_off_key_list kyl_cfi;;
module Dbt_v = Doublet_v
module Enc_v = Entitycategory_v
module Ecc_v = Entitycategorycodefile_v
module Ecs_v = Entitycategorysuffix_v
module Fln_v = Filename_v
module Itp_v = Item_value_provider_v
module Its_v = Item_symbol_v
module Itv_v = Item_value_v
module Kyl_v = Key_list_v
module Lst_v = List_v
module Cff_v = Codefile_formula_v
module Cfs_v = Codefile_symbol_v;;
 let smb_cat = Kyl_v.category_symbol_off_key_list kyl_cfi;;
 let smb_cfi = Kyl_v.codefile_symbol_off_key_list kyl_cfi;;
 let frm_cfi = Cff_v.retrieve (smb_cfi, smb_cat);;
let key_itm_l = List.map Its_v.key frm_cfi;;
let kyl_itm_l = List.map (fun k -> k :: kyl_cfi) key_itm_l ;;
 List.map Itp_v.provide kyl_itm_l ;;
#use "item_value_provider_v.ml";;
Reg_v.is_stored item_register kyl_itm ;;
build_and_store kyl_itm ;;
provide kyl_itm;;
#use "taggregate_symbol_type_typing_caml_line_value_v.ml";; 
Cpc_v.top_entitycategorycodefile_off_caml_paragraph_context ctt_cpg;;
#use "taggregate_symbol_type_typing_caml_line_value_v.ml";; 
Cpc_v.top_entitycategorysuffix_off_caml_paragraph_context ctt_cpg;;
#use "taggregate_symbol_type_typing_caml_line_value_v.ml";; 
 #use "tatom_symbol_entitycategorycodefile_v.ml";; 
smb_ent ;;
 enc;;
ecc;;
 #use "tatom_symbol_entitycategorycodefile_v.ml";; 
Fln_v.name (Cfp_v.provide ecc);;
(Cfp_v.provide ecc);;
Ecs_v.entitycategorysuffix_n_entitycategory_of_entitycategorysuffix ecs;;
#use "entitycategorycodefile_external_list_provider_v.ml";;
filename ();;
#use "entitycategorycodefile_external_list_provider_v.ml";;
 let smb_pfi = Pas_v.make "entitycategorycodefile" ;;
 #use "tentity_external_n_codefile_list_provider_v.ml";;
ecc_atm ;;
ecc_agg ;;
Exclp_v.provide ecc_atm;;
 #use "tentity_external_n_codefile_list_provider_v.ml";;
 #use "entity_external_n_codefile_list_provider_v.ml";;
filename () ;;
 #use "entity_external_n_codefile_list_provider_v.ml";;
filename () ;;
ecc_atm ;;
let ecc_atm = Ecc_v.entitycategorycodefile_of_string_of_string_of_string "atom" "symbol" "implementation";;
 #use "tentity_external_n_codefile_list_provider_v.ml";;
Exclp_v.provide ecc_atm;;
 #use "tentity_external_n_codefile_list_provider_v.ml";;
Reg_v.key_list Exclp_v.entity_external_n_codefile_by_entitycategorycodefile;;
Reg_v.value_list Exclp_v.entity_external_n_codefile_by_entitycategorycodefile;;
Reg_v.entry_list Exclp_v.entity_external_n_codefile_by_entitycategorycodefile;;
 #use "tentity_external_n_codefile_list_provider_v.ml";;
 #use "tparameter_value_provider_v.ml";;
Pas_v.name smb_pfi_ecx;;
 #use "tparameter_value_provider_v.ml";;
Pvp_v.provide smb_pfi_ecx ;;
 #use "tparameter_value_provider_v.ml";;
Pvp_v.provide smb_scf ;;
 #use "tparameter_value_provider_v.ml";;
Pvp_v.provide smb_pfi_ecx ;;
 #use "tparameter_value_provider_v.ml";;
val_scf;;
 #use "tparameter_value_provider_v.ml";;
String.rindex "abc"  '/';;
#use "directory_path_v.ml";;
#use "directorypath_v.ml";;
let str ="truc";;
 extract_of_string str ;;
is_string_directorypath str ;;
is_string_directorypath "(ordinal,,p).ml";;
Str.search_forward (Str.regexp "[a-zA-Z0-9]") str 0 ;;
is_string_directorypath str;;
str;;
let str = "(ordinal,,p).ml";;
is_string_directorypath str;;
 Str.search_forward (Str.regexp "[()[]%") str 0 ;;
 Str.search_forward (Str.regexp "[()]" str 0 ;;
 Str.search_forward (Str.regexp "[\(\)]" str 0 ;;
 Str.search_forward (Str.regexp "[\(\)]") str 0 ;;
 Str.search_forward (Str.regexp "[()]") str 0 ;;
str;;
 Str.search_forward (Str.regexp ",") str 0 ;;
 Str.search_forward (Str.regexp "(") str 0 ;;
 Str.search_forward (Str.regexp "[(]") str 0 ;;
 Str.search_forward (Str.regexp ")") str 0 ;;
 Str.search_forward (Str.regexp ",") str 0 ;;
 Str.search_forward (Str.regexp ",|)") str 0 ;;
 Str.search_forward (Str.regexp ",\|)") str 0 ;;
 Str.search_forward (Str.regexp "[,)]") str 0 ;;
 Str.search_forward (Str.regexp "[(,)]") str 0 ;;
 Str.search_forward (Str.regexp "[(,%)]") str 0 ;;
 #use "tordinal_entitycategorycodefile_v.ml";; 
Cfp_v.provide ecc;;
let ecs = Ecs_v.entitycategorysuffix_of_entitycategorycodefile ecc;;
let nam_ecs = Ecs_v.name ecs ;;
 let smb_ent = entity_symbol_off_entitycategory enc;;
use "entitycategory_v.ml";;
#use "entitycategory_v.ml";;
let smb_ent = entity_symbol_off_entitycategory enc;;
 let smb_cat = category_symbol_off_entitycategory enc;;
 let nam_ent = Ens_v.name smb_ent;;
let nam_cat = Cts_v.name smb_cat;;
	Format.sprintf "%s_%s" nam_ent nam_cat;;
let name enc =
  let smb_ent = entity_symbol_off_entitycategory enc in
  let smb_cat = category_symbol_off_entitycategory enc in
  let nam_ent = Ens_v.name smb_ent in 
  match smb_cat with
    | Cts_t.Empty -> nam_ent
    | _ ->
	let nam_cat = Cts_v.name smb_cat in 
	Format.sprintf "%s_%s" nam_ent nam_cat
;;(** Ex. : atom_symbol;  "aggregate"; "string" *)
name enc ;;
name_capitalized enc;;
#use "codefile_filename_provider_v.ml";;
 #use "taggregate_symbol_type_typing_caml_paragraph_value_v.ml";; 
ecc_l ;;
 #use "taggregate_symbol_type_typing_caml_paragraph_value_v.ml";; 
frm_cpg ;;
ctt_cps_l;;
(
ctt_cps_l 
(* : Caml_paragraph_context_t.caml_paragraph_context list *)
  =
[([(Cns_v.constructor_symbol_of_entityname "string", 2);
   ((Cns_v.constructor_symbol_of_entityname "aggregate"), 1)],
  kyl_itm);
 ([((Cns_v.constructor_symbol_of_entityname "ordinal"), 2);
   ((Cns_v.constructor_symbol_of_entityname "aggregate"), 1)],
  kyl_itm);
]
);;
val_cpg;;
#use "caml_line_value_v.ml";;
ecs_l ;;
let mane_l = List.map
    Ecs_v.module_abbreviation_n_entitycategory_of_entitycategorysuffix ecs_l
 ;;
let ecs = List.nth ecs_l 0;;
let abb_cfi = module_abbreviation ecs;;
    Ecs_v.module_abbreviation_n_entitycategory_of_entitycategorysuffix ecs_l
;;
let ecs = List.nth ecs_l 0;;
let enc = entitycategory_off_entitycategorysuffix ecs;;
#use "entitycategorysuffix_v.ml";;
let enc = entitycategory_off_entitycategorysuffix ecs;;
name ecs;;
argument_abbreviation ecs;;
let enc = entitycategory_off_entitycategorysuffix ecs;;
codefile_suffix_name ecs;;
 let enc = entitycategory_off_entitycategorysuffix ecs;;
Enc_v.module__abbreviation enc;;
Enc_v.module_abbreviation enc;;
let module_abbreviation enc =
  let smb_ent = entity_symbol_off_entitycategory enc in
  let smb_cat = category_symbol_off_entitycategory enc in
  let abb_ent = Ens_v.module_abbreviation smb_ent in 
  let abb_cat = Cts_v.module_abbreviation smb_cat in 
  match smb_ent with
    | Ens_t.Entity_fictive_symbol _ -> ""
    | _ ->  
	Format.sprintf "%s%s" abb_ent abb_cat
;;
 #use "taggregate_symbol_type_typing_caml_paragraph_value_v.ml";; 
#use "entitycategorysuffix_v.ml";;
let ecs = List.nth ecs_l 0;;
 let enc = entitycategory_off_entitycategorysuffix ecs;;
Enc_v.name enc;;
 #use "taggregate_symbol_type_typing_caml_paragraph_value_v.ml";; 
#use "entitycategorysuffix_v.ml";;
let ecs = List.nth ecs_l 0;;
 let enc = entitycategory_off_entitycategorysuffix ecs;;
Enc_v.name enc;;
#use "entitycategory_v.ml";;
module_abbreviation enc;;
#use "entitycategory_v.ml";;
#use "entitycategorysuffix_v.ml";;
 #use "taggregate_symbol_type_typing_caml_paragraph_value_v.ml";; 
let ecs = List.nth ecs_l 0;;
 let enc = entitycategory_off_entitycategorysuffix ecs;;
Enc_v.name enc;;
 Enc_v.module_abbreviation enc;;
let module_abbreviation ecs =
  let enc = entitycategory_off_entitycategorysuffix ecs in
  let abb_enc = Enc_v.module_abbreviation enc in
  let smb_ent = entity_symbol_off_entitycategorysuffix ecs in
  match smb_ent with
  | Ens_t.Entity_fictive_symbol -> ""
  | _ ->
      Format.sprintf "%s_%s" 
	abb_enc (codefile_suffix_name ecs )
;; 
let module_abbreviation ecs =
  let enc = entitycategory_off_entitycategorysuffix ecs in
  let abb_enc = Enc_v.module_abbreviation enc in
  let smb_ent = entity_symbol_off_entitycategorysuffix ecs in
  match smb_ent with
  | Ens_t.Entity_fictive_symbol _ -> ""
  | _ ->
      Format.sprintf "%s_%s" 
	abb_enc (codefile_suffix_name ecs )
;; 
module_abbreviation enc;;
module_abbreviation ecs;;
 #use "taggregate_symbol_type_typing_caml_paragraph_value_v.ml";; 
val_cpg;;
let mane_l = List.map
    Ecs_v.module_abbreviation_n_entitycategory_of_entitycategorysuffix ecs_l;;
val_cpg;;
 #use "taggregate_symbol_type_typing_caml_paragraph_value_v.ml";; 
val_cpg;;
(
val_cpg
(* : Caml_paragraph_value_t.caml_paragraph_value *)
=
["type aggregate_symbol =";
 "  | Doublet of (string, Ord_p.ordinal) Dbt_t.doublet";
";;"]
);;
frm_cpg ;;
 #use "taggregate_symbol_type_typing_caml_paragraph_value_v.ml";; 
smb_cli;;
frm_cpg =
[Cls_v.type_definition ctt_cpg;
 Caml_paragraph_formula_t.Cls_t.Datastructure_symbol
  (Caml_paragraph_formula_t.Cls_t.Type_pipe_doublet_a_b_symbol ctt_cps_l);
 Cls_v.double_semicolon ();
];;
 #use "taggregate_symbol_type_typing_caml_paragraph_value_v.ml";; 
#use "taggregate_symbol_type_typing_item_value_v.ml";; 
#use "taggregate_symbol_type_codefile_value_v.ml";; 
Lst_v.drop_last_element_of_list (Cfv_v.name_list val_cfi) ;;
nam_fil_cfi;;
#use "taggregate_symbol_type_codefile_value_v.ml";; 
#use "taggregate_symbol_type_codefile_value_v.ml";; Lst_v.drop_last_element_of_list (Cfv_v.name_list val_cfi) 
Lst_v.drop_last_element_of_list (Cfv_v.name_list val_cfi) ;;
#use "taggregate_symbol_type_codefile_value_v.ml";; 
#use "tpolypeptide_symbol_type_codefile_value_v.ml";; 
Lst_v.drop_last_element_of_list (Cfv_v.name_list val_cfi) ;;
#use "tpolypeptide_symbol_type_codefile_value_v.ml";; 
  #use "tatom_symbol_entitycategorycodefile_v.ml";; 
Ecs_v.entitycategorysuffix_n_entitycategory_of_entitycategorysuffix ecs;;
 #use "tatom_symbol_entitycategorycodefile_v.ml";; 
Ecs_v.entitycategorysuffix_n_entitycategory_of_entitycategorysuffix ecs;;
 #use "tatom_symbol_entitycategorycodefile_v.ml";; 
#use "taggregate_symbol_type_codefile_value_v.ml";; 
ecs;;
let mane_l = List.map;;
 #use "tatom_symbol_entitycategorycodefile_v.ml";; 
#use "tordinal_entitycategorycodefile_v.ml";; 
 #use "tparameter_value_provider_v.ml";;
Pvp_v.provide smb_pfi_ecx ;;
  #use "tatom_onetied_single_symbol_type_typing_item_value_v.ml";; 
#use "tatom_onetied_single_symbol_type_typing_item_formula_v.ml";; 
#use "tatom_onetied_single_symbol_type_typing_item_value_v.ml";; 
#use "caml_paragraph_context_v.ml";;
#use "tatom_onetied_single_symbol_type_typing_item_value_v.ml";; 
#use "tatom_onetied_single_symbol_type_typing_caml_paragraph_value_v.ml";;
let smb_cds = Cns_v.constructor_datastructure_symbol_off_constructor_symbol smb_cnt;;
#use "tatom_onetied_single_symbol_type_typing_caml_paragraph_value_v.ml";;
#use "tatom_onetied_singlet suf_ord = Ecc_v.codefile_suffix_of_entitycategorycodefile ecc_ord;;le_symbol_type_typing_caml_paragraph_value_v.ml";;
let suf_ord = Ecc_v.codefile_suffix_of_entitycategorycodefile ecc_ord;;
smb_cpg ;;
(
smb_cpg 
(* : Caml_paragraph_symbol_t.caml_paragraph_symbol *)
=
Cps_v.type_definition ctt_cpg
);;
(
 trp_imc 
(* : (Item_symbol_t.item_symbol, Codefile_symbol_t.codefile_symbol,
   Category_symbol_t.category_symbol)
  Triplet_t.triplet *)
=
(Item_symbol_t.Typing_symbol, 
 Codefile_symbol_t.Type_symbol,
 Category_symbol_t.Symbol_symbol)
);;
 (
ctt_cpg 
(* : Caml_paragraph_context_t.caml_paragraph_context *)
=
([(Caml_paragraph_context_t.Cnp_t.Cnm_t.Cns_t.Constructor_proper_symbol
    (Caml_paragraph_context_t.Cnp_t.Cnm_t.Cns_t.Constructor_oneline_symbol
      (Caml_paragraph_context_t.Cnp_t.Cnm_t.Cns_t.Constructor_datastructure_symbol
        (Caml_paragraph_context_t.Cnp_t.Cnm_t.Cns_t.Constructor_doublet_symbol
          "atom_onetied_single"))),
   1)],
 [("item", "typing"); ("codefile", "type"); ("category", "symbol");
  ("entity", "atom_onetied_single")])
);;
ctt_cpg ;;
smb_cns_l;;
smb_ens_l;;
ctt_cps_l ;;
ecc_l ;;
ecs_l ;;
  #use "tatom_onetied_single_symbol_type_typing_caml_paragraph_value_v.ml";; 
#use "tatom_onetied_single_symbol_type_typing_caml_paragraph_value_v.ml";; 
#use "tatom_onetied_single_symbol_type_typing_caml_paragraph_value_v.ml";;
let smb_cli = Cptf_v.type_pipe_caml_line_symbol_of_caml_paragraph_context ctt_cpg;;
Cptf_v.type_pipe_caml_line_symbol_of_caml_paragraph_context;;
#use "tatom_onetied_single_symbol_type_typing_caml_paragraph_value_v.ml";; 
val_cpg;;
let val_cpg = Cpv_v.make smb_cpg;;
let ctt_cpg_f_s = List.nth ctt_cps_l 1;;
frm_cpg;;
frm_cpg ;;
(
frm_cpg 
(* : Caml_paragraph_formula_t.caml_paragraph_formula *)
=
[Cls_v.type_definition ctt_cpg;
 Caml_paragraph_formula_t.Cls_t.Singlet_symbol
  (Caml_paragraph_formula_t.Cls_t.Type_pipe_s_of_s_symbol
    ([(Caml_paragraph_formula_t.Cls_t.Cpc_t.Cnp_t.Cnm_t.Cns_t.Constructor_fictive_symbol
        (Caml_paragraph_formula_t.Cls_t.Cpc_t.Cnp_t.Cnm_t.Cns_t.Constructor_bare_symbol
          "h_s"),
       2);
      (Caml_paragraph_formula_t.Cls_t.Cpc_t.Cnp_t.Cnm_t.Cns_t.Constructor_proper_symbol
        (Caml_paragraph_formula_t.Cls_t.Cpc_t.Cnp_t.Cnm_t.Cns_t.Constructor_several_symbol
          "atom_onetied_single"),
       1)],
     [("item", "typing"); ("codefile", "type"); ("category", "symbol");
      ("entity", "atom_onetied_single")]));
 Caml_paragraph_formula_t.Cls_t.Singlet_symbol
  (Caml_paragraph_formula_t.Cls_t.Type_pipe_s_of_s_symbol
    ([(Caml_paragraph_formula_t.Cls_t.Cpc_t.Cnp_t.Cnm_t.Cns_t.Constructor_fictive_symbol
        (Caml_paragraph_formula_t.Cls_t.Cpc_t.Cnp_t.Cnm_t.Cns_t.Constructor_bare_symbol
          "f_s"),
       2);
      (Caml_paragraph_formula_t.Cls_t.Cpc_t.Cnp_t.Cnm_t.Cns_t.Constructor_proper_symbol
        (Caml_paragraph_formula_t.Cls_t.Cpc_t.Cnp_t.Cnm_t.Cns_t.Constructor_several_symbol
          "atom_onetied_single"),
       1)],
     [("item", "typing"); ("codefile", "type"); ("category", "symbol");
      ("entity", "atom_onetied_single")]));
 Cls_v.double_semicolon ();
]
);;
  let smb_cnt = 
    Cpc_v.top_constructor_symbol_off_caml_paragraph_context ctt_cpg;;
let ctt_cpg_l =
    Cpc_v.son_caml_paragraph_context_list_off_caml_paragraph_context ctt_cpg;;
retrieve_nondatastructure_type_definition ctt_cpg ctt_cpg_l smb_cnt;;
#use  "caml_paragraph_typing_formula_v.ml";;
retrieve_nondatastructure_type_definition ctt_cpg ctt_cpg_l smb_cnt;;
let trp_imc = 
    Cpc_v.symboltriplet_off_caml_paragraph_context ctt_cpg ;;
let smb_cli_l = 
	  List.map
	    (fun c -> type_pipe_caml_line_symbol_of_caml_paragraph_context c smb_cnt) ctt_cpg_l ;;  let ctt_cpg_l =
    Cpc_v.son_caml_paragraph_context_list_off_caml_paragraph_context ctt_cpg  let ctt_cpg_l =
    Cpc_v.son_caml_paragraph_context_list_off_caml_paragraph_context ctt_cpg;;
let ctt_cpg_l =
    Cpc_v.son_caml_paragraph_context_list_off_caml_paragraph_context ctt_cpg;;
let smb_cli_l = 
	  List.map
	    (fun c -> type_pipe_caml_line_symbol_of_caml_paragraph_context c smb_cnt) ctt_cpg_l ;;
type_pipe_caml_line_symbol_of_caml_paragraph_context ctt_cpg_f_s smb_cpg;;
type_pipe_caml_line_symbol_of_caml_paragraph_context ctt_cpg_f_s smb_cnt;;
smb_cnt;;
let smb_cnt_f_s = List.nth smb_cns_l 1;;
let smb_cli_f_s = Cptf_v.type_pipe_caml_line_symbol_of_caml_paragraph_context ctt_cpg_f_s smb_cnt_f_s;;
  #use "tatom_onetied_single_symbol_type_typing_caml_paragraph_value_v.ml";; 
sco_f_s ;;
  #use "tatom_onetied_single_symbol_type_typing_caml_paragraph_value_v.ml";; 
suf_f_s ;;
sco_f_s ;;
  #use "tatom_onetied_single_symbol_type_typing_caml_paragraph_value_v.ml";; 
Ecc_v.codefile_suffix_of_entitycategorycodefile ecc_ord;;
#use "tatom_onetied_single_symbol_type_typing_caml_paragraph_value_v.ml";;
#use "tatom_onetied_single_symbol_type_typing_caml_paragraph_value_v.ml";; 
sco_f_s ;;
#use "tatom_onetied_single_symbol_type_typing_caml_paragraph_value_v.ml";; 
Ecc_v.codefile_suffix_of_entitycategorycodefile ecc_f_s;;
#use "tatom_onetied_single_symbol_type_typing_caml_paragraph_value_v.ml";; 
 smb_cli_f_s ;;
#use "tatom_onetied_single_symbol_type_typing_caml_paragraph_value_v.ml";; 
frm_cpg ;;
val_cpg;;
#use "tatom_onetied_single_symbol_type_typing_caml_paragraph_value_v.ml";; 
#use "tpolypeptide_symbol_type_codefile_value_v.ml";; 
#use "tpolypeptide_symbol_type_typing_caml_paragraph_value_v.ml";;
let frm_cpg = Cpf_v.retrieve smb_cpg;;
#use "tpolypeptide_symbol_type_typing_caml_paragraph_value_v.ml";;
(
smb_cpg 
(* : Caml_paragraph_symbol_t.caml_paragraph_symbol *)
=
Cps_v.type_definition ctt_cpg
);;
(
 trp_imc 
(* : (Item_symbol_t.item_symbol, Codefile_symbol_t.codefile_symbol,
   Category_symbol_t.category_symbol)
  Triplet_t.triplet *)
=
(Item_symbol_t.Typing_symbol, 
 Codefile_symbol_t.Type_symbol,
 Category_symbol_t.Symbol_symbol)
);;
(
ctt_cpg 
(* : Caml_paragraph_context_t.caml_paragraph_context *)
=
([(Caml_paragraph_context_t.Cnp_t.Cnm_t.Cns_t.Constructor_proper_symbol
    (Caml_paragraph_context_t.Cnp_t.Cnm_t.Cns_t.Constructor_several_symbol
      "polypeptide"),
   1)],
 [("item", "typing"); ("codefile", "type"); ("category", "symbol");
  ("entity", "polypeptide")])
);;
(
ctt_cpg 
(* : Caml_paragraph_context_t.caml_paragraph_context *)
=
([(Caml_paragraph_context_t.Cnp_t.Cnm_t.Cns_t.Constructor_proper_symbol
    (Caml_paragraph_context_t.Cnp_t.Cnm_t.Cns_t.Constructor_several_symbol
      "polypeptide"),
   1)],
 [("item", "typing"); ("codefile", "type"); ("category", "symbol");
  ("entity", "polypeptide")])
);;
(
smb_cns_l
(* : Constructor_symbol_t.constructor_symbol list *)
  =
[Constructor_symbol_t.Constructor_fictive_symbol
  (Constructor_symbol_t.Constructor_bare_symbol "h_s");
 Constructor_symbol_t.Constructor_fictive_symbol
  (Constructor_symbol_t.Constructor_bare_symbol "ppr")]
);;
smb_cns_l;;
smb_ens_l;;
ctt_cps_l ;;
(
ctt_cps_l 
(* : Caml_paragraph_context_t.caml_paragraph_context list *)
  =
[([(Caml_paragraph_context_t.Cnp_t.Cnm_t.Cns_t.Constructor_proper_symbol
     (Caml_paragraph_context_t.Cnp_t.Cnm_t.Cns_t.Constructor_several_symbol
       "polypeptide_regular"),
    2);
   (Caml_paragraph_context_t.Cnp_t.Cnm_t.Cns_t.Constructor_proper_symbol
     (Caml_paragraph_context_t.Cnp_t.Cnm_t.Cns_t.Constructor_several_symbol
       "polypeptide"),
    1)],
  [("item", "typing"); ("codefile", "type"); ("category", "symbol");
   ("entity", "polypeptide")]);
 ([(Caml_paragraph_context_t.Cnp_t.Cnm_t.Cns_t.Constructor_proper_symbol
     (Caml_paragraph_context_t.Cnp_t.Cnm_t.Cns_t.Constructor_oneline_symbol
       (Caml_paragraph_context_t.Cnp_t.Cnm_t.Cns_t.Constructor_datastructure_symbol
         (Caml_paragraph_context_t.Cnp_t.Cnm_t.Cns_t.Constructor_doublet_symbol
           "polyproline"))),
    2);
   (Caml_paragraph_context_t.Cnp_t.Cnm_t.Cns_t.Constructor_proper_symbol
     (Caml_paragraph_context_t.Cnp_t.Cnm_t.Cns_t.Constructor_several_symbol
       "polypeptide"),
    1)],
  [("item", "typing"); ("codefile", "type"); ("category", "symbol");
   ("entity", "polypeptide")]);
 ([(Caml_paragraph_context_t.Cnp_t.Cnm_t.Cns_t.Constructor_proper_symbol
     (Caml_paragraph_context_t.Cnp_t.Cnm_t.Cns_t.Constructor_oneline_symbol
       (Caml_paragraph_context_t.Cnp_t.Cnm_t.Cns_t.Constructor_datastructure_symbol
         (Caml_paragraph_context_t.Cnp_t.Cnm_t.Cns_t.Constructor_doublet_symbol
           "polyglycine"))),
    2);
   (Caml_paragraph_context_t.Cnp_t.Cnm_t.Cns_t.Constructor_proper_symbol
     (Caml_paragraph_context_t.Cnp_t.Cnm_t.Cns_t.Constructor_several_symbol
       "polypeptide"),
    1)],
  [("item", "typing"); ("codefile", "type"); ("category", "symbol");
   ("entity", "polypeptide")])]
);;
 ecc_l ;;
ecs_l ;;
(
ecs_l 
(* : Entitycategorysuffix_t.entitycategorysuffix list *)
=
[(Entitycategorysuffix_t.Ens_t.Entity_proper_symbol
   (Entitycategorysuffix_t.Ens_t.Entity_local_symbol "polypeptide_regular"),
  Entitycategorysuffix_t.Cts_t.Symbol_symbol, Entitycategorysuffix_t.Cfs_t.T);
 (Entitycategorysuffix_t.Ens_t.Entity_proper_symbol
   (Entitycategorysuffix_t.Ens_t.Entity_local_symbol "polyproline"),
  Entitycategorysuffix_t.Cts_t.Symbol_symbol, Entitycategorysuffix_t.Cfs_t.T);
 (Entitycategorysuffix_t.Ens_t.Entity_proper_symbol
   (Entitycategorysuffix_t.Ens_t.Entity_local_symbol "polyglycine"),
  Entitycategorysuffix_t.Cts_t.Symbol_symbol, Entitycategorysuffix_t.Cfs_t.T)]
);;
ctt_cpg_ppr ;;
suf_ppr ;;
(
sco_ppr 
(* : Scope_t.scope *)
 = 
Scope_t.Scope_public
);;
(
Ecc_v.codefile_suffix_of_entitycategorycodefile ecc_ppr
=
Csu_v.suffix_t
);;
 (
Ecs_v.codefile_suffix_off_entitycategorysuffix ecs_ppr
=
Csu_v.suffix_t
);;
smb_cli_ppr ;;
let smb_cnt_ppr = List.nth smb_cns_l 1;;
let smb_cli_ppr = Cptf_v.type_pipe_caml_line_symbol_of_caml_paragraph_context ctt_cpg_ppr smb_cnt_ppr;;
let frm_cpg = Cpf_v.retrieve smb_cpg;;
smb_cpg;;
 ctt_cps_l ;;
ctt_cpg;;
smb_cnt;;
ctt_cps_l;;
#use "tatom_onetied_single_symbol_type_typing_caml_paragraph_value_v.ml";; 
Ecs_v.codefile_suffix_off_entitycategorysuffix ecs_f_s smb_cli_f_s ;;
 smb_cli_f_s ;;
let smb_cli_f_s = Cptf_v.type_pipe_caml_line_symbol_of_caml_paragraph_context ctt_cpg_f_s;;
#use "tatom_onetied_single_symbol_type_typing_caml_paragraph_value_v.ml";; 
#use "tatom_onetied_sing  let smb_cnt = le_symbol_type_typing_caml_paragraph_value_v.ml";; 
    Cpc_v.constructor_symbol_off_caml_paragraph_context ctt_cpg  let smb_cnt = 
    Cpc_v.constructor_symbol_off_caml_paragraph_context ctt_cpg;;
let smb_cnt = 
    Cpc_v.constructor_symbol_off_caml_paragraph_context ctt_cpg;;
let smb_cnt = 
    Cpc_v.bottom_constructor_symbol_off_caml_paragraph_context ctt_cpg;;
    Cpc_v.bottom_constructor_symbol_off_caml_paragraph_context ctt_cpg_f_s;;
#use "tatom_onetied_sing  let smb_cnt = le_symbol_type_typing_caml_paragraph_value_v.ml";; 
#use "tatom_onetied_single_symbol_type_typing_caml_paragraph_value_v.ml";; 
 #use "tpolypeptide_symbol_type_typing_caml_paragraph_value_v.ml";; 
let s = Scp_v.provide enc_ppr;;
let smb_cli_ppr = Cptf_v.type_pipe_caml_line_symbol_of_caml_paragraph_context ctt_cpg_ppr;;
let ecs_ppr = List.nth ecs_l 1;;
smb_cnt_ppr = List.nth smb_cns_l 1;;
Cptf_v.type_pipe_caml_line_symbol_of_caml_paragraph_context ctt_cpg_ppr;;
#use "caml_paragraph_typing_formula_v.ml";;
let ctt_cpg = ctt_cpg_ppr;;
let smb_cnt = 
    Cpc_v.bottom_constructor_symbol_off_caml_paragraph_context ctt_cpg;;
 #use "tpolyproline_symbol_type_typing_caml_paragraph_value_v.ml";; 
 #use "tpolypeptide_symbol_type_typing_caml_paragraph_value_v.ml";; 
#use "caml_paragraph_typing_formula_v.ml";;
let smb_cnt = 
    Cpc_v.top_constructor_symbol_off_caml_paragraph_context ctt_cpg;;
let ctt_cps_l =
    Cpc_v.son_caml_paragraph_context_list_off_caml_paragraph_context ctt_cpg;;
type_pipe_caml_line_symbol_of_caml_paragraph_context List.nth ctt_cps_l 0;;
#use "caml_paragraph_typing_formula_v.ml";;
type_pipe_caml_line_symbol_of_caml_paragraph_context (List.nth ctt_cps_l 0);;
type_pipe_caml_line_symbol_of_caml_paragraph_context (List.nth ctt_cps_l 1);;
Cpc_v.son_constructor_symbol_list_off_caml_paragraph_context ctt_cpg;;
let smb_cnt = 
    Cpc_v.top_constructor_symbol_off_caml_paragraph_context ctt_cpg;;
Cns_v.is_constructor_datastructure_symbol_off_constructor_symbol  smb_cnt ;;
 let ctt_cps_l =
    Cpc_v.son_caml_paragraph_context_list_off_caml_paragraph_context ctt_cpg;;
ctt_cpg_ppr;;
let smb_cnt = 
    Cpc_v.bottom_constructor_symbol_off_caml_paragraph_context ctt_c_ppr;;
    Cpc_v.bottom_constructor_symbol_off_caml_paragraph_context ctt_cpg_ppr;;
let smb_cnp = (Constructor_symbol_t.Constructor_oneline_symbol
   (Constructor_symbol_t.Constructor_datastructure_symbol
     (Constructor_symbol_t.Constructor_doublet_symbol "polyproline")));;
 Cls_v.type_pipe_s_of_s ctt_cpg_ppr;;
 #use "tpolypeptide_symbol_type_typing_caml_paragraph_value_v.ml";; 
 smb_cli_ppr;;
frm_cpg ;;
let val_cpg = Cpv_v.make smb_cpg;;
 #use "tpolypeptide_symbol_type_typing_caml_paragraph_value_v.ml";; 
#use "tmodule_abbreviation_provider_v.ml";;
enc_ppr ;;
enc_pgl;;
ecs_pgl;;
ecs_ppr;;
abb_pgl;;
#use "tmodule_abbreviation_provider_v.ml";;
let underscore_add_of_string = function
   | s when (String.sub s 0 4 = "poly" && String.sub s 4 1 <> "_" ) -> 
       (String.sub s 0 4) ^ "_" ^ (String.sub s 4 (String.length -4))
   | s -> s 
;;
let underscore_add_of_string = function
   | s when (String.sub s 0 4 = "poly" && String.sub s 4 1 <> "_" ) -> 
       (String.sub s 0 4) ^ "_" ^ (String.sub s 4 ((String.length s)-4))
   | s -> s 
;;
let s = underscore_add_of_string "polyglycine";;
let t = underscore_add_of_string "polypeptide";;
let module_abbreviation_of_string str =
  let ust = underscore_add_of_string str in 
  let wrd_l = Str_v.split_of_c '_' ust in
  let cnt_wrd = List.length wrd_l in
  
  match cnt_wrd with
  | 1 -> (String.sub ust 0 2)
  | _ -> Str_v.word_of_char_list (List.map char_abbreviation_of_word wrd_l)
;;
#use "abbreviations_v.ml";;
module_abbreviation_of_string "polypeptide";;
#use "tmodule_abbreviation_provider_v.ml";;
let abb_pgl = Map_v.provide ecs_pgl;;
Reg_v.entry_list module_abbreviation_by_entitycategorysuffix;;
#use "tmodule_abbreviation_provider_v.ml";;
Reg_v.entry_list module_abbreviation_by_entitycategorysuffix;;
Reg_v.entry_list;;
#use "module_abbreviation_provider_v.ml";;
Reg_v.entry_list module_abbreviation_by_entitycategorysuffix;;
Reg_v.is_value_stored module_abbreviation_by_entitycategorysuffix "pgs";;
let abb_ppr = Map_v.provide ecs_ppr;;
*)
let abb_ppr = Map_v.provide ecs_ppr;;
Reg_v.is_stored module_abbreviation_by_entitycategorysuffix ecs_pgl;;
retrieve ecs_pgl;;
build ecs_pgl;;
Reg_v.store module_abbreviation_by_entitycategorysuffix ecs_pgl abb_ecs;;
let abb_ecs = build ecs_pgl;;
Reg_v.store module_abbreviation_by_entitycategorysuffix ecs_pgl abb_ecs;;
Reg_v.entry_list module_abbreviation_by_entitycategorysuffix;;
#use "module_abbreviation_provider_v.ml";;
#use "tmodule_abbreviation_provider_v.ml";;
let ecs = ecs_pgl;;
let abb_ecs = build ecs;;
Reg_v.entry_list module_abbreviation_by_entitycategorysuffix;;
Reg_v.is_stored module_abbreviation_by_entitycategorysuffix ecs;;
 store ecs abb_ecs; 
;;
#use "tmodule_abbreviation_provider_v.ml";;
#use "module_abbreviation_provider_v.ml";;
let ecs = ecs_pgl;;
let abb_ecs = build ecs;;
Reg_v.store module_abbreviation_by_entitycategorysuffix ecs abb_ecs;;
#use "tmodule_abbreviation_provider_v.ml";;
ecs_ppp;;
#use "tmodule_abbreviation_provider_v.ml";;
abb_atm;;
#use "tmodule_abbreviation_provider_v.ml";;
#use "tpolypeptide_symbol_type_typing_caml_paragraph_value_v.ml";; 
#use "module_abbreviation_by_entity_provider_v.ml";;
#use "tmodule_abbreviation_by_entity_provider_v.ml";;
#use   #use "tmodule_abbreviation_by_entitycategorysuffix_provider_v.ml";;
#use "tmodule_abbreviation_by_entitycategorysuffix_provider_v.ml";;
 smb_ent_ppp;;
smb_ent_ppr;;
ecs_ppr;;
ecs_ppl ;;
#use "tmodule_abbreviation_by_entitycategorysuffix_provider_v.ml";;
  #use "tpolypeptide_symbol_type_typing_caml_paragraph_value_v.ml";; 
smb_ent;;
let ens = smb_ent;;
Reg_v.is_stored module_abbreviation_by_entity ens;;
  #use "module_abbreviation_by_entity_provider_v.ml";;
Reg_v.is_stored module_abbreviation_by_entity ens;;
let abb_ens = build ens;;
if Reg_v.is_value_stored module_abbreviation_by_entity abb_ens ;;
Reg_v.is_value_stored module_abbreviation_by_entity abb_ens ;;
Reg_v.store module_abbreviation_by_entity ens abb_ens;;
  #use "tpolypeptide_symbol_type_typing_caml_paragraph_value_v.ml";; 
let ens = smb_ent;;
  #use "module_abbreviation_by_entity_provider_v.ml";;
provide ens;;
#use "tpolypeptide_symbol_implementation_codefile_value_v.ml";; 
Ecs_v.name ecs;;
nam_fil_cfi;;
let ecc = Ecc_v.make smb_ent smb_cat smb_cfi;;  
let ecs = Ecs_v.entitycategorysuffix_of_entitycategorycodefile ecc;;
let val_cfi = Cfv_v.make kyl_cfi;;
#use "tmodule_abbreviation_by_entitycategorysuffix_provider_v.ml";;
(
ecs_atm
(* : Entitycategory_t.entitycategory *)
=
  (Entitycategorysuffix_t.Ens_t.Entity_proper_symbol
    (Entitycategorysuffix_t.Ens_t.Entity_local_symbol "atom"),
   Entitycategorysuffix_t.Cts_t.Symbol_symbol,
   Entitycategorysuffix_t.Cfs_t.V)
);;
#use "tmodule_abbreviation_by_entitycategorysuffix_provider_v.ml";;
let smb_ent_str = Ens_v.make "string";;
let smb_ent_str = Ens_v.make "f_s";;
#use "tmodule_abbreviation_by_entitycategorysuffix_provider_v.ml";;
 #use "tmodule_abbreviation_dot_entitycategory_by_entitycategorysuffix_provider_v.ml";;
abb_atm;;
 #use "tmodule_abbreviation_dot_entitycategory_by_entitycategorysuffix_provider_v.ml";;
#use "targument_abbreviation_by_entitycategorysuffix_provider_v.ml";;
#use "targument_abbreviation_by_entitycategory_provider_v.ml"
;;
#use "targument_abbreviation_by_entitycategory_provider_v.ml"
#use "targument_abbreviation_by_entitycategory_provider_v.ml";;
abb_atm;;
#use "targument_abbreviation_by_entitycategory_provider_v.ml";;
abb_atm;;
#use "targument_abbreviation_by_entitycategory_provider_v.ml";;
abb_atm;;
#use "targument_abbreviation_by_entitycategory_provider_v.ml";;
abb_atm;;
#use "targument_abbreviation_by_entity_provider_v.ml";;
abb_atm;;
#use "targument_abbreviation_by_entity_provider_v.ml";;
abb_f_s;;
#use "targument_abbreviation_by_entity_provider_v.ml";;
#use "targument_abbreviation_by_entitycategory_provider_v.ml";;
#use "targument_abbreviation_by_entity_provider_v.ml";;
 #use "targument_abbreviation_by_entitycategorysuffix_provider_v.ml";;
abb_atm;;
  #use "targument_abbreviation_by_entitycategorysuffix_provider_v.ml";;
#use "tmodule_abbreviation_dot_entitycategory_by_entitycategorysuffix_provider_v.ml";;
#use "tentitycategorysuffix_dot_entitycategory_by_entitycategorysuffix_provider_v.ml";;
abb_atm;;
#use "tentitycategorysuffix_dot_entitycategory_by_entitycategorysuffix_implementation_provider_v.ml";;
abb_atm;;
#use "tentitycategorysuffix_dot_entitycategory_by_entitycategorysuffix_implementation_provider_v.ml";;
#use "tentitycategorysuffix_dot_entitycategory_by_entitycategorysuffix_interface_provider_v.ml";;
#use "tentitycategorytype_dot_entitycategory_by_entitycategorysuffix_provider_v.ml";;
mdt_str;;
#use "tentitycategorytype_dot_entitycategory_by_entitycategorysuffix_provider_v.ml";;
mdt_f_s;;
#use "tentitycategorytype_dot_entitycategory_by_entitycategorysuffix_provider_v.ml";;
 #use "tpolypeptide_symbol_type_typing_caml_paragraph_value_v.ml";; 
#use "module_abbreviation_by_entity_provider_v.ml";;
build smb_ent_pgl;;
Ens_v.module_abbreviation smb_ent;;
#use "tmodule_abbreviation_v.ml";;
#use "module_abbreviation_v.ml";;
module_abbreviation_of_entity_local_symbol smb_ent_pgn;;
smb_ent_pgn;;
module_abbreviation_of_entity_local_symbol "polyglyvine";;
module_abbreviation_of_entity_local_symbol "polyglycine";;
Abb_v.module_abbreviation_of_string "polyglycine";;
module_abbreviation_of_entity_symbol smb_ent_pgn;;
smb_ent_pgn;;
module_abbreviation_of_entity_proper_symbol (Entity_symbol_t.Entity_datastructure_symbol "polyglycine");;
#use "tmodule_abbreviation_v.ml";;
 #use "tpolypeptide_symbol_type_typing_caml_paragraph_value_v.ml";; 
#use "module_abbreviation_by_entity_provider_v.ml";;
smb_ent;;
build smb_ent;;
provide smb_ent;;
Reg_v.entry_list module_abbreviation_by_entity;;
 #use "tpolypeptide_symbol_type_typing_caml_paragraph_value_v.ml";; 
Reg_v.entry_list module_abbreviation_by_entity;;
abb_ent;;
Lst_v.name_with_separator;;
List_v.name_with_separator;;
 #use "tpolypeptide_symbol_type_codefile_value_v.ml";; 
 smb_ent;;
#use "tpolypeptide_symbol_implementation_codefile_value_v.ml" ;;
#use "tpolypeptide_symbol_type_typing_item_formula_v.ml";; 
mrk_cnt_t;;
pth_cnt_t ;;
#use "tpolypeptide_symbol_implementation_codefile_value_v.ml";; 
  #use "tentitycategorysuffix_v.ml";; 
Maecsp_v.provide ecs_t;;
  #use "tentitycategorysuffix_v.ml";; 
Aab_v.abbreviation_argument_of_entitycategory enc_atm;;
(
Aab_v.abbreviation_argument_of_entitycategory enc_atm
=
"smb_aom"
);;
Aab_v.abbreviation_argument_of_entitycategory enc_atm
;;
  #use "tentitycategorysuffix_v.ml";; 
Aab_v.abbreviation_argument_of_entitycategory enc_atm;;
Amd_v.abbreviation_module_of_entitycategory enc_atm;;
Aab_v.abbreviation_argument_of_entitycategorysuffix ecs_atm ;;
#use "tabbreviation_module_of_entity_symbol_v.ml";;
#use "tatom_symbol_implementation_codefile_value_v.ml";; 
ecs;;
#use "tatom_symbol_implementation_codefile_value_v.ml";; 
quit
#use "tabbreviation_argument_by_entity_symbol_provider_v.ml";;
#use "tabbreviation_argument_by_entitycategory_provider_v.ml";;
 #use "tabbreviation_argument_by_entitycategorysuffix_provider_v.ml";;
ent_f_s;;
 #use "tabbreviation_argument_by_entitycategorysuffix_provider_v.ml";;  #use "tabbreviation_argument_by_entity_symbol_provider_v.ml";;
  #use "tabbreviation_argument_by_entity_symbol_provider_v.ml";;
ent_f_s;;
 Aaep_v.provide ent_f_s;;
  #use "tabbreviation_argument_by_entity_symbol_provider_v.ml";;
abb_f_s;;
#use "tatom_symbol_implementation_codefile_value_v.ml";; 
List.nth val_cfi 0;;
#use "tatom_symbol_implementation_codefile_value_v.ml";; 
 #use "tatom_naming_item_value_v.ml";; 
 #use "tatom_symbol_implementation_naming_item_value_v.ml";; 
 #use "tatom_onetied_symbol_implementation_querying_item_value_v.ml";; 
val_itm;;
 #use "tatom_onetied_symbol_implementation_querying_item_value_v.ml";; 
#use "tatom_onetied_symbol_implementation_upgrading_item_value_v.ml";; 
val_itm;;
#use "tatom_onetied_symbol_implementation_upgrading_item_value_v.ml";; 
#use "tpolypeptide_symbol_type_typing_caml_paragraph_value_v.ml";; 
 smb_ent_pgn;;
Abb_v.abbreviation_module_of_entity_symbol (List.nth smb_ens_l 0);;
#use "tpolypeptide_symbol_type_typing_caml_paragraph_value_v.ml";; 
Abm_v.abbreviation_module_of_entity_symbol (List.nth smb_ens_l 0);;
Abm_v.abbreviation_module_of_entity_symbol (List.nth smb_ens_l 1);;
Abb_v.abbreviation_module_of_entity_symbol (List.nth smb_ens_l 0);;
#use "tpolypeptide_symbol_type_typing_caml_paragraph_value_v.ml";; 
Aba_v.abbreviation_argument_of_entity_symbol (List.nth smb_ens_l 0);;
Aba_v.abbreviation_argument_of_entity_symbol (List.nth smb_ens_l 1);;
#use "tpolypeptide_symbol_type_typing_caml_paragraph_value_v.ml";; 
#use "abbreviation_argument_v.ml";; 
abbreviation_argument_of_entity_symbol (List.nth smb_ens_l 1);;
let smb_ent =  (List.nth smb_ens_l 1);;   
abbreviation_argument_of_entity_proper_symbol (Entity_symbol_t.Entity_local_symbol "polyproline")
;;
Ens_v.make "polyproline";;
 #use "tpolypeptide_constructor_symbol_v.ml";; 
 ctt_cps_l;;
let smb_ent_pgn = Cns_v.entity_symbol_off_constructor_symbol smb_cnt_pgn;;
 #use "tpolypeptide_constructor_symbol_v.ml";; 
let smb_ent_pgn = Cns_v.entity_symbol_off_constructor_symbol smb_cnt_pgn;;
Ens_v.make "polyglycine";;
smb_ent_pgn 
;;
 #use "tpolypeptide_constructor_symbol_v.ml";; 
#use "constructor_symbol_v.ml";;
smb_cnt_pgn;;
let  smb_ocn = (Constructor_symbol_t.Constructor_oneline_symbol
   (Constructor_symbol_t.Constructor_datastructure_symbol
     (Constructor_symbol_t.Constructor_doublet_symbol "polyproline")));;
entity_symbol_off_constructor_oneline_symbol smb_cno;;
let  smb_cno =  Constructor_symbol_t.Constructor_oneline_symbol
   (Constructor_symbol_t.Constructor_datastructure_symbol
     (Constructor_symbol_t.Constructor_doublet_symbol "polyproline"));;
entity_symbol_off_constructor_oneline_symbol smb_cno;;
constructor_datastructure_symbol_off_constructor_symbol smb_cnt_pgn;;
let smb_cno = constructor_oneline_symbol_off_constructor_symbol smb_cnt_pgn;;
entity_symbol_off_constructor_oneline_symbol smb_cno;;
Ens_v.make "aggregate";;
#use "tconstructor_symbol_v.ml";;
#use "tpolypeptide_constructor_symbol_v.ml";;
smb_ent_pgn;;
#use "tpolypeptide_constructor_symbol_v.ml";;
smb_ent_pgn;;
 #use "tpolypeptide_symbol_type_typing_item_formula_v.ml";; 
mrk_cnt_t;;
pth_cnt_t ;;
 #use "tpolypeptide_symbol_type_typing_item_formula_v.ml";; 
frm_itm;;
 #use "tpolypeptide_symbol_type_typing_item_formula_v.ml";; 
 #use "tpolypeptide_symbol_type_typing_caml_paragraph_value_v.ml";; 
 ecc_l ;;
 #use "tpolypeptide_symbol_type_typing_caml_paragraph_value_v.ml";; 
Aba_v.abbreviation_argument_of_entity_symbol (List.nth smb_ens_l 1);;
 #use "tpolypeptide_symbol_type_typing_caml_paragraph_value_v.ml";; 
Abm_v.abbreviation_module_of_entity_symbol (List.nth smb_ens_l 1);;
 #use "tpolypeptide_symbol_type_typing_caml_paragraph_value_v.ml";; 
val_cpg;;
 #use "tpolypeptide_symbol_type_typing_caml_paragraph_value_v.ml";; 
#use "tpolypeptide_symbol_type_codefile_value_v.ml";; 
Lst_v.drop_last_element_of_list (Cfv_v.name_list val_cfi) ;;
#use "tpolypeptide_symbol_type_codefile_value_v.ml";; 
 #use "tgenerator_v.ml";; 
Cns_v.make (Ens_v.make "atom");;
 #use "tgenerator_v.ml";; 
 #use "tabbreviation_module_of_entity_symbol_v.ml";;
 #use "tchemicalset_symbol_type_codefile_value_v.ml";;
Lst_v.drop_last_element_of_list (Cfv_v.name_list val_cfi) ;;
 #use "tchemicalset_symbol_type_codefile_value_v.ml";;
nam_fil_cfi ;;
 #use "tchemicalset_symbol_type_codefile_value_v.ml";;
 #use "tordinal_entitycategorycodefile_v.ml";; 
Amd_v.abbreviation_module_of_entity_symbol smb_ent;;
smb_ent;;
Ens_v.make "messages";;
Ens_v.make "error_messages";;
 #use "taggregate_symbol_implementation_modules_item_value_v.ml";; 
val_itm ;;
 #use "taggregate_symbol_implementation_modules_item_value_v.ml";; 
val_itm ;;
 #use "taggregate_symbol_implementation_modules_item_value_v.ml";; 
   #use "tpolyproline_symbol_type_codefile_value_v.ml";; 
Lst_v.drop_last_element_of_list (Cfv_v.name_list val_cfi) ;;
   #use "tpolyproline_symbol_type_codefile_value_v.ml";; 
 #use "tabbreviation_argument_by_entity_symbol_provider_v.ml";;
abb_atm;;
 #use "tabbreviation_argument_by_entity_symbol_provider_v.ml";;
Entity_symbol_v.make "segment_zeroone";;
#use "tsegment_oneone_symbol_implementation_codefile_value_v.ml";; 
#use "tsegment_buried_symbol_implementation_codefile_value_v.ml";; 
frm_cfi;;
(
frm_cfi
(* Item_symbol_t.item_symbol list *) 
= 
[Its_v.heading;
 Its_v.modules;
 Its_v.naming;
 Its_v.printing;
 Its_v.extracting;
 Its_v.querying;
 Its_v.upgrading;
 Its_v.including;
 Its_v.ending]
);;
#use "tsegment_buried_symbol_implementation_codefile_value_v.ml";; 
 #use "tsegment_buried_symbol_type_typing_caml_paragraph_value_v.ml";;
#use "tsegment_buried_symbol_implementation_extracting_caml_paragraph_value_v.ml";; 
smb_cpg ;;
ctt_cpg ;;
smb_cpg;;
#use "tsegment_buried_symbol_implementation_extracting_caml_paragraph_value_v.ml";; 
smb_cpg  trp_imc ;;
trp_imc ;;
#use "tsegment_buried_symbol_implementation_extracting_caml_paragraph_value_v.ml";; 
smb_ens_l;;
smb_cns_l;;
ctt_cps_l ;;
ecc_l ;;
ecs_l ;;
#use "tsegment_buried_symbol_implementation_extracting_caml_paragraph_value_v.ml";; 
ctt_cpg_ppr;;
#use "tsegment_buried_symbol_implementation_extracting_caml_paragraph_value_v.ml";; 
frm_cpg ;;
Aba_v.abbreviation_argument_of_entity_symbol (List.nth smb_ens_l 0);;
Aba_v.abbreviation_argument_of_entity_symbol (List.nth smb_ens_l 1);;
List.nth smb_ens_l 1;;
List.nth smb_ens_l 0;;
Abm_v.abbreviation_module_of_entity_symbol (List.nth smb_ens_l 0);;
smb_ens_l;;
Abm_v.abbreviation_module_of_entity_symbol (List.nth smb_ens_l 1);;
Abm_v.abbreviation_module_of_entity_symbol (List.nth smb_ens_l 2);;
nam_fil_cpg;;
#use "tsegment_buried_symbol_implementation_extracting_caml_paragraph_value_v.ml";; 
Abm_v.abbreviation_module_of_entity_symbol (List.nth smb_ens_l 1);;
Aba_v.abbreviation_argument_of_entity_symbol (List.nth smb_ens_l 0);;
(List.nth smb_ens_l 0);; 
#use "tsegment_buried_symbol_implementation_extracting_caml_paragraph_value_v.ml";; 
(List.nth smb_ens_l 0);; 
Aba_v.abbreviation_argument_of_entity_symbol (List.nth smb_ens_l 0);;
(List.nth smb_ens_l 0);; 
#use "tsegment_buried_symbol_implementation_extracting_caml_paragraph_value_v.ml";; 
Aba_v.abbreviation_argument_of_entity_symbol (List.nth smb_ens_l 2);;
#use "tsegment_buried_symbol_implementation_extracting_caml_paragraph_value_v.ml";; 
nam_fil_cpg;;
let val_cpg = Cpv_v.make smb_cpg;;
ctt_cpg ;;
#use "tsegment_buried_symbol_implementation_extracting_item_value_v.ml";; 
 #use "tsegment_buried_symbol_implementation_extracting_item_value_v.ml";;
frm_itm;;
Tre_v.list_of_tree val_itm;;
Tre_v.list_off_tree val_itm;;
 #use "tsegment_buried_symbol_implementation_extracting_item_value_v.ml";;
frm_itm;;
Tre_v.list_off_tree frm_itm;;
List.nth (Tre_v.list_off_tree frm_itm) 0;;
List.length frm_itm;;
List.length (Tre_v.list_off_tree frm_itm);;
List.nth (Tre_v.list_off_tree frm_itm) 1;;
List.nth (Tre_v.list_off_tree frm_itm) 8;;
List.nth (Tre_v.list_off_tree frm_itm) 7;;
List.nth (Tre_v.list_off_tree frm_itm) 4;;
 #use "tsegment_buried_symbol_implementation_extracting_item_value_v.ml";;
nam_fil_itm;;
Tre_v.list_off_tree val_itm;;
val_itm;;
 #use "tsegment_buried_symbol_implementation_extracting_item_value_v.ml";;
val_itm ;;
 #use "tsegment_buried_symbol_implementation_extracting_item_value_v.ml";;
 #use "tsegment_buried_symbol_implementation_upgrading_item_value_v.ml";;
List.nth (Tre_v.list_off_tree frm_itm) 1;;
val_itm;;
List.nth (Tre_v.list_off_tree frm_itm) 4;;
List.nth (Tre_v.list_off_tree frm_itm) 7;;
 #use "tsegment_buried_symbol_implementation_upgrading_item_value_v.ml";;
 #use "tsegment_buried_symbol_implementation_modules_item_value_v.ml";; 
#use "tsegment_buried_symbol_implementation_modules_item_value_v.ml";; 
val_itm ;;
#use "tsegment_buried_symbol_implementation_modules_item_value_v.ml";; 
Itf_v.retrieve_modules_implementation pth_cnt kyl_itm;;
#use "tsegment_buried_symbol_implementation_modules_item_value_v.ml";; 
Itf_v.retrieve_modules_implementation pth_cnt kyl_itm;;
val_itm 
;;
#use "tatom_symbol_implementation_modules_item_value_v.ml";; 
Itf_v.retrieve_modules_implementation pth_cnt kyl_itm;;
#use "tatom_symbol_implementation_modules_item_value_v.ml";; 
Itf_v.retrieve_modules_implementation pth_cnt kyl_itm;;
let smb_cpg = (Caml_paragraph_symbol_t.Modules_local_definitions_symbol
     ([(Caml_paragraph_symbol_t.Cpc_t.Cnp_t.Cnm_t.Cns_t.Constructor_proper_symbol
         (Caml_paragraph_symbol_t.Cpc_t.Cnp_t.Cnm_t.Cns_t.Constructor_several_symbol
           "segment_buried"),
        1)],
      [("item", "modules"); ("codefile", "implementation");
       ("category", "symbol"); ("entity", "segment_buried")]);;
Itf_v.retrieve_modules_implementation pth_cnt kyl_itm;;
 #use "tsegment_buried_symbol_implementation_modules_item_value_v.ml";; 
Cpv_v.make smb_cpg;;
 #use "tsegment_buried_symbol_implementation_modules_item_value_v.ml";; 
Cpc_v.bottom_constructor_symbol_off_caml_paragraph_context ctt_cpg;;
 Cpc_v.bottom_constructor_symbol_off_caml_paragraph_context ctt_cpg;;
ctt_cpg;;
ctt_cps_l;;
 #use "tsegment_buried_symbol_implementation_modules_item_value_v.ml";; 
ctt_cps_l ;;
 #use "tsegment_buried_symbol_implementation_modules_item_value_v.ml";; 
 #use "tsegment_oneone_symbol_implementation_codefile_value_v.ml";; 
frm_cfi;;
Ecs_v.name ecs;;
ecs;;
Cfv_v.make kyl_cfi;;
 Cff_v.retrieve (smb_cfi, smb_cat);;
 #use "tsegment_oneone_symbol_implementation_codefile_value_v.ml";; 
let smb_ent = Kyl_v.entity_symbol_off_key_list kyl_cfi;;
let smb_ent = Key_list_v.entity_symbol_off_key_list kyl_cfi;;
let smb_ent = Key_list_v.entity_symbol_of_key_list kyl_cfi;;
let smb_ent = Key_list_v.entity_properpmodule Kyl_v = Key_list_v;;symbol_of_key_list kyl_cfi;;
module Kyl_v = Key_list_v;;
 let smb_ent = Kyl_v.entity_proper_symbol_off_key_list kyl_cfi;;
 #use "tsegment_oneone_symbol_implementation_codefile_value_v.ml";; 
let nam_fil_cfi = Fln_v.name (Cfp_v.provide ecc);;  
 #use "tsegment_oneone_symbol_implementation_codefile_value_v.ml";; 
let nam_fil_cfi = Fln_v.name (Cfp_v.provide ecc);;  
Fln_v.name (Cfp_v.provide ecc);;  
Fln_v.name (Cfp_v.provide ecc);;  (Cfp_v.provide ecc);; 
(Cfp_v.provide ecc);; 
 #use "tsegment_oneone_symbol_implementation_codefile_value_v.ml";; 
test_raises_some_exc Cfv_v.make kyl_cfi;;
 #use "tsegment_oneone_symbol_implementation_codefile_value_v.ml";; 
Ecs_v.name ecs;;
ecs;;
 #use "tsegment_oneone_symbol_implementation_codefile_value_v.ml";; 
nam_fil_cfi;;
Ecs_v.codefile_suffix_name_of_entitycategorysuffix ecs;;
Cfs_v.file_extension smb_cfi;;
Ecs_v.codefile_suffix_name_of_entitycategorysuffix ecs;;
 #use "tsegment_oneone_symbol_implementation_codefile_value_v.ml";; 
 #use "taggregate_symbol_implementation_codefile_value_v.ml";; 
 #use "taggregate_symbol_implementation_codefile_value_v.ml";; ecs
ecs;;
 #use "taggregate_symbol_implementation_codefile_value_v.ml";; 
ecs;;
 #use "taggregate_symbol_implementation_modules_item_value_v.ml";; 
 #use "taggregate_symbol_implementation_codefile_value_v.ml";; 
 #use "taggregate_symbol_implementation_codefile_value_v.ml";;
 #use "taggregate_symbol_implementation_extracting_heading_caml_paragraph_value_v.ml";;
ctt_cpg ;;
 (
 trp_imc 
(* : (Item_symbol_t.item_symbol, Codefile_symbol_t.codefile_symbol,
   Category_symbol_t.category_symbol)
  Triplet_t.triplet *)
=
(Item_symbol_t.Extracting_symbol, 
 Codefile_symbol_t.Implementation_symbol,
 Category_symbol_t.Symbol_symbol)
);;
 #use "taggregate_symbol_implementation_extracting_heading_caml_paragraph_value_v.ml";;
smb_cpg ;;
 #use "taggregate_symbol_implementation_extracting_heading_caml_paragraph_value_v.ml";;
smb_ens_l;;
smb_cns_l;;
ctt_cps_l;;
 #use "taggregate_symbol_implementation_extracting_heading_caml_paragraph_value_v.ml";;
ecc_l ;;
ecs_l ;;
ctt_cpg_ppr ;;
 #use "taggregate_symbol_implementation_extracting_heading_caml_paragraph_value_v.ml";;
suf_ppr;;
ctt_cpg_ppr ;;
 #use "taggregate_symbol_implementation_extracting_heading_caml_paragraph_value_v.ml";;
suf_ord ;;
 #use "taggregate_symbol_implementation_extracting_heading_caml_paragraph_value_v.ml";;
frm_cpg ;;
Aba_v.abbreviation_argument_of_entity_symbol (List.nth smb_ens_l 0);;
Aba_v.abbreviation_argument_of_entity_symbol (List.nth smb_ens_l 1);;
Abm_v.abbreviation_module_of_entity_symbol (List.nth smb_ens_l 0);;
Abm_v.abbreviation_module_of_entity_symbol (List.nth smb_ens_l 1);;
Abm_v.abbreviation_module_of_entity_symbol (List.nth smb_ens_l 2);;
nam_fil_cpg;;
val_cpg;;
 #use "taggregate_symbol_implementation_extracting_heading_caml_paragraph_value_v.ml";;
#use "taggregate_symbol_implementation_extracting_item_value_v.ml";; 
frm_itm;;
val_itm ;;
#use "taggregate_symbol_implementation_extracting_item_value_v.ml";; 
mrk_cnt_;;
mrk_cnt_t;;
#use "item_formula_v.ml";;
let mrk_cne_t =
    Tre_v.subtree_remove (fun (s, d) -> ( 
      match s with
      | Cns_t.Constructor_fictive_symbol _ -> true
      | _ -> false
     )
			 ) mrk_cnt_t;;
let mrk_cne_t = Tre_v.subtree_remove (fun (s, d) -> (match s with | Cns_t.Constructor_fictive_symbol _ -> true | _ -> false )) mrk_cnt_t;;
#use "taggregate_symbol_implementation_extracting_item_value_v.ml";; 
ctt_cpg_t ;;
#use "taggregate_symbol_implementation_extracting_item_value_v.ml";; 
  #use "taggregate_symbol_implementation_extracting_item_value_v.ml";; 
ctt_cpg_t ;;
  #use "taggregate_symbol_implementation_extracting_item_value_v.ml";; 
ctt_cpg_t ;;
Tre_v.map
	(* translation ctt -> cpg *)
	Cps_v.bottom_caml_paragraph_symbol_of_bottom_caml_paragraph_context 
	ctt_cpg_t;;
  #use "taggregate_symbol_implementation_extracting_item_value_v.ml";; 
ctt_cpg_t;;
  #use "taggregate_symbol_implementation_extracting_item_value_v.ml";; 
ctt_cpg_ord;;
ctt_cpg_str;;
Cps_v.bottom_caml_paragraph_symbol_of_bottom_caml_paragraph_context ctt_cp_str;;
Cps_v.bottom_caml_paragraph_symbol_of_bottom_caml_paragraph_context ctt_cpg_str;;
  #use "taggregate_symbol_implementation_extracting_item_value_v.ml";; 
t;;
Itf_v.retrieve_extracting_datastructure mrk_cnt_t kyl_itm smb_cnt_ord;;
let smb_dst_ord = Cns_v.constructor_datastructure_symbol_off_constructor_symbol smb_cnt_ord;;
smb_cnt_ord;;
let smb_dst_ord = Cns_v.constructor_datastructure_symbol_off_constructor_symbol smb_cnt;;
  #use "taggregate_symbol_implementation_extracting_item_value_v.ml";; 
Itf_v.retrieve_extracting_datastructure mrk_cnt_t kyl_itm smb_cnt_dst;;
let smb_cpg_t = Itf_v.retrieve_extracting_datastructure mrk_cnt_t kyl_itm smb_cnt_dst;;
  #use "taggregate_symbol_implementation_extracting_item_value_v.ml";; 
let smb_cpg_t = Itf_v.retrieve_extracting_datastructure mrk_cnt_t kyl_itm smb_cnt_dst;;
  #use "taggregate_symbol_implementation_extracting_item_value_v.ml";; 
frm_itm ;;
  #use "taggregate_symbol_implementation_extracting_item_value_v.ml";; 
smb_cpg_t ;;
frm_itm;;
module typo of String_v;;
module typo of string;;
module typo of String;;
  #use "taggregate_symbol_implementation_extracting_item_value_v.ml";; 
#use "taggregate_symbol_implementation_extracting_item_value_v.ml";; 
smb_cpg_t ;;
#use "taggregate_symbol_implementation_extracting_item_value_v.ml";; 
ctt_cpg_ord ;;
Cps_v.bottom_caml_paragraph_symbol_of_bottom_caml_paragraph_context ctt_cpg_str;;
#use "taggregate_symbol_implementation_extracting_item_value_v.ml";; 
 (
frm_itm
(* : Item_formula_t.item_formula *)
=
Item_formula_t.Tre_t.Node
 (Item_formula_t.Cpg_t.Heading_symbol
   ([(Item_formula_t.Cpg_t.Cpc_t.Cnp_t.Cnm_t.Cns_t.Constructor_proper_symbol
       (Item_formula_t.Cpg_t.Cpc_t.Cnp_t.Cnm_t.Cns_t.Constructor_oneline_symbol
         (Item_formula_t.Cpg_t.Cpc_t.Cnp_t.Cnm_t.Cns_t.Constructor_datastructure_symbol
           (Item_formula_t.Cpg_t.Cpc_t.Cnp_t.Cnm_t.Cns_t.Constructor_doublet_symbol
             "aggregate"))),
      1)],
    [("item", "extracting"); ("codefile", "implementation");
     ("category", "symbol"); ("entity", "aggregate")]),
 [Item_formula_t.Tre_t.Leaf
   (Item_formula_t.Cpg_t.Functions_definitions_symbol
     (Item_formula_t.Cpg_t.Function_argument_symbol
       (Item_formula_t.Cpg_t.Function_s_off_t_t_argument
         ([(Item_formula_t.Cpg_t.Cpc_t.Cnp_t.Cnm_t.Cns_t.Constructor_fictive_symbol
             (Item_formula_t.Cpg_t.Cpc_t.Cnp_t.Cnm_t.Cns_t.Constructor_barebasic_symbol
               Item_formula_t.Cpg_t.Cpc_t.Cnp_t.Cnm_t.Cns_t.Ens_t.String),
            2);
           (Item_formula_t.Cpg_t.Cpc_t.Cnp_t.Cnm_t.Cns_t.Constructor_proper_symbol
             (Item_formula_t.Cpg_t.Cpc_t.Cnp_t.Cnm_t.Cns_t.Constructor_oneline_symbol
               (Item_formula_t.Cpg_t.Cpc_t.Cnp_t.Cnm_t.Cns_t.Constructor_datastructure_symbol
                 (Item_formula_t.Cpg_t.Cpc_t.Cnp_t.Cnm_t.Cns_t.Constructor_doublet_symbol
                   "aggregate"))),
            1)],
          [("item", "extracting"); ("codefile", "implementation");
           ("category", "symbol"); ("entity", "aggregate")]))));
  Item_formula_t.Tre_t.Leaf
   (Item_formula_t.Cpg_t.Functions_definitions_symbol
     (Item_formula_t.Cpg_t.Function_argument_symbol
       (Item_formula_t.Cpg_t.Function_s_off_t_t_argument
         ([(Item_formula_t.Cpg_t.Cpc_t.Cnp_t.Cnm_t.Cns_t.Constructor_proper_symbol
             (Item_formula_t.Cpg_t.Cpc_t.Cnp_t.Cnm_t.Cns_t.Constructor_oneline_symbol
               (Item_formula_t.Cpg_t.Cpc_t.Cnp_t.Cnm_t.Cns_t.Constructor_external_symbol
                 Item_formula_t.Cpg_t.Cpc_t.Cnp_t.Cnm_t.Cns_t.Ers_t.Ordinal)),
            2);
           (Item_formula_t.Cpg_t.Cpc_t.Cnp_t.Cnm_t.Cns_t.Constructor_proper_symbol
             (Item_formula_t.Cpg_t.Cpc_t.Cnp_t.Cnm_t.Cns_t.Constructor_oneline_symbol
               (Item_formula_t.Cpg_t.Cpc_t.Cnp_t.Cnm_t.Cns_t.Constructor_datastructure_symbol
                 (Item_formula_t.Cpg_t.Cpc_t.Cnp_t.Cnm_t.Cns_t.Constructor_doublet_symbol
                   "aggregate"))),
            1)],
          [("item", "extracting"); ("codefile", "implementation");
           ("category", "symbol"); ("entity", "aggregate")]))))])
);;
val_itm ;;
let val_itm = Itv_v.make kyl_itm;;
#use ""caml_paragraph_functions_definitions_formula_v.ml";;
#use "caml_paragraph_functions_definitions_formula_v.ml";;
smb_cpg_l;;
Cpc_v.son_constructor_symbol_list_off_caml_paragraph_context ctt_cpg ;;
let smb_cns = Cpc_v.son_caml_paragraph_symbol_of_bottom_caml_paragraph_context ctt_cpg;;
Cpc_v.bottom_caml_paragraph_symbol_of_bottom_caml_paragraph_context ctt_cpg;;
Cpc_v.bottom_constructor_symbol_off_caml_paragraph_context ctt_cpg ;;
Cpc_v.bottom_constructor_symbol_off_caml_paragraph_context ctt_cpg_ord ;;
Cpc_v.son_constructor_symbol_list_off_caml_paragraph_context ctt_cpg_ord;;
smb_cns_l;;
smb_cns_ord;;
let smb_cns_ord = List.nth smb_cns_l 1;;
let num_cps = List.index smb_cns_l smb_cns_ord;;
module L = List;; 
module L = List_v;; 
List_v.index_of_list smb_cns_l smb_cnt_ord;;
List_v.firstindex_of_list smb_cns_l smb_cnt_ord;;
List_v.firstindex_of_element_list smb_cnt_ord smb_cns_l;; 
List_v.first_index_of_element_list smb_cnt_ord smb_cns_l;; 
List_v.firstindex_of_element_of_list smb_cnt_ord smb_cns_l;; 
#use "caml_paragraph_functions_definitions_formula_v.ml";;
caml_line_position_off_structure_of_caml_paragraph_context ctt_cpg_ord;;
#use "taggregate_symbol_implementation_extracting_item_value_v.ml";; 
let smb_cpg = Cps_v.bottom_caml_paragraph_symbol_of_bottom_caml_paragraph_context ctt_cpg;;
Enc_v.entitycategory_of_string_of_string "string" "symbol"
;;
Entitycategory_v.entitycategory_of_string_of_string "string" "symbol"
;;
Entitycategorycodile__v.entitycategory_of_string_of_string "string" "symbol" "private";;
Entitycategorycodefile__v.entitycategory_of_string_of_string "string" "symbol" "private";;
Entitycategorycodefile__v.entitycategorycodefile_of_string_of_string "string" "symbol" "private";;
Entitycategorycodefile__v.entitycategorycodefile_of_string_of_string_of_string "string" "symbol" "private";;
Entitycategorycodefile_v.entitycategorycodefile_of_string_of_string_of_string "string" "symbol" "private";;
Entitycategorycodefile_v.entitycategorycodefile_of_string_of_string_of_string "string" "symbol" "implementation";;
#use "taggregate_symbol_implementation_extracting_item_value_v.ml";; 
val_itm ;;
#use "taggregate_symbol_implementation_extracting_item_value_v.ml";; 
  #use "taggregate_symbol_implementation_extracting_item_value_v.ml";; 
  #use "taggregate_symbol_implementation_naming_item_value_v.ml";; 
ctt_cpg ;;
  #use "taggregate_symbol_implementation_naming_item_value_v.ml";; 
smb_cpg_t ;;
  #use "taggregate_symbol_implementation_naming_item_value_v.ml";; 
frm_itm;;
  #use "taggregate_symbol_implementation_naming_item_value_v.ml";; 
#use "caml_paragraph_functions_definitions_formula_v.ml";;
 ctt_cpg;;
retrieve_function_name_function ctt_cpg ;;
#use "caml_paragraph_functions_definitions_formula_v.ml";;
  #use "taggregate_symbol_implementation_naming_item_value_v.ml";; 
smb_cnt ;;
smb_cnt;;
  #use "taggregate_symbol_implementation_naming_item_value_v.ml";; 
smb_cpg ;;
#use "item_value_v.ml";;
"caml_paragraph_functions_definitions_formula_v.ml";;
#use "caml_paragraph_functions_definitions_formula_v.ml";;
retrieve_function_name_function ctt_cpg ;;
#use "taggregate_symbol_implementation_naming_item_value_v.ml";; 
smb_cpg_t ;;
#use "taggregate_symbol_implementation_naming_item_value_v.ml";; 
frm_itm;;
#use "taggregate_symbol_implementation_naming_item_value_v.ml";; 
val_itm ;;
#use "taggregate_symbol_implementation_naming_item_value_v.ml";; 
#use "caml_line_value_v.ml";;
ecs_l;;
ecs_t;;
let (ecs_a, ecs_b) = Lst_v.pair_of_list ecs_l ;;
Maecp_v.provide ecs_a;;
let maecsp_a = Maecsp_v.provide ecs_a;;
let maecsp_b = Maecsp_v.provide ecs_b;;
 ecs_a;;
 ecs_b;;
ecs_l ;;
Maecsp_v.provide ecs_a;;
 ecs_b;;
 ecs_a;;
let name dbt = Dbt_v.name (Format.sprintf "%s") (Format.sprintf "%i") dbt;; 
name ("abc", 5);;
let maecsp = Maecsp_v.provide ecs_a;;
let maecsp = Maecsp_v.provide ecs_b;;
let make_entity_barebasic_name ecs = function 
  | Ens_t.Boolean -> "(Format.sprintf \"%b\")"
  | Ens_t.Float -> "(Format.sprintf \"%f\")"
  | Ens_t.Integer -> "(Format.sprintf \"%i\")"
  | Ens_t.String -> "(Format.sprintf \"%s\")"
;;
#use "caml_line_value_v.ml";;
let maecsp = Maecsp_v.provide ecs_b;;
make_name_of_entitycategorysuffix ecs_a;;
let make_name_of_entitycategorysuffix = function 
  | (Ens_t.Entity_fictive_symbol 
       (Ens_t.Entity_barebasic_symbol smb_eba), _, _) ->
	 make_entity_barebasic_name smb_eba
  | ecs ->
      let maecsp = Maecsp_v.provide ecs in
      Format.sprintf "%s.name" maecsp
;;
make_entity_barebasic_name  Ens_t.String;;
 make_entity_barebasic_name ecs_a;;
#use "caml_line_value_v.ml";;
 make_entity_barebasic_name ecs_a;;
 make_entity_barebasic_name ;;
let make_entity_barebasic_name ecs = function 
  | Ens_t.Boolean -> "(Format.sprintf \"Xb\")"
  | Ens_t.Float -> "(Format.sprintf \"Xf\")"
  | Ens_t.Integer -> "(Format.sprintf \"Xi\")"
  | Ens_t.String -> "(Format.sprintf \"Xs\")"
;;
 make_entity_barebasic_name ecs_a;;
#use "caml_line_value_v.ml";;
 make_entity_barebasic_name ecs_a;;
 make_entity_barebasic_name Ens_t.String;;
make_name_of_entitycategorysuffix ecs_a;;
val_itm;;
#use "taggregate_symbol_implementation_naming_item_value_v.ml";; 
#use "taggregate_symbol_implementation_extracting_item_value_v.ml";; 
ctt_cpg ;;
#use "taggregate_symbol_implementation_queryng_item_value_v.ml";; 
#use "taggregate_symbol_implementation_querying_item_value_v.ml";; 
ctt_cpg ;;
#use "taggregate_symbol_implementation_extracting_item_value_v.ml";; 
ctt_cpg ;;
#use "tatom_symbol_implementation_extracting_item_value_v.ml";; 
#use "tatom_symbol_implementation_querying_item_value_v.ml";; 
frm_itm;;
#use "tatom_symbol_implementation_querying_item_value_v.ml";; 
frm_itm;;
#use "tatom_symbol_implementation_querying_item_value_v.ml";; 
#use "item_formula_v.ml";; 
	retrieve_querying mrk_cnt_t kyl_itm;;
mrk_cne_t ;;
 ctt_cpg_t;;
let ctt_cpg_t = 
	caml_paragraph_context_tree_of_constructor_marker_tree_of_item_key_list 
      mrk_cne_t kyl_itm ;;
ctt_cps_l;;
#use "tsegment_buried_symbol_implementation_querying_item_value_v.ml";;
ctt_cpg_t;;
Tre_v.map
	(* translation ctt -> cpg *)
	Cps_v.bottom_caml_paragraph_symbol_of_bottom_caml_paragraph_context 
	ctt_cpg_t;;
#use "tsegment_buried_symbol_implementation_querying_item_value_v.ml";;
List.nth (Tre_v.list_off_tree frm_itm) 1;;
#use "tsegment_buried_symbol_implementation_querying_item_value_v.ml";;
val_itm;;
#use "tsegment_buried_symbol_implementation_querying_item_value_v.ml";;
 #use "taggregate_symbol_implementation_querying_item_value_v.ml";; 
smb_cpg_t ;;
smb_cpg_t;;
 #use "taggregate_symbol_implementation_querying_item_value_v.ml";; 
frm_itm;;
 #use "taggregate_symbol_implementation_querying_item_value_v.ml";; 
val_itm;;
 #use "taggregate_symbol_implementation_querying_item_value_v.ml";; 
smb_cpg_t;;
 #use "taggregate_symbol_implementation_querying_item_value_v.ml";; 
frm_itm;;
val_itm ;;
val_itm ,,
;;
val_itm ;;
 #use "taggregate_symbol_implementation_querying_item_value_v.ml";; 
frm_itm;;
 #use "taggregate_symbol_implementation_querying_item_value_v.ml";; 
val_itm 
;;
 #use "taggregate_symbol_implementation_querying_item_value_v.ml";; 
val_itm ;;
 #use "taggregate_symbol_implementation_querying_item_value_v.ml";; 
 #use "taggregate_symbol_implementation_upgrading_item_value_v.ml";; 
ctt_cpg ;;
 #use "taggregate_symbol_implementation_upgrading_item_value_v.ml";; 
smb_cpg_t ;;
 #use "taggregate_symbol_implementation_upgrading_item_value_v.ml";; 
#use "taggregate_symbol_implementation_codefile_value_v.ml";; 
let val_cfi = Cfv_v.make kyl_cfi;;
#use "codefile_value_v.ml";;
kyl_cfi;;
let smb_ent = Kyl_v.entity_symbol_off_key_list kyl_cfi;;
 let smb_cfi = Kyl_v.codefile_symbol_off_key_list kyl_cfi;;
let smb_cat = Kyl_v.category_symbol_off_key_list kyl_cfi;;
let frm_cfi = Cff_v.retrieve (smb_cfi, smb_cat);;
let key_itm_l = List.map Its_v.key frm_cfi;;
let kyl_itm_l = List.map (fun k -> k :: kyl_cfi) key_itm_l;;
Ivp_v.provide (List.nth kyl_itm_l 0);;
Ivp_v.provide (List.nth kyl_itm_l 1);;
Ivp_v.provide (List.nth kyl_itm_l 2);;
Ivp_v.provide (List.nth kyl_itm_l 3);;
 (List.nth kyl_itm_l 3);;
#use "taggregate_symbol_implementation_codefile_value_v.ml";; 
#use "tatom_symbol_implementation_querying_item_value_v.ml";;
frm_itm;;
List.nth (Tre_v.list_off_tree frm_itm) 0
;;
List.length frm_itm;;
List.length (Tre_v.list_off_tree frm_itm);;
List.nth (Tre_v.list_off_tree frm_itm) 32;;
List.nth (Tre_v.list_off_tree frm_itm) (List.length (Tre_v.list_off_tree frm_itm) -1);;
List.nth (Tre_v.list_off_tree frm_itm) (List.length (Tre_v.list_off_tree frm_itm)/2);;
val_itm;;
List.nth (Tre_v.list_off_tree frm_itm) 0;;
List.nth (Tre_v.list_off_tree frm_itm) (List.length (Tre_v.list_off_tree val_itm)/2);;
List.nth (Tre_v.list_off_tree frm_itm) (List.length (Tre_v.list_off_tree val_itm) -1)
;;
#use "tatom_symbol_implementation_querying_item_value_v.ml";;
  #use "tabbreviation_argument_by_entity_symbol_provider_v.ml";;
abb_f_s;;
  #use "tabbreviation_argument_by_entity_symbol_provider_v.ml";;
 #use "tabbreviation_argument_by_entitycategory_provider_v.ml";;
 #use "tabbreviation_argument_by_entitycategorysuffix_provider_v.ml";;
#use "tatom_onetied_symbol_interface_querying_item_value_v.ml";; 
val_itm;;
ctt_cpg;;
ctt_cps_l;;
#use "tatom_onetied_symbol_interface_querying_item_value_v.ml";; 
 #use "tatom_onetied_symbol_implementation_querying_item_formula_v.ml";; 
frm_itm;;
 #use "tatom_onetied_symbol_implementation_querying_item_formula_v.ml";; 
#use "tatom_zerotied_cation_plus_three__symbol_implementation_extracting_item_value_v.ml";; 
#use "tatom_zerotied_cation_plus_three_symbol_implementation_extracting_item_value_v.ml";; 
kyl_itm ;;
#use "tatom_zerotied_cation_plus_three_symbol_implementation_extracting_item_value_v.ml";; 
smb_ens_l;;
smb_cns_l;;
ctt_cps_l;;
ecc_l ;;
ecs_l ;;
ctt_cpg_ppr ;;
suf_ppr ;;
sco_ppr ;;
List.nth (Tre_v.list_off_tree frm_itm) (List.length (Tre_v.list_off_tree frm_itm)/2);;
List.nth (Tre_v.list_off_tree frm_itm) (List.length (Tre_v.list_off_tree frm_itm)-1);;
val_itm ;;
#use "tatom_zerotied_cation_plus_three_symbol_implementation_extracting_item_value_v.ml";; 
Ecc_v.codefile_suffix_of_entitycategorycodefile ecc_ppr;;
val_itm ;;
 #use "tatom_zerotied_cation_plus_three_symbol_implementation_typing_item_value_v.ml";; 
 #use "tatom_zerotied_cation_plus_three_symbol_implementation_naming_item_value_v.ml";; 
#use "caml_paragraph_context_v.ml";;
ctt_cpg_ni3;;
let ctt_cpg = ctt_cpg_ni3;;
  let smb_cat = category_symbol_off_caml_paragraph_context ctt_cpg in
  let smb_cfi = codefile_symbol_off_caml_paragraph_context ctt_cpg in
  let pth_cnt = constructor_path_off_caml_paragraph_context ctt_cpg in
  let mrk_cns = Cnp_v.son_constructor_marker_of_constructor_path pth_cnt in
  
  let smb_cns = Dbt_v.left_off_doublet mrk_cns ;;
  let smb_cat = category_symbol_off_caml_paragraph_context ctt_cpg ;;
  let smb_cfi = codefile_symbol_off_caml_paragraph_context ctt_cpg;;
  let pth_cnt = constructor_path_off_caml_paragraph_context ctt_cpg;;
  let mrk_cns = Cnp_v.son_constructor_marker_of_constructor_path pth_cnt;;
 let smb_cns = Dbt_v.left_off_doublet mrk_cns;;
let smb_cps = 
	Cns_v.constructor_proper_symbol_off_constructor_symbol smb_cns ;;
let smb_ent = 
	Cns_v.entity_symbol_off_construcr_symbol smb_cns;;
	Cns_v.entity_symbol_off_constructor_symbol smb_cns;;
Ecc_v.make smb_ent smb_cat smb_cfi;;
smb_ent ;;
let smb_ent = Cns_v.entity_symbol_off_constructor_symbol smb_cns;;
Ecc_v.make smb_ent smb_cat smb_cfi;;
 #use "tatom_zerotied_cation_plus_three_symbol_implementation_typing_item_value_v.ml";; 
 #use "tatom_zerotied_cation_plus_three_symbol_implementation_naming_item_value_v.ml";; 
smb_cpg ;;
smb_ens_l;;
 #use "tatom_zerotied_cation_plus_three_symbol_implementation_naming_item_value_v.ml";; 
List.nth (Tre_v.list_off_tree frm_itm) 0;;
List.nth (Tre_v.list_off_tree frm_itm) (List.length (Tre_v.list_off_tree frm_itm)/2);;
 #use "tatom_zerotied_cation_plus_three_symbol_implementation_naming_item_value_v.ml";; 
val_itm ;;
ctt_cpg_ni3s;;
ctt_cps_ni3s;;
ctt_cpg_ni3;;
Cpc_v.bottom_constructor_symbol_off_caml_paragraph_context ctt_cpg_ni3;;
 #use "tatom_zerotied_cation_plus_three_symbol_implementation_naming_item_value_v.ml";; 
val_itm ;;
 #use "tatom_zerotied_cation_plus_three_symbol_implementation_naming_item_value_v.ml";; 
val_itm ;;
 #use "tatom_zerotied_cation_plus_three_symbol_implementation_naming_item_value_v.ml";; 
val_itm ;;
 #use "tatom_zerotied_cation_plus_three_symbol_implementation_naming_item_value_v.ml";; 
val_itm ;;
 #use "tatom_zerotied_cation_plus_three_symbol_implementation_naming_item_value_v.ml";; 
#use "tatom_zerotied_cation_plus_three_symbol_implementation_naming_item_value_v.ml";; 
#use "tatom_zerotied_cation_plus_three_symbol_implementation_upgrading_item_value_v.ml";; 
List.nth (Tre_v.list_off_tree frm_itm) (List.length (Tre_v.list_off_tree frm_itm)/2);;
#use "tatom_zerotied_cation_plus_three_symbol_implementation_upgrading_item_value_v.ml";; 
List.nth (Tre_v.list_off_tree frm_itm) (List.length (Tre_v.list_off_tree frm_itm)-1);;
#use "tatom_zerotied_cation_plus_three_symbol_implementation_upgrading_item_value_v.ml";; 
val_itm;;
Itf_v.retrieve_upgrading mrk_cnt_t kyl_itm;;
ctt_cpg_t;;
let ctt_cpg_t = 
	caml_paragraph_context_tree_of_constructor_marker_tree_of_item_key_list 
	  mrk_cnt_t kyl_itm ;;
#use "item_formula_v.ml";;
let ctt_cpg_t = 
	caml_paragraph_context_tree_of_constructor_marker_tree_of_item_key_list 
	  mrk_cnt_t kyl_itm ;;
Cps_v.bottom_caml_paragraph_symbol_of_bottom_caml_paragraph_context ctt_cpg_ni3;;
#use "tatom_zerotied_cation_plus_three_symbol_implementation_upgrading_item_value_v.ml";; 
#use "item_formula_v.ml";;
#use "tatom_zerotied_cation_plus_three_symbol_implementation_upgrading_item_value_v.ml";; 
List.nth (Tre_v.list_off_tree frm_itm) (List.length (Tre_v.list_off_tree frm_itm)/2);;
List.nth (Tre_v.list_off_tree frm_itm) (List.length (Tre_v.list_off_tree frm_itm)-1);;
#use "tatom_zerotied_cation_plus_three_symbol_implementation_upgrading_item_value_v.ml";; 
	caml_paragraph_context_tree_of_constructor_marker_tree_of_item_key_list 
#use "tatom_zerotied_cation_plus_three_symbol_implementation_upgrading_item_value_v.ml";; 
#use "tresidue_symbol_implementation_codefile_value_v.ml";; 
 #use "tresidue_symbol_implementation_querying_item_value_v.ml";; 
smb_cns_lsmb_ens_l;;
smb_ens_l;;
smb_cns_l;;
 #use "tresidue_symbol_implementation_querying_item_value_v.ml";; 
ctt_cps_l ;;
 ecc_l ;;
ecs_l ;;
ctt_cpg_ni3 ;;
 #use "tresidue_symbol_implementation_querying_item_value_v.ml";; 
Ecc_v.codefile_suffix_of_entitycategorycodefile ecc_ni3;;
 #use "tresidue_symbol_implementation_querying_item_value_v.ml";; 
List.nth (Tre_v.list_off_tree frm_itm) 0;;
Tre_v.list_off_tree frm_itm;;
List.nth (Tre_v.list_off_tree frm_itm) 0);;
List.nth (Tre_v.list_off_tree frm_itm) 0;;
List.nth (Tre_v.list_off_tree frm_itm) (List.length (Tre_v.list_off_tree frm_itm)/2);;
List.nth (Tre_v.list_off_tree frm_itm) (List.length (Tre_v.list_off_tree frm_itm)-1;;
List.nth (Tre_v.list_off_tree frm_itm) (List.length (Tre_v.list_off_tree frm_itm)-1);;
 #use "tresidue_symbol_implementation_querying_item_value_v.ml";; 
 ctt_cpg_ni3;;
let pth_cnb = constructor_path_off_caml_paragraph_context ctt_cpg_bur;;
#use "caml_paragraph_context_v.ml";;
let pth_cnb = constructor_path_off_caml_paragraph_context ctt_cpg_bur;;
 #use "tresidue_symbol_implementation_querying_item_value_v.ml";; 
let pth_cnb = constructor_path_off_caml_paragraph_context ctt_cpg_bur;;
Cpc_v.constructor_path_off_caml_paragraph_context ctt_cpg_bur;;
let ctt_cpg = ctt_cpg_bur;;
Cnp_v.up_constructor_marker_of_constructor_path pth_cnb;;
Cnp_v.up_constructor_marker_of_constructor_path pth_cnt;;
 #use "tresidue_symbol_implementation_querying_item_value_v.ml";; 
Cnp_v.up_constructor_marker_of_constructor_path pth_cnt_bur;;
let mrk_cnt_t = Cmtp_v.provide smb_cnt;;
let mrk_cnt = Tre_v.root_off_tree mrk_cnt_t;; 
pth_cnt = Cpc_v.constructor_path_off_caml_paragraph_context ctt_cpg;;
#use "tresidue_buried_fragmented_symbol_implementation_codefile_value_v.ml";; 
  #use "tresidue_symbol_implementation_querying_item_value_v.ml";; 
ctt_cpg_bur;;
  #use "tresidue_buried_fragmented_symbol_implementation_querying_item_value_v.ml";; 
ctt_cpg_bur;;
smb_cns_l;;
ctt_cps_l;;
ecc_l ;;
ecs_l ;;
  #use "tresidue_buried_fragmented_symbol_implementation_querying_item_value_v.ml";; 
 #use "tresidue_buried_fragmented_symbol_implementation_querying_item_value_v.ml";;
smb_cns_l;;
 #use "tresidue_buried_fragmented_symbol_implementation_querying_item_value_v.ml";;
smb_ens_l;;
 #use "tresidue_buried_fragmented_symbol_implementation_querying_item_value_v.ml";;
ctt_cpg_mar ;;
 #use "tresidue_buried_fragmented_symbol_implementation_querying_item_value_v.ml";;
List.nth (Tre_v.list_off_tree frm_itm) (List.length (Tre_v.list_off_tree frm_itm)/2);;
 #use "tresidue_buried_fragmented_symbol_implementation_querying_item_value_v.ml";;
pth_cnt_mar;;
mrk_cnu_mar;;
 #use "tresidue_buried_fragmented_symbol_implementation_querying_item_value_v.ml";;
 #use "tresidue_buried_fragmented_symbol_implementation_naming_item_value_v.ml";;
smb_cpg ;;
 #use "tresidue_buried_fragmented_symbol_implementation_naming_item_value_v.ml";;
 #use "tresidue_buried_fragmented_symbol_implementation_querying_item_value_v.ml";;
List.nth (Tre_v.list_off_tree frm_itm) (List.length (Tre_v.list_off_tree frm_itm)/2);;
List.length  (Tre_v.list_off_tree frm_itm)
;;
 #use "tresidue_buried_fragmented_symbol_implementation_querying_item_value_v.ml";;
nod_l;;
 #use "tresidue_buried_fragmented_symbol_implementation_querying_item_value_v.ml";;
#use "item_formula_v.ml";;
retrieve_querying_nondatastructure mrk_cnt_t kyl_itm;;
 #use "tresidue_buried_fragmented_symbol_implementation_querying_item_value_v.ml";;
mrk_cnt_t;;
 #use "tresidue_buried_fragmented_symbol_implementation_querying_item_value_v.ml";;
smb_cpg;;
 #use "tresidue_buried_fragmented_symbol_implementation_querying_item_value_v.ml";;
smb_cpg ;;
Cps_v.bottom_caml_paragraph_symbol_of_bottom_caml_paragraph_context ctt_cpg;;
cnt_nod;;
nod_l;;
 #use "tresidue_buried_fragmented_symbol_implementation_querying_item_value_v.ml";;
nod_l;;
 #use "tresidue_buried_fragmented_symbol_implementation_querying_item_value_v.ml";;
#use "tresidue_buried_fragmented_symbol_implementation_naming_item_value_v.ml";; 
smb_cpg ;;
#use "tresidue_buried_fragmented_symbol_implementation_naming_item_value_v.ml";; 
cnt_nod;;
nod_l;;
pth_cnt_mar;;
#use "tresidue_buried_fragmented_symbol_implementation_naming_item_value_v.ml";; 
ecs_l;;
make_name_pipe_t_dot_s_arrow_s (List.nth ecs_l 1)  (List.nth ecs_l 0);; 
Caml_line_value_v.make_name_pipe_t_dot_s_arrow_s (List.nth ecs_l 1)  (List.nth ecs_l 0);; 
ecs;;
cps_mar;;
 #use "tsegment_buried_symbol_implementation_extracting_heading_caml_paragraph_value_v.ml";;
smb_cpg ;;
smb_ens_l;;
#use "tresidue_buried_fragmented_symbol_implementation_extracting_heading_caml_paragraph_value_v.ml";; 
#use "tresidue_buried_fragmented_symbol_implementation_extracting_caml_paragraph_value_v.ml";; 
smb_ens_l;;
smb_cns_l;;
ctt_cps_l ;;
 ecc_l ;;
ecs_l ;;
ctt_cpg_mar;;
frm_cpg;;
val_cpg;;
#use "tresidue_buried_fragmented_symbol_implementation_extracting_caml_paragraph_value_v.ml";; 
Aba_v.abbreviation_argument_of_entity_symbol (List.nth smb_ens_l 1);;
Abm_v.abbreviation_module_of_entity_symbol (List.nth smb_ens_l 1);;
#use "tresidue_buried_fragmented_symbol_implementation_extracting_caml_paragraph_value_v.ml";; 
nam_fil_cpg;;
#use "tresidue_buried_fragmented_symbol_implementation_extracting_caml_paragraph_value_v.ml";; 
#use "tresidue_buried_fragmented_symbol_implementation_naming_caml_paragraph_value_v.ml";;
smb_cpg;;
#use "tresidue_buried_fragmented_symbol_implementation_naming_caml_paragraph_value_v.ml";;
frm_cpg ;;
#use "tresidue_buried_fragmented_symbol_implementation_naming_caml_paragraph_value_v.ml";;
nam_fil_cpg;;
val_cpg;;
#use "tresidue_buried_fragmented_symbol_implementation_naming_caml_paragraph_value_v.ml";;
frm_cpg ;;
#use "tresidue_buried_fragmented_symbol_implementation_naming_caml_paragraph_value_v.ml";;
 #use "tresidue_buried_fragmented_symbol_implementation_naming_item_value_v.ml";;
 #use "tresidue_buried_fragmented_symbol_implementation_upgrading_item_value_v.ml";; 
smb_cpg ;;
 #use "tresidue_buried_fragmented_symbol_implementation_upgrading_item_value_v.ml";; 
smb_cpg ;;
 #use "tresidue_buried_fragmented_symbol_implementation_upgrading_item_value_v.ml";; 
cnt_nod;;
pList.nth nod_l 0;;
List.nth nod_l 0;;
List.nth nod_l (cnt_nod/2);;
List.nth nod_l (cnt_nod-1);;
pth_cnt_mar;;
 #use "tresidue_buried_fragmented_symbol_implementation_upgrading_item_value_v.ml";; 
 #use "tresidue_buried_fragmented_symbol_implementation_upgrading_caml_paragraph_value_v.ml";; 
ecs_l;;
smb_cpg;;
 #use "tresidue_buried_fragmented_symbol_implementation_upgrading_item_value_v.ml";; 
 #use "item_formula_v.ml";; 
 retrieve_upgrading mrk_cnt_t kyl_itm;;
List.nth nod_l 1;;
frm_itm;;
Tre_v.list_off_tree frm_itm;;
n_l = Tre_v.list_off_tree frm_itm;;
let n_l = Tre_v.list_off_tree frm_itm;;
List.length n_l;;
List.nth nod_l 2;;
List.nth nod_l 3;;
List.nth nod_l 4;;
 retrieve_extracting mrk_cnt_t kyl_itm;;
 #use "tresidue_buried_fragmented_symbol_implementation_extracting_item_value_v.ml";; 
cnt_nod;;
 #use "tresidue_buried_fragmented_symbol_implementation_extracting_item_value_v.ml";; 
List.nth nod_l 2;;
List.nth nod_l 3;;
val_itm ;;
 #use "tresidue_buried_fragmented_symbol_implementation_extracting_item_value_v.ml";; 
List.nth nod_l 1;;
List.nth nod_l 2;;
mrk_cnt_t;;
 #use "tresidue_buried_fragmented_symbol_implementation_extracting_item_value_v.ml";; 
List.nth nod_l 1;;
List.nth nod_l 2;;
 #use "tresidue_buried_fragmented_symbol_implementation_extracting_item_value_v.ml";; 
List.nth nod_l 2;;
 #use "tresidue_buried_fragmented_symbol_implementation_extracting_item_value_v.ml";; 
 #use "tresidue_buried_fragmented_symbol_implementation_upgrading_item_value_v.ml";; 
 #use "item_formula_v.ml";; 
retrieve_upgrading_nondatastructure mrk_cnt_t kyl_itm;;
 #use "tresidue_buried_fragmented_symbol_implementation_upgrading_item_value_v.ml";; 
(
ctt_cpg 
(* : Caml_paragraph_context_t.caml_paragraph_context *)
=
([(Caml_paragraph_context_t.Cnp_t.Cnm_t.Cns_t.Constructor_proper_symbol
    (Caml_paragraph_context_t.Cnp_t.Cnm_t.Cns_t.Constructor_several_symbol
      "residue_buried_fragmented"),
   1)],
 [("item", "upgrading"); ("codefile", "implementation");
  ("category", "symbol"); ("entity", "residue_buried_fragmented")])
(* : Caml_paragraph_symbol_t.caml_paragraph_symbol *)
);;
val_itm;;
 #use "tresidue_buried_fragmented_symbol_implementation_upgrading_item_value_v.ml";; 
#use "tatom_zerotied_symbol_implementation_querying_item_value_v.ml";; 
smb_ens_l;;
smb_cns_l;;
ctt_cps_l ;;
mrk_cnt_t;;
#use "tatom_zerotied_symbol_implementation_querying_item_value_v.ml";; 
#use "tatom_zerotied_symbol_implementation_upgrading_item_value_v.ml";; 
smb_ens_l;;
ctt_cpg_mar ;;
ecs_l ;;
 ecc_l;;
ctt_cps_l;;
smb_cns_l;;
#use "tatom_zerotied_symbol_implementation_upgrading_item_value_v.ml";; 
ctt_cps_l ;;
#use "tatom_zerotied_symbol_implementation_upgrading_item_value_v.ml";; 
ctt_cps_l ;;
cnt_nod;;
#use "tatom_zerotied_symbol_implementation_upgrading_item_value_v.ml";; 
mrk_cnt_t::
mrk_cnt_t;;
smb_cli_l;;
#use "tatom_zerotied_symbol_implementation_upgrading_item_value_v.ml";; 
List.nth smb_cli_l 0;;
(
List.nth smb_cli_l 0
(* : Caml_line_symbol_t.caml_line_symbol list *)
=
Caml_line_symbol_t.Constant_symbol
  (Caml_line_symbol_t.Comment_line_item_symbol
    ([(Caml_line_symbol_t.Cpc_t.Cnp_t.Cnm_t.Cns_t.Constructor_proper_symbol
        (Caml_line_symbol_t.Cpc_t.Cnp_t.Cnm_t.Cns_t.Constructor_several_symbol
          "atom_zerotied"),
       1)],
     [("item", "upgrading"); ("codefile", "implementation");
      ("category", "symbol"); ("entity", "atom_zerotied")]))
);;
#use "tatom_zerotied_symbol_implementation_upgrading_item_value_v.ml";; 
List.nth nod_l 2;;
#use "tatom_zerotied_symbol_implementation_upgrading_item_value_v.ml";; 
pth_cnt_mar;;
mrk_cnu_mar;;
#use "tatom_zerotied_symbol_implementation_upgrading_item_value_v.ml";; 
pth_cnt_mar;;
#use "tatom_zerotied_symbol_implementation_upgrading_item_value_v.ml";; 
val_itm ;;
#use "tatom_zerotied_symbol_implementation_upgrading_item_value_v.ml";; 
List.nth smb_cpg_l 3;;
#use "tatom_zerotied_symbol_implementation_upgrading_item_value_v.ml";; 
List.nth smb_cpg_l 3;;
let ctt_cpg_t = 
    caml_paragraph_context_tree_of_constructor_marker_tree_of_item_key_list 
      mrk_cnt_t kyl_itm ;;
ctt_cpg_t;;
ctt_cpg_mar;;
#use "tatom_zerotied_symbol_implementation_upgrading_item_value_v.ml";; 
ctt_cpg;;
ctt_cpg_l;;
let smb_cpg_t = Tre_v.map
      (* translation ctt -> cpg *)
      Cps_v.bottom_caml_paragraph_symbol_of_bottom_caml_paragraph_context 
      ctt_cpg_t;;
ctt_cpg_l;;
List.nth ctt_cpg_l 4 ;;
List.nth ctt_cpg_l 3 ;;
List.nth ctt_cpg_l 2 ;;
let ctt_cpb = List.nth ctt_cpg_l 2;;
#use "caml_paragraph_symbol_v.ml";;
  let smb_cnb = 
    Cpc_v.bottom_constructor_symbol_off_caml_paragraph_context ctt_cpb ;;
let dep_cnb = Cpc_v.bottom_constructor_depth_off_caml_paragraph_context ctt_cpb ;;
let trp_imc = Cpc_v.symboltriplet_off_caml_paragraph_context ctt_cpb ;;
ctt_cpb;;
#use "tatom_zerotied_symbol_implementation_upgrading_item_value_v.ml";; 
List.nth smb_cpg_l 3;;
List.nth smb_cli_l 4;;
#use "tatom_zerotied_symbol_implementation_upgrading_item_value_v.ml";; 
List.nth smb_cpg_l 3;;
#use "tatom_zerotied_symbol_implementation_upgrading_item_value_v.ml";; 
List.nth smb_cli_l 5;;
#use "tatom_zerotied_symbol_implementation_upgrading_item_value_v.ml";; 
List.nth smb_cli_l 6;;
List.nth smb_cli_l 7;;
#use "tatom_zerotied_symbol_implementation_upgrading_item_value_v.ml";; 
val_itm;;
#use "tatom_zerotied_symbol_implementation_upgrading_item_value_v.ml";; 
val_itm;;
#use "tatom_zerotied_symbol_implementation_upgrading_item_value_v.ml";; 
val_itm;;
#use "tatom_zerotied_symbol_implementation_upgrading_item_value_v.ml";; 
#use "tatom_zerotied_symbol_implementation_querying_item_value_v.ml";; 
cnt_nod;;
#use "tatom_zerotied_symbol_implementation_querying_item_value_v.ml";; 
List.nth smb_cpg_l 2;;
#use "tatom_zerotied_symbol_implementation_querying_item_value_v.ml";; 
List.nth smb_cpg_l 2;;
List.nth smb_cli_l 1;;
List.nth smb_cli_l 2;;
List.nth smb_cli_l 3;;
#use "tatom_zerotied_symbol_implementation_querying_item_value_v.ml";; 
List.nth smb_cli_l 2;;
#use "tatom_zerotied_symbol_implementation_querying_item_value_v.ml";; 
List.nth smb_cli_l 3;;
#use "tatom_zerotied_symbol_implementation_querying_item_value_v.ml";; 
List.nth smb_cpg_l 3;;
List.nth smb_cli_l 4;;
List.nth smb_cli_l 5;;
List.nth smb_cli_l 6;;
val_itm ;;
let val_itm = Itv_v.make kyl_itm;;
#use "tatom_zerotied_symbol_implementation_querying_item_value_v.ml";; 
smb_cli_l;;
#use "tatom_zerotied_symbol_implementation_naming_item_value_v.ml";; 
smb_cpg ;;
#use "tatom_zerotied_symbol_implementation_naming_item_value_v.ml";; 
cnt_nod;;
#use "tatom_zerotied_symbol_implementation_naming_item_value_v.ml";; 
List.nth smb_cpg_l 1;;
List.nth smb_cpg_l 2;;
List.nth smb_cli_l 1;;
smb_cpg_l;;
List.nth smb_cli_l 2;;
List.nth smb_cli_l 3;;
List.nth smb_cli_l 4;;
smb_cli_l;;
List.nth smb_cli_l 4;;
 List.nth ctt_cpg_l 2;;
#use "tatom_zerotied_symbol_implementation_naming_item_value_v.ml";; 
List.nth smb_cli_l 2;;
List.nth smb_cli_l 3;;
#use "tatom_zerotied_symbol_implementation_naming_item_value_v.ml";; 
List.nth smb_cli_l 4;;
List.nth ctt_cpg_l 2;;
List.nth smb_cpg_l 3;;
#use "tatom_zerotied_symbol_implementation_naming_item_value_v.ml";; 
 List.nth ctt_cpg_l 2;;
#use "tatom_zerotied_symbol_implementation_naming_item_value_v.ml";; 
List.nth smb_cli_l 5;;
List.nth smb_cli_l 6;;
val_itm ;;
let val_itm = Itv_v.make kyl_itm;;
#use "tatom_zerotied_symbol_implementation_naming_item_value_v.ml";; 
#use "tatom_zerotied_symbol_implementation_extracting_item_value_v.ml";; 
List.nth smb_cpg_l 2;;
List.nth smb_cpg_l 3;;
List.nth smb_cli_l 1;;
#use "tatom_zerotied_symbol_implementation_extracting_item_value_v.ml";; 
List.nth smb_cli_l 2;;
List.nth smb_cli_l 3;;
List.nth smb_cli_l 4;;
#use "tatom_zerotied_symbol_implementation_extracting_item_value_v.ml";; 
List.nth smb_cli_l 3;;
List.nth ctt_cpg_l 2;;
#use "tatom_zerotied_symbol_implementation_extracting_item_value_v.ml";; 
List.nth smb_cpg_l 3;;
#use "tatom_zerotied_symbol_implementation_extracting_item_value_v.ml";; 
List.nth smb_cli_l 5;;
let val_itm = Itv_v.make kyl_itm;;
#use "tatom_zerotied_symbol_implementation_extracting_item_value_v.ml";; 
List.nth smb_cli_l 5;;
#use "tatom_zerotied_symbol_implementation_extracting_item_value_v.ml";; List.nth smb_cli_l 6;;
List.nth smb_cli_l 6;;
#use "tatom_zerotied_symbol_implementation_extracting_item_value_v.ml";; 
List.nth smb_cli_l 6;;
#use "tatom_zerotied_symbol_implementation_extracting_item_value_v.ml";; 
#use "tatom_zerotied_symbol_implementation_codefile_value_v.ml";; 
Ecs_v.name ecs;;
ecs;;
#use "tatom_zerotied_symbol_implementation_codefile_value_v.ml";; 
let nam_fil_cfi = Cfv_v.codefile_file_name_of_key_list kyl_cfi;;
#use "tatom_zerotied_symbol_implementation_codefile_value_v.ml";; 
Ecs_v.name ecs;;
ecs;;
let nam_fil_cfi = Cfv_v.codefile_file_name_of_key_list kyl_cfi;;
let val_cfi = Cfv_v.make kyl_cfi;;
List.nth val_cfi 0;;
Lst_v.last_element_of_list val_cfi;;
#use "tatom_zerotied_symbol_implementation_codefile_value_v.ml";; 
Lst_v.last_element_of_list val_cfi;;
#use "tatom_zerotied_symbol_implementation_codefile_value_v.ml";; 
List.nth val_cfi 1;;
#use "tatom_zerotied_symbol_implementation_codefile_value_v.ml";; 
List.nth val_cfi 1;;
#use "tatom_zerotied_symbol_implementation_codefile_value_v.ml";; 
Lst_v.last_element_of_list val_cfi;;
#use "tatom_zerotied_symbol_implementation_codefile_value_v.ml";; 
Lst_v.penultimate_element_of_list val_cfi;;
Lst_v.antepenultimate_element_of_list val_cfi;;
#use "tatom_zerotied_symbol_implementation_codefile_value_v.ml";; 
Lst_v.penultimate_element_of_list val_cfi;;
#use "tatom_zerotied_symbol_implementation_codefile_value_v.ml";; 
#use "tresidue_buried_fragmented_symbol_implementation_upgrading_item_value_v.ml";; 
List.nth nod_l 2;;
#use "tresidue_buried_fragmented_symbol_implementation_upgrading_item_value_v.ml";; 
List.nth nod_l 4;;
#use "tresidue_buried_fragmented_symbol_implementation_upgrading_item_value_v.ml";; 
Lst_v.ultimate_element_of_list nod_l;;
let val_itm = Itv_v.make kyl_itm;;
#use "tresidue_buried_fragmented_symbol_implementation_upgrading_item_value_v.ml";; 
smb_ens_l;;
smb_cns_l;;
ctt_cps_l ;;
 ecc_l ;;
ecs_l ;;
#use "tresidue_buried_fragmented_symbol_implementation_upgrading_item_value_v.ml";; 
cnt_nod;;
List.nth smb_cpg_l 0;;
#use "tresidue_buried_fragmented_symbol_implementation_upgrading_item_value_v.ml";; 
List.nth smb_cpg_l 2;;
List.nth smb_cli_l 1;;
List.nth smb_cli_l 2;;
List.nth smb_cli_l 3;;
 List.nth ctt_cpg_l 2;;
let ctt_cpg_ar = List.nth ctt_cpg_l 2;
;;
List.nth smb_cpg_l 3;;
List.nth smb_cli_l 4;;
List.nth smb_cli_l 5;;
List.nth smb_cli_l 6;;
let val_itm = Itv_v.make kyl_itm;;
#use "tresidue_buried_fragmented_symbol_implementation_upgrading_item_value_v.ml";; 
List.nth smb_cli_l 5;;
#use "tresidue_buried_fragmented_symbol_implementation_upgrading_item_value_v.ml";; 
#use "tresidue_buried_fragmented_symbol_implementation_extracting_item_value_v.ml";;
mrk_cnt_t;;
#use "tresidue_buried_fragmented_symbol_implementation_extracting_item_value_v.ml";;
 #use "tresidue_buried_fragmented_buried_fragmented_symbol_implementation_codefile_value_v.ml";;
 #use "tresidue_buried_fragmented_symbol_implementation_codefile_value_v.ml";;
List.nth val_cfi 1;;
Lst_v.penultimate_element_of_list val_cfi;;
 #use "tresidue_buried_fragmented_symbol_implementation_codefile_value_v.ml";;
 #use "tresidue_buried_fragmented_symbol_implementation_querying_value_v.ml";;
 #use "tresidue_buried_fragmented_symbol_implementation_querying_item_value_v.ml";;
cnt_nod;;
 #use "tresidue_buried_fragmented_symbol_implementation_querying_item_value_v.ml";;
List.nth smb_cpg_l 2;;
 #use "tresidue_buried_fragmented_symbol_implementation_querying_item_value_v.ml";;
List.nth smb_cli_l 1;;
List.nth smb_cli_l 2;;
List.nth smb_cli_l 3;;
List.nth ctt_cpg_l 2;;
 #use "tresidue_buried_fragmented_symbol_implementation_querying_item_value_v.ml";;
List.length smb_cli_l;;
 #use "tresidue_buried_fragmented_symbol_implementation_querying_item_value_v.ml";;
nam_fil_itm;;
 #use "tresidue_buried_fragmented_symbol_implementation_querying_item_value_v.ml";;
 #use "tresidue_symbol_implementation_querying_item_value_v.ml";;
smb_ens_l;;
smb_cns_l;;
ctt_cps_l ;;
 ecc_l ;;
ecs_l ;;
 #use "tresidue_symbol_implementation_querying_item_value_v.ml";;
List.nth smb_cpg_l 2;;
List.nth smb_cli_l 1;;
List.nth smb_cli_l 2;;
List.nth smb_cli_l 3;;
 #use "tresidue_symbol_implementation_querying_item_value_v.ml";;
 List.nth ctt_cpg_l 2;;
List.nth smb_cli_l 4;;
 #use "tresidue_symbol_implementation_querying_item_value_v.ml";;
List.length smb_cpg_l;;
List.length smb_cli_l;;
 #use "tresidue_symbol_implementation_querying_item_value_v.ml";;
List.length smb_cpg_l;;
 #use "tresidue_symbol_implementation_querying_item_value_v.ml";;
let mrk_cnu = Cnp_v.up_constructor_marker_of_constructor_path pth_cnb;;
 #use "tresidue_symbol_implementation_querying_item_value_v.ml";;
mrk_cnt_t;;
 #use "tresidue_symbol_implementation_querying_item_value_v.ml";;
pth_cnt_t;;
 #use "tresidue_symbol_implementation_querying_item_value_v.ml";;
List.length pth_cnt_l;;
List.nth pth_cnt_l 0;;
List.nth pth_cnt_l 1;;
List.nth pth_cnt_l 2;;
List.nth pth_cnt_l 3;;
List.iter (fun p -> Cnp_v.check_is_valid_of_constructor_path p "test") pth_cnt_l;;
List.iteri (fun p i -> print_integer i;  Cnp_v.check_is_valid_of_constructor_path p "test") pth_cnt_l;;
List.nth pth_cnt_l 2;;
List.nth pth_cnt_l 3;;
 pth_cnt_t ;;
 #use "tresidue_symbol_implementation_querying_item_value_v.ml";;
 mark_cnt_t ;;
 mrk_cnt_t ;;
 #use "tresidue_symbol_implementation_querying_item_value_v.ml";; 
ctt_cpg ;;
ctt_cps_l ;;
 #use "tresidue_symbol_implementation_querying_item_value_v.ml";; 
ctt_cps_l ;;
 #use "tresidue_symbol_implementation_querying_item_value_v.ml";; 
List.nth smb_cli_l 3;;
 List.nth ctt_cpg_l 2;;
 #use "tresidue_symbol_implementation_querying_item_value_v.ml";; 
List.length pth_cnt_l;;
 #use "tresidue_symbol_implementation_querying_item_value_v.ml";; 
val_itm ;;
 #use "tresidue_symbol_implementation_querying_item_value_v.ml";; 
 #use "tresidue_symbol_implementation_naming_item_value_v.ml";; 
ctt_cpg ;;
 #use "tresidue_symbol_implementation_naming_item_value_v.ml";; 
ctt_cpg ;;
 #use "tresidue_symbol_implementation_naming_item_value_v.ml";; 
smb_ens_l;;
 #use "tresidue_symbol_implementation_naming_item_value_v.ml";; 
smb_cpg ;;
 #use "tresidue_symbol_implementation_naming_item_value_v.ml";; 
List.nth smb_cpg_l 1;;
List.nth smb_cpg_l 2;;
List.nth smb_cli_l 1;;
List.nth smb_cli_l 2;;
List.nth smb_cli_l 3;;
List.nth ctt_cpg_l 2;;
 #use "tresidue_symbol_implementation_naming_item_value_v.ml";; 
List.nth smb_cli_l 4;;
List.length pth_cnt_l;;
 #use "tresidue_symbol_implementation_naming_item_value_v.ml";; 
List.length smb_cpg_l;;
List.length smb_cli_l;;
val_itm ;;
let val_itm = Itv_v.make kyl_itm;;
 #use "tresidue_symbol_implementation_naming_item_value_v.ml";; 
 #use "tresidue_symbol_implementation_upgrading_item_value_v.ml";; 
List.nth smb_cpg_l 2;;
List.nth smb_cli_l 1;;
List.nth smb_cli_l 2;;
List.nth smb_cli_l 3;;
 #use "tresidue_symbol_implementation_upgrading_item_value_v.ml";; 
List.nth smb_cli_l 4;;
 #use "tresidue_symbol_implementation_upgrading_item_value_v.ml";; 
List.length smb_cpg_l;;
 #use "tresidue_symbol_implementation_upgrading_item_value_v.ml";; 
List.length smb_cli_l;;
let val_itm = Itv_v.make kyl_itm;;
 #use "tresidue_symbol_implementation_upgrading_item_value_v.ml";; 
 #use "tresidue_symbol_implementation_extracting_item_value_v.ml";; 
List.nth smb_cpg_l 2;;
List.nth smb_cli_l 1;;
List.nth smb_cli_l 2;;
List.nth smb_cli_l 3;;
 #use "tresidue_symbol_implementation_extracting_item_value_v.ml";; 
List.nth smb_cli_l 4;;
 #use "tresidue_symbol_implementation_extracting_item_value_v.ml";; 
List.length smb_cpg_l;;
List.length smb_cli_l;;
let val_itm = Itv_v.make kyl_itm;;
 #use "tresidue_symbol_implementation_extracting_item_value_v.ml";; 
 #use "tatom_zerotied_symbol_implementation_upgrading_item_value_v.ml";; 
ctt_cps_l ;;
 #use "tatom_zerotied_symbol_implementation_upgrading_item_value_v.ml";; 
List.nth smb_cli_l 5;;
 #use "tatom_zerotied_symbol_implementation_upgrading_item_value_v.ml";; 
List.nth smb_cli_l 6;;
 #use "tatom_zerotied_symbol_implementation_upgrading_item_value_v.ml";; 
#use "tatom_zerotied_symbol_implementation_querying_item_value_v.ml";; 
List.nth smb_cpg_l 3;;
#use "tatom_zerotied_symbol_implementation_querying_item_value_v.ml";; 
List.nth smb_cli_l 5;;
List.nth smb_cpg_l 3=List.nth smb_cpg_l 5;;
List.nth smb_cpg_l 3=List.nth smb_cpg_l 4;;
List.nth smb_cli_l 5;;
#use "tatom_zerotied_symbol_implementation_querying_item_value_v.ml";; 
List.nth smb_cli_l 6;;
#use "tatom_zerotied_symbol_implementation_querying_item_value_v.ml";; 
#use "tatom_zerotied_symbol_implementation_naming_item_value_v.ml";; 
List.nth smb_cli_l 5
(* : Caml_line_symbol_t.c;;
List.nth smb_cli_l 5
;;
#use "tatom_zerotied_symbol_implementation_naming_item_value_v.ml";; 
#use "tatom_zerotied_symbol_implementation_extracting_item_value_v.ml";; 
#use "tresidue_buried_fragmented_symbol_implementation_upgrading_caml_paragraph_value_v.ml";
#use "tresidue_buried_fragmented_symbol_implementation_upgrading_caml_paragraph_value_v.ml";;
 #use "tresidue_buried_fragmented_symbol_implementation_upgrading_caml_paragraph_value_v.ml";; 
Aba_v.abbreviation_argument_of_entity_symbol (List.nth smb_ens_l 0)
=;;
Aba_v.abbreviation_argument_of_entity_symbol (List.nth smb_ens_l 0)
;;
 #use "tresidue_buried_fragmented_symbol_implementation_upgrading_caml_paragraph_value_v.ml";; 
Aba_v.abbreviation_argument_of_entity_symbol (List.nth smb_ens_l [1]);;
 #use "tresidue_buried_fragmented_symbol_implementation_upgrading_caml_paragraph_value_v.ml";; 
val_cpg;;
#use "tresidue_buried_fragmented_symbol_implementation_naming_caml_paragraph_value_v.ml";; 
frm_cpg ;;
#use "tresidue_buried_fragmented_symbol_implementation_naming_caml_paragraph_value_v.ml";; 
 #use "tresidue_buried_fragmented_symbol_implementation_extracting_caml_paragraph_value_v.ml";; 
#use "tresidue_buried_fragmented_symbol_implementation_querying_item_value_v.ml";; 
 #use "tresidue_buried_fragmented_symbol_implementation_querying_item_value_v.ml";; 
  #use "tresidue_buried_fragmented_symbol_implementation_querying_item_value_v.ml";; 
List.nth smb_cpg_l 0;;
  #use "tresidue_buried_fragmented_symbol_implementation_querying_item_value_v.ml";; 
List.nth smb_cpg_l 0;;
 #use "tatom_symbol_implementation_extracting_top_caml_paragraph_formula_v.ml";; 
 #use "tatom_querying_item_value_v.ml";; 
 #use "tatom_symbol_implementation_querying_item_value_v.ml";; 
 *)mrk_cne_t ;;
 mrk_cne_t ;;
mrk_cnt;;
 #use "tatom_symbol_implementation_querying_item_value_v.ml";; 
List.nth (Tre_v.list_off_tree frm_itm) (List.length (Tre_v.list_off_tree frm_itm)/2);;
List.nth (Tre_v.list_off_tree frm_itm) (List.length (Tre_v.list_off_tree frm_itm) -1);;
List.nth (Tre_v.list_off_tree frm_itm) (List.length (Tre_v.list_off_tree val_itm)/2);;
List.nth (Tre_v.list_off_tree frm_itm) (List.length (Tre_v.list_off_tree val_itm) -1);;
 #use "tatom_symbol_implementation_upgrading_item_value_v.ml";; 
mrk_cne_t ;;
mrk_cne_t ;;let mrk_cnt_t = Cmtp_v.provide smb_cnt;;
mrk_cnt ;;
 #use "tatom_symbol_implementation_upgrading_item_value_v.ml";; 
  #use "tatom_onetied_symbol_implementation_extracting_item_formula_v.ml";; 
 mrk_cnt_t;;
mrk_cne_t ;;
frm_itm;;
 #use "tatom_onetied_symbol_implementation_querying_item_value_v.ml";; 
module Cmtp_v = Constructor_marker_tree_provider_v
module Cns_t = Constructor_symbol_t
module Cns_v = Constructor_symbol_v
module Cts_v = Category_symbol_v
module Cpc_v = Caml_paragraph_context_v
module Cps_v = Caml_paragraph_symbol_v
module Ens_v = Entity_symbol_v
module Fio_v = Fileio_v
module Its_v = Item_symbol_v
module Itv_v = Item_value_v
module Itf_v = Item_formula_v
module Cfs_t = Codefile_symbol_t
module Cfs_v = Codefile_symbol_v
module Tgv_v = Target_value_v
module Tgp_v = Target_value_provider_v
module Tre_t = Tree_t
module Tre_v = Tree_v
let nam_ent = "atom_onetied";;
let smb_ent = Ens_v.make nam_ent;;
let smb_epr = Ens_v.entity_proper_symbol_of_string nam_ent;;
let smb_ent = Ens_v.make nam_ent;;
let smb_cnt = Cns_v.make smb_ent;;
let smb_cat = Cts_v.category_symbol;;
let smb_cfi = Cfs_v.codefile_implementation;;
let smb_itm = Its_v.querying;;
let mrk_cnt_t = Cmtp_v.provide smb_cnt;;
let mrk_cne_t =
    Tre_v.subtree_remove (fun (s, d) -> ( 
      match s with
      | Cns_t.Constructor_fictive_symbol _ -> true
      | _ -> false
)
) mrk_cnt_t;;
let kyl_itm = [("item", Its_v.name smb_itm); ("codefile", Cfs_v.name smb_cfi); ("category", Cts_v.name smb_cat); ("entity", Ens_v.name smb_ent)];;
let frm_itm = Itf_v.retrieve kyl_itm;;
let val_itm = Itv_v.make kyl_itm;;
let nam_fil_itm = Itv_v.item_file_name_of_key_list kyl_itm;; mrk_cnt_t;;
 mrk_cnt_t;;
mrk_cne_t ;;
val_itm;;
  #use "tatom_onetied_symbol_implementation_querying_item_value_v.ml";; 
   #use "tatom_onetied_symbol_implementation_upgrading_item_value_v.ml";; 
 mrk_cnt_t;;
   #use "tatom_onetied_symbol_implementation_upgrading_item_value_v.ml";; 
List.length smb_cpg_l;;
   #use "tatom_onetied_symbol_implementation_upgrading_item_value_v.ml";; 
val_itm;;
   #use "tatom_onetied_symbol_implementation_upgrading_item_value_v.ml";; 
 #use "tatom_onetied_symbol_interface_querying_item_value_v.ml";; 
 mrk_cnt_t;;
mrk_cne_t ;;
 #use "tatom_onetied_symbol_interface_querying_item_value_v.ml";; 
val_itm;;
 #use "tatom_onetied_symbol_interface_querying_item_value_v.ml";; 
 #use "tatom_onetied_symbol_interface_upgrading_item_value_v.ml";; 
 mrk_cnt_t;;
List.length smb_cpg_l;;
 #use "tatom_onetied_symbol_interface_upgrading_item_value_v.ml";; 
val_itm;;
 #use "tatom_onetied_symbol_interface_upgrading_item_value_v.ml";; 
 #use "tatom_onetied_symbol_implementation_querying_item_formula_v.ml";; 
 mrk_cnt_t;;
mrk_cne_t ;;
frm_itm;;
 #use "tatom_onetied_symbol_implementation_querying_item_formula_v.ml";; 
 #use "tatom_onetied_symbol_implementation_upgrading_item_formula_v.ml";; 
 mrk_cnt_t;;
 #use "tatom_onetied_symbol_implementation_upgrading_item_formula_v.ml";; 
List.nth smb_cpg_l 1;;
List.nth smb_cpg_l 2;;
List.nth smb_cpg_l 6;;
List.nth smb_cpg_l 7 ;;
 #use "tatom_onetied_symbol_implementation_upgrading_item_formula_v.ml";; 
 #use "tpolypeptide_symbol_type_typing_item_formula_v.ml";; 
mrk_cnt_t;;
pth_cnt_t ;;
let mrk_cnt_t = Cmtp_v.provide smb_cnt;;
let mrk_cnt_l = Tre_v.list_off_tree mrk_cnt_t;;
List.nth mark_cnt_l 5;;
List.nth mrk_cnt_l 5;;
 #use "tpolypeptide_symbol_type_typing_item_formula_v.ml";; 
List.nth mark_cnt_l 5;;
 #use "tpolypeptide_symbol_type_typing_item_formula_v.ml";; 
 #use "tresidue_symbol_implementation_querying_item_value_v.ml";; 
ctt_cpg ;;
 #use "tresidue_symbol_implementation_querying_item_value_v.ml";; 
ctt_cps_l ;;
 #use "tresidue_symbol_implementation_querying_item_value_v.ml";; 
ctt_cps_l ;;
 #use "tresidue_symbol_implementation_querying_item_value_v.ml";; 
 #use "tatom_zerotied_symbol_implementation_codefile_value_v.ml";; 
List.nth val_cfi 1;;
Lst_v.penultimate_element_off_list val_cfi;;
 #use "tatom_zerotied_symbol_implementation_codefile_value_v.ml";; 
 #use "tresidue_buried_fragmented_symbol_implementation_querying_item_value_v.ml";; 
ctt_cps_l ;;
 #use "tresidue_buried_fragmented_symbol_implementation_querying_item_value_v.ml";; 
List.nth smb_cpg_l 2;;
 #use "tresidue_buried_fragmented_symbol_implementation_querying_item_value_v.ml";; 
List.nth smb_cpg_l 2;;
 #use "tresidue_buried_fragmented_symbol_implementation_querying_item_value_v.ml";; 
  #use "tatom_zerotied_symbol_implementation_naming_item_value_v.ml";; 
 #use "tresidue_buried_fragmented_symbol_implementation_naming_item_value_v.ml";; 
ctt_cps_l;;
 #use "tresidue_buried_fragmented_symbol_implementation_naming_item_value_v.ml";; 
#use "tatom_zerotied_symbol_implementation_extracting_item_value_v.ml";; 
  #use "tresidue_buried_fragmented_symbol_implementation_extracting_item_value_v.ml";; 
mrk_cnt_t;;
List.nth nod_l 2;;
pth_cnt_mar
;;
  #use "tresidue_buried_fragmented_symbol_implementation_extracting_item_value_v.ml";; 
 #use "tatom_zerotied_symbol_implementation_upgrading_item_value_v.ml";; 
 #use "tatom #use "tresidue_buried_fragmented_symbol_implementation_upgrading_item_value_v.ml";; _zerotied_symbol_implementation_upgrading_item_value_v.ml";; 
 #use "tresidue_buried_fragmented_symbol_implementation_upgrading_item_value_v.ml";; 
List.nth smb_cli_l 5;;
 #use "tresidue_buried_fragmented_symbol_implementation_upgrading_item_value_v.ml";; 
List.nth smb_cli_l 6;;
 #use "tresidue_buried_fragmented_symbol_implementation_upgrading_item_value_v.ml";; 
#use "tresidue_buried_fragmented_symbol_implementation_codefile_value_v.ml";; 
List.nth val_cfi 1;;
#use "tresidue_buried_fragmented_symbol_implementation_codefile_value_v.ml";; 
#use "tresidue_symbol_implementation_modules_item_value_v.ml";; 
retrieve_modules_implementation pth_cnt kyl_itm ;;
Itf_v.retrieve_modules_implementation pth_cnt kyl_itm ;;
frm_itm;;
Itf_v.retrieve_modules_implementation pth_cnt kyl_itm ;;
let frm_itm = Itf_v.retrieve kyl_itm;;
val_itm;;
let val_itm = Itv_v.make kyl_itm;;
let frm_itm = Itf_v.retrieve kyl_itm;;
smb_cli_l;;
Itf_v.retrieve_modules_implementation pth_cnt kyl_itm ;;
#use "tresidue_symbol_implementation_modules_item_value_v.ml";; 
let ctt_cpg = Tre_v.root_off_tree ctt_cpg_t;; 
let smb_cpg = Cps_v.bottom_caml_paragraph_symbol_of_bottom_caml_paragraph_context ctt_cpg;;
#use "tresidue_symbol_implementation_modules_item_value_v.ml";; 
Itf_v.retrieve_modules_implementation pth_cnt kyl_itm ;;
Itf_v.retrieve kyl_itm ;;
smb_cpg_l
;;
let smb_cpg_l = Tre_v.list_off_tree frm_itm;;
let smb_cpg_h = Lst_v.first_element_off_list smb_cpg_l;;
let smb_cpg_x = Lst_v.second_element_off_list smb_cpg_l;;
let smb_cpg_c = Lst_v.third_element_off_list smb_cpg_l;;
ctt_cps_l ;;
#use "tatom_symbol_implementation_extracting_item_value_v.ml";; 
#use "tatom_symbol_implementation_extracting_item_value_v.ml";;
smb_ens_l;;
smb_cns_l;;
ctt_cps_l;;
 ecc_l ;;
ecs_l ;;
#use "tatom_symbol_implementation_extracting_item_value_v.ml";;
cnt_nod;;
List.length smb_cli_l
;;
List.length pth_cnt_l;;
#use "tatom_symbol_implementation_extracting_item_value_v.ml";;
mrk_cnt_t;;
q
   #use "tresidue_symbol_implementation_modules_item_value_v.ml";; 
#use "caml_paragraph_modules_definitions_formula_v.ml";;
   #use "tresidue_symbol_implementation_modules_item_value_v.ml";; 
let smb_cpg = Cps_v.bottom_caml_paragraph_symbol_of_bottom_caml_paragraph_context ctt_cpg;;
ctt_cpb ;;
ctt_cpgctt_cps_l;; ;;
ctt_cps_l;;
   #use "tresidue_symbol_implementation_modules_item_value_v.ml";; 
ctt_cps_l;;
#use "tentity_external_n_codefile_list_provider_v.ml";;
smb_pfi_ecx;;
#use "tentity_external_n_codefile_list_provider_v.ml";;
let par_pfi_ecx = Pas_v.entity_external_n_codefile_list_file;;
Pvp_v.provide par_pfi_ecx;;
Pvp_v.provide Pas_v.entity_external_n_codefile_list_file;;
#use "tentity_external_n_codefile_list_provider_v.ml";;
module Cfs_t = Codefile_symbol_t
module Cfs_v = Codefile_symbol_v
module Cnm_v = Constructor_marker_v
module Cnp_v = Constructor_path_v
module Cns_t = Constructor_symbol_t
module Cns_v = Constructor_symbol_v
module Cst_v = Constructor_symbol_tree_v
module Cts_t = Category_symbol_t
module Cts_v = Category_symbol_v
module Dbt_v = Doublet_v
module Ecc_v = Entitycategorycodefile_v
module Ecs_v = Entitycategorysuffix_v
module Erm_v = Error_messages_v
module Its_t = Item_symbol_t
module Its_v = Item_symbol_v
module Kyl_v = Key_list_v
module Lst_v = List_v
module Mrk_v = Marker_v
module Tci_v = Tree_canonical_index_v
module Trp_v = Triplet_v;;
#use "caml_paragraph_context_v.ml";;
  let ecc = Cpc_v.entitycategorycodefile_off_caml_paragraph_context ctt_cpg;;
let ecx_n_cfi_l = Exclp_v.provide ecc ;;
 (List.length smb_cns_l);;
let tci_cns_l =  
    Tci_v.son_tree_canonical_index_list_of_length_of_tree_canonical_index
      (List.length smb_cns_l) [1];;
let mrk_cns_l =
    List.map2 Cnm_v.make smb_cns_l tci_cns_l ;;
let pth_cns_l = 
    List.map (fun m -> Cnp_v.make m pth_cnt) mrk_cns_l ;;
#use "tresidue_symbol_implementation_modules_item_value_v.ml";;
Itf_v.caml_line_symbol_list_off_item_formula frm_itm;;
#use "tresidue_symbol_implementation_modules_item_value_v.ml";;
Cpc_v.external_caml_paragraph_context_list_off_caml_paragraph_context ctt_cpg;;
Reg_v.entry_list;;
Register_v.entry_list;;
#use "tresidue_symbol_implementation_modules_item_value_v.ml";;
Cpc_v.external_caml_paragraph_context_list_off_caml_paragraph_context ctt_cpg;;
#use "entity_external_n_codefile_list_provider_v.ml";;
#use "tentity_external_n_codefile_list_provider_v.ml";;
Reg_v.key_list Exclp_v.entity_external_n_codefile_by_entitycategorycodefile
(* : Exclp_v.Ecc_t.entitycategorycodefile list *);;
#use "tentity_external_n_codefile_list_provider_v.ml";;
(* : Exclp_v.Ecc_t.entitycategorycodefile list *);;
Reg_v.key_list Exclp_v.entity_external_n_codefile_by_entitycategorycodefile;;
#use "tentity_external_n_codefile_list_provider_v.ml";;
Reg_v.entry_list Exclp_v.entity_external_n_codefile_by_entitycategorycodefile;;
#use "tentity_external_n_codefile_list_provider_v.ml";;
Reg_v.key_list Exclp_v.entity_external_n_codefile_by_entitycategorycodefile;;
#use "tentity_external_n_codefile_list_provider_v.ml";;
#use "tresidue_symbol_implementation_modules_item_value_v.ml";;
let smb_cli_l = Itf_v.caml_line_symbol_list_off_item_formula frm_itm;;
let ctt_cpx_l = Cpc_v.external_caml_paragraph_context_list_off_caml_paragraph_context ctt_cpg;;
#use "caml_paragraph_context_v.ml";;
ctt_cpg;;
let kyl_itm = item_key_list_off_caml_paragraph_context ctt_cpg ;;
let pth_cnt = constructor_path_off_caml_paragraph_context ctt_cpg ;;
let ecc = entitycategorycodefile_off_caml_paragraph_context ctt_cpg;;
let ecx_n_cfi_l = Exclp_v.provide ecc ;;
#use "tentity_external_n_codefile_list_provider_v.ml";;
let ecx_n_cfi_l = Exclp_v.provide ecc ;;
#use "tentity_external_n_codefile_list_provider_v.ml";;
 ecc_res;;
Exclp_v.provide ecc_res;;
let ctt_cpx_l = Cpc_v.external_caml_paragraph_context_list_off_caml_paragraph_context ctt_cpg;;
let trp_imc = Cpc_v.symboltriplet_off_caml_paragraph_context ctt_cpg;;
#use "tresidue_symbol_implementation_modules_item_value_v.ml";;
List.nth smb_cpg_l 1;;
List.nth smb_cpg_l 2;;
List.nth smb_cli_l 1;;
List.nth smb_cli_l 2;;
List.nth smb_cli_l 3;;
 List.nth ctt_cpg_l 2;;
#use "tresidue_symbol_implementation_modules_item_value_v.ml";;
List.nth smb_cli_l 1;;
#use "tresidue_symbol_implementation_modules_item_value_v.ml";;
List.nth smb_cli_l 4;;
 smb_cli_l;;
List.nth smb_cli_l 4;;
List.length pth_cnt_l;;
List.length smb_cpg_l;;
List.length smb_cli_l;;
frm_itm;;
let val_itm = Itv_v.make kyl_itm;;
#use "tresidue_symbol_implementation_modules_item_value_v.ml";;
val_itm ;;
let val_itm = Itv_v.make kyl_itm;;
ctt_cpg;;
#use "item_formula_v.ml";;
let smb_cxt = Cps_v.modules_type_external_definitions ctt_cpg;;
let smb_clt = Cps_v.modules_type_local_definitions ctt_cpg;;
ctt_cpg;;
ctt_cps_l;;
let replace_of_predicate_of_element_of_list prd elt lst =
   let rec apply accu = function
   | [] -> raise Not_found
   | h :: t ->
     if prd h
     then List.rev_append accu (elt :: t) 
     else apply (h :: accu) t
   in
   apply [] lst
;;
let l = ;;
#use "tresidue_symbol_implementation_modules_item_value_v.ml";;
#use "tresidue_symbol_implementation_modules_item_value_v.ml";; 
List.nth smb_cli_l 3;;
#use "tresidue_symbol_implementation_modules_item_value_v.ml";; 
List.nth smb_cli_l 4;;
#use "tresidue_symbol_implementation_modules_item_value_v.ml";; 
 #use "taggregate_symbol_implementation_modules_item_value_v.ml";; 
smb_cps_l ;;
ctt_cps_l ;;
 #use "taggregate_symbol_implementation_modules_item_value_v.ml";; 
 ctt_cps_l ;;
 #use "taggregate_symbol_implementation_modules_item_value_v.ml";; 
smb_cli_l ;;
 #use "taggregate_symbol_implementation_modules_item_value_v.ml";; 
ctt_cps ;;
 #use "taggregate_symbol_implementation_modules_item_value_v.ml";; 
frm_itm;;
 #use "taggregate_symbol_implementation_modules_item_value_v.ml";; 
mrk_cnt_t;;
 #use "taggregate_symbol_implementation_modules_item_value_v.ml";; 
ecs_s;;
val_itm ;;
Cpc_v.son_entitycategorycodefile_off_caml_paragraph_context ctt_cps;
itm_val;;
let caml_line_value_off_item_value val_itm =
  Tre_v.list_off_tree val_itm
;;
caml_line_value_off_item_value val_itm;;
ctt_cps_l ;;
List.length ctt_cps_l;;
ecs;;
 #use "taggregate_symbol_implementation_modules_item_value_v.ml";; 
val_itm ;;
 #use "taggregate_symbol_implementation_modules_item_value_v.ml";; 
val_itm ;;
 #use "taggregate_symbol_implementation_modules_item_value_v.ml";; 
val_itm ;;
 #use "taggregate_symbol_implementation_modules_item_value_v.ml";; 
val_itm ;;
 #use "taggregate_symbol_implementation_modules_item_value_v.ml";; 
frm_itm;;
 #use "tatom_zerotied_symbol_implementation_modules_item_value_v.ml";; 
 smb_cnt ;;
smb_cns_l ;;
smb_cps_l ;;
 ctt_cps_l ;;
 #use "tatom_zerotied_symbol_implementation_modules_item_value_v.ml";; 
ctt_cps ;;
 #use "tatom_zerotied_symbol_implementation_modules_item_value_v.ml";; 
mrk_cnt_t;;
Lst_v.first_element_off_list mrk_cnt_l;;
mrk_cnt_t;;
Lst_v.first_element_off_list mrk_cnt_l;;
Lst_v.first_element_of_list mrk_cnt_l;;
Lst_v.first_element_off_list mrk_cnt_l;;
 #use "tatom_zerotied_symbol_implementation_modules_item_value_v.ml";; 
Lst_v.first_element_off_list mrk_cnt_l;;
ctt_cpg;;
ecs_s;;
smb_cli_l ;;
frm_itm;;
 #use "tatom_zerotied_symbol_implementation_modules_item_value_v.ml";; 
#use "item_formula_v.ml";;
let smb_cst_l = 
    son_list Cfs_v.codefile_type Cps_v.modules_type_local_definitions ctt_cpg ;;
let ctt_cps_l = (* son list from upgrading  *)
    Cpc_v.son_caml_paragraph_context_list_of_codefile_symbol_of_caml_paragraph_context 
       smb_cfi ctt_cpg;;
frm_itm;;
 #use "tatom_zerotied_symbol_implementation_modules_item_value_v.ml";; 
#use "item_formula_v.ml";;
frm_itm;;
let smb_cli_l = List.map Cls_v.module_m_eq_m_symbol ctt_cps_l;;
 Itvp_v.provide kyl_itm;;
 #use "tatom_zerotied_symbol_implementation_modules_item_value_v.ml";; 
frm_itm;;
#use "caml_paragraph_context_v.ml";;
 #use "tatom_zerotied_symbol_implementation_modules_item_value_v.ml";; 
#use "caml_paragraph_context_v.ml";;
let pth_cnt = Dbt_v.left_off_doublet ctt_cpg;;
constructor_path_off_caml_paragraph_context ctt_cpg;;
let pth_cns_l = son_constructor_path_list_off_caml_paragraph_context ctt_cpg;;
tresidue_symbol_implementation_modules_item_value_v.ml;;
#use "tresidue_symbol_implementation_modules_item_value_v.ml;;
#use "tresidue_symbol_implementation_modules_item_value_v.ml";;
Tre_v.path_of_node_of_tree mrk_cnt mrk_cnt_t;;
 #use "tatom_zerotied_symbol_implementation_modules_item_value_v.ml";; 
mrk_cnt_l;;
 #use "tatom_zerotied_symbol_implementation_modules_item_value_v.ml";; 
smb_cnt_s_l ;;
 #use "tatom_zerotied_symbol_implementation_modules_item_value_v.ml";; 
smb_cnt_s_l ;;
smb_cnt_u_l ;;
 #use "tatom_zerotied_symbol_implementation_modules_item_value_v.ml";; 
smb_cnt_s_l ;;
*smb_cnt_u_l ;;
smb_cnt_u_l ;;
ecs_st_l ;;
 #use "tatom_zerotied_symbol_implementation_modules_item_value_v.ml";; 
Lst_v.sublist_of_int_of_int_of_lits ecs_st_l 0 ((List.length ecs_st_l)/2);;
Lst_v.sublist_of_int_of_int_of_list ecs_st_l 0 ((List.length ecs_st_l)/2);;
Lst_v.sublist_of_int_of_int_of_list 0 ((List.length ecs_st_l)/2) ecs_st_l;;
smb_cnt_u_l ;;
 #use "tatom_zerotied_symbol_implementation_modules_item_value_v.ml";; 
Lst_v.sublist_of_int_of_int_of_list ((List.length ecs_st_l)/2) (List.length ecs_st_l) ecs_st_l;;
smb_cli_st_l ;;
Lst_v.sublist_of_int_of_int_of_list 0 ((List.length ecs_st_l)/2) smb_cli_st_l ;;
Lst_v.sublist_of_int_of_int_of_list ((List.length ecs_st_l)/2) (List.length ecs_st_l) smb_cli_st_l ;;
frm_itm;;
 #use "tatom_zerotied_symbol_implementation_modules_item_value_v.ml";; 
frm_itm;;
let val_itm = Itvp_v.provide kyl_itm;;
smb_cli_st_l;;
Lst_v.sublist_of_int_of_int_of_list 0 ((List.length ecs_st_l)/2) smb_cli_ut_l ;;
 #use "tatom_zerotied_symbol_implementation_modules_item_value_v.ml";; 
Lst_v.sublist_of_int_of_int_of_list 0 ((List.length smb_cli_st_l)/2) smb_cli_ut_l;;
 #use "tatom_zerotied_symbol_implementation_modules_item_value_v.ml";; 
Lst_v.sublist_of_int_of_int_of_list 0 ((List.length smb_cli_st_l)/2) smb_cli_ut_l ;;
Lst_v.sublist_of_int_of_int_of_list ((List.length smb_cli_st_l)/2) (List.length smb_cli_st_l) smb_cli_ut_l ;;
Lst_v.sublist_of_int_of_int_of_list 0 ((List.length smb_cli_st_l)/2) smb_cli_ui_l ;;
;;
Lst_v.sublist_of_int_of_int_of_list ((List.length smb_cli_st_l)/2) (List.length smb_cli_st_l) smb_cli_ui_l ;;
(List.length smb_cli_st_l;;
(List.length smb_cli_st_l);;
(List.length ecs_st_l);;
ecs_ui_l;;
ecs_ut_l;;
 #use "tatom_zerotied_symbol_implementation_modules_item_value_v.ml";; 
List.map Cls_v.make smb_cli_ui_l;;
List.map Clv_v.make smb_cli_ui_l;;
 #use "tatom_zerotied_symbol_implementation_modules_item_value_v.ml";; 
List.map Clv_v.make smb_cli_ui_l;;
List.map Clv_v.make smb_cli_ut_l;;
List.map Clv_v.make smb_cli_st_l;;
smb_ecs_st_l;;
ecs_st_l;;
List.map Clv_v.make smb_cli_st_l;;
 #use "tatom_zerotied_symbol_implementation_modules_item_value_v.ml";; 
List.map Clv_v.make smb_cli_st_l;;
 #use "tatom_zerotied_symbol_implementation_modules_item_value_v.ml";; 
let smb_cpg_l = Tre_v.list_off_tree frm_itm;; 
let smb_cpg_li = List.nth smb_cpg_l 1;;
let smb_cpg_li = List.nth smb_cpg_l 2;;
let smb_cpg_lt = List.nth smb_cpg_l 3;;
let smb_cpg_lt = List.nth smb_cpg_l 4;;
(
smb_cpg_h
(* : Item_formula_t.item_formula *)
=
Item_formula_t.Cps_t.Heading_symbol
  ([(Item_formula_t.Cps_t.Cpc_t.Cnp_t.Cnm_t.Cns_t.Constructor_proper_symbol
       (Item_formula_t.Cps_t.Cpc_t.Cnp_t.Cnm_t.Cns_t.Constructor_several_symbol
          "atom_zerotied"),
     [1])],
   [("item", "modules"); ("codefile", "implementation");
    ("category", "symbol"); ("entity", "atom_zerotied")])
);;
 #use "tatom_zerotied_symbol_implementation_modules_item_value_v.ml";; 
Lst_v.sublist_of_int_of_int_of_list 0 ((List.length smb_cli_tt_l)/2) smb_cli_tt_l ;;
 #use "tatom_zerotied_symbol_implementation_modules_item_value_v.ml";; 
Lst_v.sublist_of_int_of_int_of_list ((List.length smb_cli_tt_l)/2) (List.length smb_cli_tt_l) smb_cli_tt_l ;;
 #use "tatom_zerotied_symbol_implementation_modules_item_value_v.ml";; 
Lst_v.sublist_of_int_of_int_of_list 0 ((List.length smb_cli_tt_l)/2) smb_cli_ii_l ;;
Lst_v.sublist_of_int_of_int_of_list ((List.length smb_cli_tt_l)/2) (List.length smb_cli_tt_l) smb_cli_ii_l ;;
 #use "tatom_zerotied_symbol_implementation_modules_item_value_v.ml";; 
List.map Clv_v.make smb_cli_ii_l;;
 #use "tatom_zerotied_symbol_implementation_modules_item_value_v.ml";; 
List.map Clv_v.make smb_cli_ti_l;;
 #use "tatom_zerotied_symbol_implementation_modules_item_value_v.ml";; 
Lst_v.right_half_off_list smb_cli_ili_l ;;
Lst_v.left_half_off_list smb_cli_tli_l ;;
List.map Clv_v.make smb_cli_tli_l;;
 #use "tatom_zerotied_symbol_implementation_modules_item_value_v.ml";; 
List.map Clv_v.make smb_cli_tli_l;;
smb_cli_tli_l ;;
Lst_v.right_half_off_list smb_cli_tli_l;;
Lst_v.right_half_off_list smb_cli_tli_l ;;
Lst_v.left_half_off_list smb_cli_tli_l ;;
Lst_v.right_half_off_list smb_cli_tli_l ;;
 #use "tatom_zerotied_symbol_implementation_modules_item_value_v.ml";; 
Lst_v.right_half_off_list smb_cli_tlt_l ;;
 #use "tatom_zerotied_symbol_implementation_modules_item_value_v.ml";; 
List.map Clv_v.make smb_cli_tli_l;;
List.map Clv_v.make smb_cli_tlt_l;;
 #use "tatom_zerotied_symbol_implementation_modules_item_value_v.ml";; 
List.map Clv_v.make smb_cli_tlt_l;;
 #use "tatom_zerotied_symbol_implementation_modules_item_value_v.ml";; 
 #use "taggregate_symbol_implementation_modules_item_value_v.ml";; 
smb_cnt ;;
ctt_cpg;;
smb_cnt_s_l ;;
smb_cnt_u_l ;;
Lst_v.left_half_off_list ecs_st_l;;
Lst_v.right_half_off_list ecs_st_l;;
ecs_st_l;;
Lst_v.left_half_off_list mrk_cnt_l;;
Lst_v.right_half_off_list mrk_cnt_l;;
smb_cnt_s_l ;;
smb_cpg_h;;
smb_cpg_ix;;
smb_cpg_tl;;
smb_cpg_il;;
Lst_v.left_half_off_list smb_cli_ili_l ;;
Lst_v.right_half_off_list smb_cli_ili_l ;;
Lst_v.left_half_off_list smb_cli_tli_l ;;
Lst_v.right_half_off_list smb_cli_tli_l ;;
Lst_v.left_half_off_list smb_cli_tlt_l ;;
Lst_v.right_half_off_list smb_cli_tlt_l ;;
List.map Clv_v.make smb_cli_ili_l;;
List.map Clv_v.make smb_cli_tli_l;;
List.map Clv_v.make smb_cli_tlt_l;;
val_itm ;;
let val_itm = Itvp_v.provide kyl_itm;;
Lst_v.left_half_off_list smb_cli_ili_l ;; #use "tatom_zerotied_symbol_implementation_modules_item_value_v.ml";; 
 #use "tatom_zerotied_symbol_implementation_modules_item_value_v.ml";; 
Lst_v.left_half_off_list smb_cnt_s_l ;;
Lst_v.right_half_off_list smb_cnt_s_l ;;
Lst_v.left_half_off_list smb_cnt_u_l ;;
 #use "tatom_zerotied_symbol_implementation_modules_item_value_v.ml";; 
Lst_v.right_half_off_list smb_cnt_u_l ;;
 #use "tatom_zerotied_symbol_implementation_modules_item_value_v.ml";; 
Lst_v.left_half_off_list mrk_cnt_l;;
 #use "tatom_zerotied_symbol_implementation_modules_item_value_v.ml";; 
Lst_v.left_half_off_list smb_cnt_s_l ;;
 #use "tatom_zerotied_symbol_implementation_modules_item_value_v.ml";; 
Lst_v.left_half_off_list smb_cnt_u_l ;;
 #use "tatom_zerotied_symbol_implementation_modules_item_value_v.ml";; 
Lst_v.right_half_off_list smb_cnt_u_l ;;
 #use "tatom_zerotied_symbol_implementation_modules_item_value_v.ml";; 
Lst_v.left_half_off_list mrk_cnt_l;;
Lst_v.right_half_off_list mrk_cnt_l;;
 #use "tatom_zerotied_symbol_implementation_modules_item_value_v.ml";; 
Lst_v.left_half_off_list smb_cli_ili_l ;;
 #use "tatom_zerotied_symbol_implementation_modules_item_value_v.ml";; 
Lst_v.right_half_off_list smb_cli_ili_l ;;
 #use "tatom_zerotied_symbol_implementation_modules_item_value_v.ml";; 
Lst_v.left_half_off_list smb_cli_tli_l ;;
Lst_v.right_half_off_list smb_cli_tli_l ;;
Lst_v.left_half_off_list smb_cli_tlt_l ;;
 #use "tatom_zerotied_symbol_implementation_modules_item_value_v.ml";; 
Lst_v.right_half_off_list smb_cli_tlt_l ;;
 #use "tatom_zerotied_symbol_implementation_modules_item_value_v.ml";; 
  #use "taggregate_symbol_implementation_modules_item_value_v.ml";; 
trp_imc;;
ctt_cpg;;
  #use "taggregate_symbol_implementation_modules_item_value_v.ml";; 
Lst_v.left_half_off_list ecs_st_l;;
  #use "taggregate_symbol_implementation_modules_item_value_v.ml";; 
Lst_v.left_half_off_list mrk_cnt_l;;
  #use "taggregate_symbol_implementation_modules_item_value_v.ml";; 
Lst_v.right_half_off_list mrk_cnt_l;;
  #use "taggregate_symbol_implementation_modules_item_value_v.ml";; 
Lst_v.left_half_off_list smb_cli_ili_l ;;
Lst_v.right_half_off_list smb_cli_ili_l ;;
Lst_v.left_half_off_list smb_cli_ili_l ;;
  #use "taggregate_symbol_implementation_modules_item_value_v.ml";; 
Lst_v.left_half_off_list smb_cli_tli_l ;;
  #use "taggregate_symbol_implementation_modules_item_value_v.ml";; 
Lst_v.left_half_off_list smb_cli_tlt_l ;;
  #use "taggregate_symbol_implementation_modules_item_value_v.ml";; 
#use "tresidue_symbol_implementation_modules_item_value_v.ml";; 
 #use "tresidue_symbol_implementation_modules_item_value_v.ml";; 
smb_cnt ;;
 #use "tresidue_symbol_implementation_modules_item_value_v.ml";; 
ctt_cpg;;
 #use "tresidue_symbol_implementation_modules_item_value_v.ml";; 
smb_cnt_s_l ;;
Lst_v.left_half_off_list smb_cnt_s_l ;;
Lst_v.right_half_off_list smb_cnt_s_l ;;
;;
Lst_v.right_half_off_list smb_cnt_s_l ;;
Lst_v.left_half_off_list smb_cnt_u_l ;;
Lst_v.right_half_off_list smb_cnt_u_l ;;
 #use "tresidue_symbol_implementation_modules_item_value_v.ml";; 
Lst_v.left_half_off_list ecs_st_l;;
Lst_v.right_half_off_list ecs_st_l;;
 #use "tresidue_symbol_implementation_modules_item_value_v.ml";; 
Lst_v.left_half_off_list mrk_cnt_l;;
Lst_v.right_half_off_list mrk_cnt_l;;
Lst_v.right_half_off_list (Lst_v.right_half_off_list mrk_cnt_l);;
Lst_v.left_half_off_list (Lst_v.right_half_off_list mrk_cnt_l);;
Lst_v.right_half_off_list (Lst_v.left_half_off_list mrk_cnt_l);;
Lst_v.left_half_off_list (Lst_v.left_half_off_list mrk_cnt_l);;
 #use "tresidue_symbol_implementation_modules_item_value_v.ml";; 
Lst_v.right_half_off_list (Lst_v.right_half_off_list mrk_cnt_l);;
smb_cpg_h;;
 #use "tresidue_symbol_implementation_modules_item_value_v.ml";; 
smb_cpg_ix;;
smb_cpg_tl;;
 #use "tresidue_symbol_implementation_modules_item_value_v.ml";; 
smb_cpg_h;;
 #use "tresidue_symbol_implementation_modules_item_value_v.ml";; 
smb_cpg_tl;;
smb_cpg_il;;
 #use "tresidue_symbol_implementation_modules_item_value_v.ml";; 
Lst_v.left_half_off_list smb_cli_ili_l ;;
 #use "tresidue_symbol_implementation_modules_item_value_v.ml";; 
Lst_v.right_half_off_list smb_cli_ili_l ;;
Lst_v.left_half_off_list smb_cli_tli_l ;;
Lst_v.right_half_off_list smb_cli_tli_l ;;
Lst_v.left_half_off_list smb_cli_tlt_l ;;
Lst_v.right_half_off_list smb_cli_tlt_l ;;
List.map Clv_v.make smb_cli_ili_l;;
List.map Clv_v.make smb_cli_tli_l
(* : Caml_line_value_t.caml_line_v;;
;;
List.map Clv_v.make smb_cli_tli_l;;
List.map Clv_v.make smb_cli_tlt_l;;
let val_itm = Itvp_v.provide kyl_itm;;
 #use "tresidue_symbol_implementation_modules_item_value_v.ml";; 
 #use "taggregate_symbol_implementation_modules_item_value_v.ml";; 
Lst_v.left_half_off_list smb_cli_ili_l ;;
Lst_v.right_half_off_list smb_cli_ili_l ;;
 #use "taggregate_symbol_implementation_modules_item_value_v.ml";; 
List.map Clv_v.make smb_cli_ili_l;;
  #use "tsegment_buried_symbol_implementation_modules_item_value_v.ml";; 
Lst_v.left_half_off_list smb_cnt_s_l ;;
Lst_v.right_half_off_list smb_cnt_s_l ;;
Lst_v.left_half_off_list smb_cnt_u_l ;;
Lst_v.right_half_off_list smb_cnt_u_l ;;
Lst_v.left_half_off_list ecs_st_l;;
Lst_v.right_half_off_list ecs_st_l;;
Lst_v.left_half_off_list (Lst_v.left_half_off_list mrk_cnt_l);;
Lst_v.right_half_off_list (Lst_v.left_half_off_list mrk_cnt_l);;
Lst_v.left_half_off_list (Lst_v.right_half_off_list mrk_cnt_l);;
Lst_v.right_half_off_list (Lst_v.right_half_off_list mrk_cnt_l);;
smb_cpg_h;;
 #use "taggregate_symbol_implementation_modules_item_value_v.ml";; 
Lst_v.left_half_off_list smb_cli_tli_l ;;
 #use "taggregate_symbol_implementation_modules_item_value_v.ml";; 
smb_cnt_t ;;
 #use "taggregate_symbol_implementation_modules_item_value_v.ml";; 
List.map Clv_v.make smb_cli_ili_l;;
List.map Clv_v.make smb_cli_tli_l;;
 #use "taggregate_symbol_implementation_modules_item_value_v.ml";; 
 #use "taggregate_symbol_implementation_modules_item_value_v.ml";; Lst_v.right_half_off_list smb_cli_tlt_l ;;
Lst_v.right_half_off_list smb_cli_tlt_l ;;
 #use "taggregate_symbol_implementation_modules_item_value_v.ml";; 
List.map Clv_v.make smb_cli_ili_l;;
 #use "taggregate_symbol_implementation_modules_item_value_v.ml";; 
List.map Clv_v.make smb_cli_ili_l;;
ecs_st_l;;
ecs_si_l;;
ecs_ui_l ;;
ecs_ut_l ;;
ctt_pgs_l;;
ctt_cpg_s_l;;
let ctt_cpg_s_l = Tre_v.topsonnode_list_off_tree ctt_cpg_t;;
ctt_cpg_s_l;;
let ctt_cpg_u_l = Cpc_v.up_caml_paragraph_context_list_off_caml_paragraph_context ctt_cpg;;
Itf_v.retrieve_modules_codefile_type ctt_cpg;;
 #use "taggregate_symbol_implementation_modules_item_value_v.ml";; 
Tre_v.make_of_leaf (Cps_v.modules_type_definitions_local ctt_cpg);;
Tre_v.make_of_leaf (Cps_v.modules_implementation_definitions_local ctt_cpg);;
Tre_v.make_of_leaf (Cps_v.modules_implementation_local_definitions_local ctt_cpg);;
 #use "taggregate_symbol_implementation_modules_item_value_v.ml";; 
Tre_v.make_of_leaf (Cps_v.modules_type_definitions_local ctt_cpg);;
Tre_v.make_of_leaf (Cps_v.modules_implementation_definitions_local ctt_cpg);;
 #use "taggregate_symbol_implementation_modules_item_value_v.ml";; 
Lst_v.right_half_off_list smb_cli_ili_l ;;
 #use "taggregate_symbol_implementation_modules_item_value_v.ml";; 
List.map Clv_v.make smb_cli_ili_l;;
Est_v.entityson_symbol_list_of_datastructure_entityname "aggregate";;
module Est_v = Entity_symbol_tree_v
;;
Est_v.entityson_symbol_list_of_datastructure_entityname "aggregate";;
 #use "taggregate_symbol_implementation_modules_item_value_v.ml";; 
ctt_cpg_s_l;;
 #use "taggregate_symbol_implementation_modules_item_value_v.ml";; 
ctt_cpg_s_l;;
let smb_cnt_t = Cstp_v.constructor_symbol_tree_of_entity_symbol smb_ent;;
let smb_cnt_t = Cst_v.constructor_symbol_tree_of_entity_symbol smb_ent;;
Entity_data_provider_v.provide "aggregate";;
module End_v = Entity_data_v;;
let knd_dst = End_v.datastructure_kind_of_entityname nam_ent ;;
 #use "taggregate_symbol_implementation_modules_item_value_v.ml";; 
mrk_cnt_t ;;
ctt_cpg_s_l;;
 #use "taggregate_symbol_implementation_modules_item_value_v.ml";; 
smb_cnt_s_l ;;
smb_cnt_u_l ;;
Lst_v.left_half_off_list ecs_st_l;;
 #use "taggregate_symbol_implementation_modules_item_value_v.ml";; 
Lst_v.left_half_off_list ecs_st_l;;
Lst_v.right_half_off_list ecs_st_l;;
 #use "taggregate_symbol_implementation_modules_item_value_v.ml";; 
Lst_v.left_half_off_list mrk_cnt_l;;
Lst_v.right_half_off_list mrk_cnt_l;;
 #use "taggregate_symbol_implementation_modules_item_value_v.ml";; 
ecs_st_l;;
 #use "taggregate_symbol_implementation_modules_item_value_v.ml";; 
ecs_si_l;;
ecs_ui_l ;;
ecs_ut_l ;;
 #use "taggregate_symbol_implementation_modules_item_value_v.ml";; 
Lst_v.left_half_off_list smb_cli_ili_l ;;
 #use "taggregate_symbol_implementation_modules_item_value_v.ml";; 
Lst_v.right_half_off_list smb_cli_ili_l ;;
Lst_v.left_half_off_list smb_cli_tli_l ;;
Lst_v.right_half_off_list smb_cli_tli_l ;;
 #use "taggregate_symbol_implementation_modules_item_value_v.ml";; 
Lst_v.left_half_off_list smb_cli_tlt_l ;;
Lst_v.right_half_off_list smb_cli_tlt_l ;;
List.map Clv_v.make smb_cli_ili_l;;
val_itm ;;
*let val_itm = Itvp_v.provide kyl_itm;;
let val_itm = Itvp_v.provide kyl_itm;;
List.map Clv_v.make smb_cli_ili_l;;ecs_ui_l;;
ecs_ui_l;;
Cpc_v.top_constructor_symbol_off_caml_paragraph_context ctt_cpg;;
 let smb_cnt = Cpc_v.top_constructor_symbol_off_caml_paragraph_context ctt_cpg;;
let smb_ent = Cns_v.entity_symbol_off_constructor_symbol smb_cnt;;
 #use "taggregate_symbol_implementation_modules_item_value_v.ml";; 
ecs_ui_l;;
*let val_itm = Itvp_v.provide kyl_itm;;
let val_itm = Itvp_v.provide kyl_itm;;
List.map Clv_v.make smb_cli_tlt_l;;
List.map Clv_v.make smb_cli_ili_l;;
 #use "taggregate_symbol_implementation_modules_item_value_v.ml";; 
List.map Clv_v.make smb_cli_ili_l;;
 #use "taggregate_symbol_implementation_modules_item_value_v.ml";; 
List.map Clv_v.make smb_cli_ili_l;;
Lst_v.left_half_off_list smb_cli_ili_l ;;
 #use "taggregate_symbol_implementation_modules_item_value_v.ml";; 
Lst_v.right_half_off_list smb_cli_ili_l ;;
 #use "taggregate_symbol_implementation_modules_item_value_v.ml";; 
Lst_v.right_half_off_list smb_cli_ili_l ;;
 #use "taggregate_symbol_implementation_modules_item_value_v.ml";; 
Lst_v.left_half_off_list smb_cli_tli_l ;;
(
List.map Clv_v.make smb_cli_tlt_l
(* : Caml_line_value_t.caml_line_value list *)
=
["module Dbt_t = Doublet_t";
 "module Ord_p = Ordinal_p"]
);;
List.map Clv_v.make smb_cli_tli_l;;
let ecs_st_l = Cpmdf_v.anyson_entitycategorysuffix_list_of_category_symbol_of_codefile_symbol_of_topconstructor_symbol smb_cat Cfs_v.codefile_type smb_cnt;;
 #use "taggregate_symbol_implementation_modules_item_value_v.ml";; 
#use "caml_paragraph_modules_definitions_formula_v.ml";;
let smb_cnt_t = Cstp_v.provide smb_cnt;;
let smb_cnt_s_l =
    Cst_v.anyson_constructor_symbol_list_of_constructor_symbol_tree smb_cnt_t;;
let smb_ent_s_l =
    List.map Cns_v.entity_symbol_off_constructor_symbol smb_cnt_s_l;;
let smb_cfi = Cfs_v.codefile_type;;
let smb_cat = Cpc_v.category_symbol_off_caml_paragraph_context ctt_cpg;;
let ecc_l =
    List.map (fun s -> Ecc_v.make s smb_cat smb_cfi) smb_ent_s_l;;
smb_cfi;;
 #use "taggregate_symbol_implementation_modules_item_value_v.ml";; 
let val_itm = Itvp_v.provide kyl_itm;;
let oc = Fio_v.open_write_of_string_of_string_of_file_name nam_cod "oc" nam_fil_itm;;
Itv_v.write oc val_itm;;
close_out oc;
 #use "taggregate_symbol_implementation_modules_item_value_v.ml";; 
let val_itm = Itvp_v.provide kyl_itm;;
let oc = Fio_v.open_write_of_string_of_string_of_file_name nam_cod "oc" nam_fil_itm;;
Itv_v.write oc val_itm;;
close_out oc;
 #use "taggregate_symbol_implementation_modules_item_value_v.ml";; 
let oc = Fio_v.open_write_of_string_of_string_of_file_name nam_cod "oc" nam_fil_itm;;
Itv_v.write oc val_itm;;
close_out oc;
let val_itm = Itvp_v.provide kyl_itm;;
let red_t = frm_item;;
let red_t = frm_itm;;
let smb_cpg_l = Tre_v.list_off_tree red_t ;;
let smb_cpg_l = Lst_v.once_list_of_list (Tre_v.list_off_tree red_t) in
;;
let smb_cpg_l = Lst_v.once_list_of_list (Tre_v.list_off_tree red_t) ;;
 #use "taggregate_symbol_implementation_modules_item_value_v.ml";; 
let val_itm = Itvp_v.provide kyl_itm;;
 #use "taggregate_symbol_implementation_modules_item_value_v.ml";; 
let val_itm = Itvp_v.provide kyl_itm;;
frm_itm;;
#use "item_formula_v.ml";;
let red_l = caml_paragraph_symbol_list_redundant ctt_cpg;;
let unr_l = Lst_v.once_list_of_list red_l;;
List.length red_l;;
List.length unr_l;;
Lst_v.once_list_of_list unr_l;;
caml_paragraph_symbol_datastructure ctt_cpg;;
caml_paragraph_symbol_list_nondatastructure ctt_cpg;;
caml_paragraph_symbol_list_codefile_implementation ctt_cpg;;
 #use "taggregate_symbol_implementation_modules_item_value_v.ml";; 
let val_itm = Itvp_v.provide kyl_itm;;
 #use "taggregate_symbol_implementation_modules_item_value_v.ml";; 
let val_itm = Itvp_v.provide kyl_itm;;
 #use "taggregate_symbol_implementation_modules_item_value_v.ml";; 
Lst_v.left_half_off_list ecs_st_l;;
Lst_v.right_half_off_list ecs_st_l;;
 #use "taggregate_symbol_implementation_modules_item_value_v.ml";; 
smb_cpg_ix;;
 #use "taggregate_symbol_implementation_modules_item_value_v.ml";; 
smb_cpg_tl;;
ecs_st_l;;
 #use "taggregate_symbol_implementation_modules_item_value_v.ml";; 
ecs_ut_l 
(* : Entit;;
ecs_ut_l ;;
 #use "taggregate_symbol_implementation_modules_item_value_v.ml";; 
smb_cpg_il;;
 #use "taggregate_symbol_implementation_modules_item_value_v.ml";; 
Lst_v.left_half_off_list smb_cli_tli_l ;;
 #use "taggregate_symbol_implementation_modules_item_value_v.ml";; 
Lst_v.right_half_off_list smb_cli_tli_l ;;
 #use "taggregate_symbol_implementation_modules_item_value_v.ml";; 
Lst_v.left_half_off_list smb_cli_tlt_l ;;
 #use "taggregate_symbol_implementation_modules_item_value_v.ml";; 
Lst_v.right_half_off_list smb_cli_tlt_l ;;
 #use "taggregate_symbol_implementation_modules_item_value_v.ml";; 
List.map Clv_v.make smb_cli_tli_l;;
 #use "taggregate_symbol_implementation_modules_item_value_v.ml";; 
List.map Clv_v.make smb_cli_tlt_l;;
 #use "taggregate_symbol_implementation_modules_item_value_v.ml";; 
Lst_v.right_half_off_list smb_cli_tlt_l ;;
 #use "taggregate_symbol_implementation_modules_item_value_v.ml";; 
#use "tatom_zerotied_symbol_implementation_modules_item_value_v.ml";;
let val_itm = Itvp_v.provide kyl_itm;;
(
val_itm 
(* : Item_value_t.item_value *)
=
  Item_value_t.Tre_t.Node (["(** {6 Modules.} *)"],
   [Item_value_t.Tre_t.Leaf [];
    Item_value_t.Tre_t.Leaf
     ["module A0rs_t = Atom_zerotied_raregas_symbol_t";
      "module A0as_t = Atom_zerotied_anion_symbol_t";
      "module A0cs_t = Atom_zerotied_cation_symbol_t";
      "module Has_t = Halfbridge_symbol_t";
      "module A0am1s_t = Atom_zerotied_anion_minus_one_symbol_t";
      "module A0am2s_t = Atom_zerotied_anion_minus_two_symbol_t";
      "module A0cp1s_t = Atom_zerotied_cation_plus_one_symbol_t";
      "module A0cp2s_t = Atom_zerotied_cation_plus_two_symbol_t";
      "module A0cp3s_t = Atom_zerotied_cation_plus_three_symbol_t"];
    Item_value_t.Tre_t.Leaf
     ["module A0rs_v = Atom_zerotied_raregas_symbol_v";
      "module A0as_v = Atom_zerotied_anion_symbol_v";
      "module A0cs_v = Atom_zerotied_cation_symbol_v";
      "module Has_v = Halfbridge_symbol_v";
      "module A0am1s_v = Atom_zerotied_anion_minus_one_symbol_v";
      "module A0am2s_v = Atom_zerotied_anion_minus_two_symbol_v";
      "module A0cp1s_v = Atom_zerotied_cation_plus_one_symbol_v";
      "module A0cp2s_v = Atom_zerotied_cation_plus_two_symbol_v";
      "module A0cp3s_v = Atom_zerotied_cation_plus_three_symbol_v"]])
);;
smb_cpg_ix;;
#use "tatom_zerotied_symbol_implementation_modules_item_value_v.ml";;
smb_cpg_il;;
#use "tatom_zerotied_symbol_implementation_modules_item_value_v.ml";;
Lst_v.left_half_off_list smb_cli_ili_l ;;
#use "tatom_zerotied_symbol_implementation_modules_item_value_v.ml";;
Lst_v.right_half_off_list smb_cli_ili_l ;;
Lst_v.left_half_off_list smb_cli_tli_l ;;
Lst_v.right_half_off_list smb_cli_tli_l ;;
Lst_v.left_half_off_list smb_cli_tlt_l ;;
Lst_v.right_half_off_list smb_cli_tlt_l ;;
List.map Clv_v.make smb_cli_ili_l;;
List.map Clv_v.make smb_cli_tli_l;;
List.map Clv_v.make smb_cli_tlt_l;;
#use "tatom_zerotied_symbol_implementation_modules_item_value_v.ml";;
val_itm ;;
#use "tatom_zerotied_symbol_implementation_modules_item_value_v.ml";;
#use "tresidue_symbol_implementation_modules_item_value_v.ml";; 
smb_cpg_ix;;
#use "tresidue_symbol_implementation_modules_item_value_v.ml";; 
smb_cpg_il;;
#use "tresidue_symbol_implementation_modules_item_value_v.ml";; 
Lst_v.left_half_off_list smb_cli_ili_l ;;
#use "tresidue_symbol_implementation_modules_item_value_v.ml";; 
Lst_v.right_half_off_list smb_cli_ili_l ;;
Lst_v.left_half_off_list smb_cli_tli_l ;;
Lst_v.right_half_off_list smb_cli_tli_l ;;
#use "tresidue_symbol_implementation_modules_item_value_v.ml";; 
Lst_v.left_half_off_list smb_cli_tlt_l ;;
Lst_v.right_half_off_list smb_cli_tlt_l ;;
#use "tresidue_symbol_implementation_modules_item_value_v.ml";; 
List.map Clv_v.make smb_cli_ili_l;;
List.map Clv_v.make smb_cli_tli_l;;
List.map Clv_v.make smb_cli_tlt_l;;
#use "tresidue_symbol_implementation_modules_item_value_v.ml";; 
val_itm ;;
let val_itm = Itvp_v.provide kyl_itm;;
#use "tresidue_symbol_implementation_modules_item_value_v.ml";; 
#use "taggregate_constructor_symbol_v.ml";; 
 #use "taggregate_constructor_symbol_v.ml";; 
Cst_v.contructorson_symbol_list_of_entity_proper_datastructure_symbol nam_ent;;
 #use "taggregate_constructor_symbol_v.ml";; 
smb_ent_t ;;
smb_cnt_t ;;
smb_cnt_ts_l;;
smb_cnt_as_l;;
 #use "taggregate_constructor_symbol_v.ml";; 
 #use "taggregate_symbol_implementation_extracting_item_value_v.ml";; 
smb_ens_l;;
 #use "taggregate_symbol_implementation_extracting_item_value_v.ml";; 
 #use "taggregate_symbol_implementation_extracting_item_value_v.ml";;   #use "taggregate_symbol_implementation_extracting_heading_caml_paragraph_value_v.ml";; 
  #use "taggregate_symbol_implementation_extracting_heading_caml_paragraph_value_v.ml";; 
smb_cpg ;;
  #use "taggregate_symbol_implementation_extracting_heading_caml_paragraph_value_v.ml";; 
smb_ens_l;;
smb_cns_l;;
ctt_cps_l ;;
ecc_l ;;
ecs_l;;
ctt_cpg_l;;
  #use "taggregate_symbol_implementation_extracting_heading_caml_paragraph_value_v.ml";; 
ctt_cpg_l;;
  #use "taggregate_symbol_implementation_extracting_heading_caml_paragraph_value_v.ml";; 
frm_cpg ;;
  #use "taggregate_symbol_implementation_extracting_heading_caml_paragraph_value_v.ml";; 
Aba_v.abbreviation_argument_of_entity_symbol (List.nth smb_ens_l 0);;
Aba_v.abbreviation_argument_of_entity_symbol (List.nth smb_ens_l 1);;
  #use "taggregate_symbol_implementation_extracting_heading_caml_paragraph_value_v.ml";; 
Abm_v.abbreviation_module_of_entity_symbol (List.nth smb_ens_l 0);;
let val_cpg = Cpv_v.make smb_cpg;;
  #use "taggregate_symbol_implementation_extracting_heading_caml_paragraph_value_v.ml";; 
nam_fil_cpg;;
  #use "taggregate_symbol_implementation_extracting_heading_caml_paragraph_value_v.ml";; 
 #use "taggregate_symbol_implementation_extracting_item_value_v.ml";; 
mrk_cnt_t ;;
 #use "taggregate_symbol_implementation_extracting_item_value_v.ml";; 
ctt_cpg_t ;;
 #use "taggregate_symbol_implementation_extracting_item_value_v.ml";; 
smb_cpg_t ;;
 #use "taggregate_symbol_implementation_extracting_item_value_v.ml";; 
smb_ens_l;;
smb_cns_l;;
ctt_cps_l ;;
ecc_l ;;
ecs_l ;;
frm_itm;;
 #use "taggregate_symbol_implementation_extracting_item_value_v.ml";; 
g #use "taggregate_symbol_implementation_extracting_item_value_v.ml";; 
#use "taggregate_symbol_implementation_extracting_item_value_v.ml";; 
#use "
  #use "taggregate_symbol_implementation_naming_item_value_v.ml";; 
mrk_cnt_t;;
ctt_cpg_t ;;
  #use "taggregate_symbol_implementation_naming_item_value_v.ml";; 
smb_cpg_t ;;
  #use "taggregate_symbol_implementation_naming_item_value_v.ml";; 
smb_ens_l;;
smb_cns_l;;
ctt_cps_l ;;
ecc_l;;
ecs_l;;
frm_itm;;
let val_itm = Itv_v.make kyl_itm;;
  #use "taggregate_symbol_implementation_querying_item_value_v.ml";; 
mrk_cnt_t ;;
  #use "taggregate_symbol_implementation_querying_item_value_v.ml";; 
smb_cpg_t ;;
  #use "taggregate_symbol_implementation_querying_item_value_v.ml";; 
frm_itm;;
  #use "taggregate_symbol_implementation_querying_item_value_v.ml";; 
val_itm ;;
  #use "taggregate_symbol_implementation_querying_item_value_v.ml";; 
val_itm ;;
  #use "taggregate_symbol_implementation_querying_item_value_v.ml";; 
#use "taggregate_symbol_implementation_upgrading_item_value_v.ml";; 
 #use "tsegment_buried_symbol_implementation_modules_item_value_v.ml";; 
Lst_v.right_half_off_list (Lst_v.left_half_off_list mrk_cnt_l);;
 #use "tsegment_buried_symbol_implementation_modules_item_value_v.ml";; 
smb_cpg_ix;;
 #use "tsegment_buried_symbol_implementation_modules_item_value_v.ml";; 
smb_cpg_il;;
Lst_v.left_half_off_list smb_cli_ili_l ;;
 #use "tsegment_buried_symbol_implementation_modules_item_value_v.ml";; 
Lst_v.left_half_off_list smb_cli_tli_l ;;
Lst_v.right_half_off_list smb_cli_ili_l ;;
 #use "tsegment_buried_symbol_implementation_modules_item_value_v.ml";; 
Lst_v.right_half_off_list smb_cli_tli_l ;;
Lst_v.left_half_off_list smb_cli_tlt_l ;;
Lst_v.right_half_off_list smb_cli_tlt_l ;;
List.map Clv_v.make smb_cli_ili_l;;
List.map Clv_v.make smb_cli_tli_l;;
List.map Clv_v.make smb_cli_tlt_l;;
 #use "tsegment_buried_symbol_implementation_modules_item_value_v.ml";; 
  #use "tatom_symbol_type_modules_item_value_v.ml";; 
frm_itm ;;
  #use "tatom_symbol_type_modules_item_value_v.ml";; 
#use "tatom_symbol_implementation_modules_item_value_v.ml";;
smb_cnt ;;
ctt_cpg;;
ctt_cpg_s_l;;
Lst_v.left_half_off_list ctt_cpg_s_l;;
Lst_v.right_half_off_list ctt_cpg_s_l;;
smb_cnt_s_l ;;
smb_cnt_u_l ;;
#use "tatom_symbol_implementation_modules_item_value_v.ml";;
let val_itm = Itvp_v.provide kyl_itm;;
tatom_symbol_type_modules_item_value_v.ml
;;
#use "tatom_symbol_type_modules_item_value_v.ml";;
(
frm_itm 
(* : Item_formula_t.item_formula *)
= 
Item_formula_t.Tre_t.Node
 (Item_formula_t.Cps_t.Heading_symbol
   ([(Item_formula_t.Cps_t.Cpc_t.Cnp_t.Cnm_t.Cns_t.Constructor_proper_symbol
       (Item_formula_t.Cps_t.Cpc_t.Cnp_t.Cnm_t.Cns_t.Constructor_several_symbol
         "atom"),
      [1])],
    [("item", "modules"); ("codefile", "type"); ("category", "symbol");
     ("entity", "atom")]),
 [Item_formula_t.Tre_t.Leaf
   (Item_formula_t.Cps_t.Modules_local_definitions_symbol
     ([(Item_formula_t.Cps_t.Cpc_t.Cnp_t.Cnm_t.Cns_t.Constructor_proper_symbol
         (Item_formula_t.Cps_t.Cpc_t.Cnp_t.Cnm_t.Cns_t.Constructor_several_symbol
           "atom"),
        [1])],
      [("item", "modules"); ("codefile", "type"); ("category", "symbol");
       ("entity", "atom")]))])
);;
frm_itm ;;
val_itm ;;
#use "tatom_symbol_type_modules_item_value_v.ml";;
#use "tpolyproline_symbol_type_typing_caml_paragraph_value_v.ml";; 
let val_cpg = Cpv_v.make smb_cpg;;
#use "taggregate_symbol_type_typing_item_value_v.ml";; 
mrk_cnt_t;;
pth_cnt_t ;;
let frm_itm = Itf_v.retrieve kyl_itm;;
#use "taggregate_symbol_implementation_extracting_item_value_v.ml";; 
pth_cnt_t ;;
let frm_itm = Itf_v.retrieve kyl_itm;;
 #use "tpolyproline_symbol_type_typing_caml_paragraph_value_v.ml";; 
smb_cns_l;;
#use "taggregate_symbol_implementation_modules_item_value_v.ml";; 
Lst_v.left_half_off_list smb_cli_tlt_l 
;;
 #use "tatom_zerotied_symbol_implementation_modules_item_value_v.ml";; 
Lst_v.left_half_off_list smb_cli_tlt_l 
;;
List.length smb_cli_ili_l ;;
smb_cli_ili_l ;;
List.length smb_cli_tli_l ;;
smb_cli_tli_l ;;
 (
List.length smb_cli_tlt_l 
=
9
);;
List.length smb_cli_tlt_l 
;;
smb_cli_tlt_l ;;
List.length smb_cli_ili_l ;;
smb_cli_ili_l;;
List.map Clv_v.make smb_cli_ili_l;;
 #use "tatom_zerotied_symbol_implementation_modules_item_value_v.ml";; 
List.length smb_cli_ili_l ;;
 #use "tatom_zerotied_symbol_implementation_modules_item_value_v.ml";; 
List.map Clv_v.make smb_cli_tlt_l;;
 #use "tatom_zerotied_symbol_implementation_modules_item_value_v.ml";; 
smb_cli_tli_l ;;
 #use "tatom_zerotied_symbol_implementation_modules_item_value_v.ml";; 
List.map Clv_v.make smb_cli_tli_l;;
 #use "tatom_zerotied_symbol_implementation_modules_item_value_v.ml";; 
#use "taggregate_symbol_implementation_modules_item_value_v.ml";; 
Lst_v.right_half_off_list ecs_st_l;;
#use "taggregate_symbol_implementation_modules_item_value_v.ml";; 
 #use "tatom_symbol_implementation_modules_item_value_v.ml";; 
List.length smb_cnt_s_l ;;
Lst_v.left_half_off_list smb_cnt_s_l ;;
let val_itm = Itvp_v.provide kyl_itm;;
List.length smb_cli_ili_l ;;
List.length smb_cli_tlt_l ;;
 #use "tatom_symbol_implementation_modules_item_value_v.ml";; 
 #use "tresidue_symbol_implementation_modules_item_value_v.ml";;
List.length smb_cnt_s_l ;;
List.length smb_cli_tli_l ;;
List.length smb_cli_ili_l ;;
 #use "tresidue_symbol_implementation_modules_item_value_v.ml";;
List.length smb_cli_tlt_l ;;
let val_itm = Itvp_v.provide kyl_itm;;
 #use "tresidue_symbol_implementation_modules_item_value_v.ml";;
 #use "tsegment_symbol_implementation_modules_item_value_v.ml";;
#use "tsegment_symbol_implementation_modules_item_value_v.ml";; 
#use "tsegment_buried_symbol_implementation_modules_item_value_v.ml";; 
List.length smb_cnt_s_l ;;
List.length smb_cli_tli_l ;;
List.length smb_cli_tlt_l ;;
#use "tsegment_symbol_implementation_modules_item_value_v.ml";; 
#use "tsegment_buried_symbol_implementation_modules_item_value_v.ml";; 
  #use "taggregate_symbol_implementation_modules_item_value_v.ml";; 
 smb_cnt ;;
  #use "taggregate_symbol_implementation_modules_item_value_v.ml";; 
ctt_cpg;;
List.length smb_cnt_s_l ;;
List.length smb_cli_tli_l ;;
List.length smb_cli_ili_l ;;
  #use "taggregate_symbol_implementation_modules_item_value_v.ml";; 
List.length smb_cli_tlt_l ;;
let val_itm = Itvp_v.provide kyl_itm;;
  #use "taggregate_symbol_implementation_modules_item_value_v.ml";; 
 #use "tatom_symbol_type_modules_item_value_v.ml";; 
#use "taggregate_symbol_type_modules_item_value_v.ml";; 
frm_itm ;;
val_itm ;;
#use "taggregate_symbol_type_modules_item_value_v.ml";; 
smb_cpg_l;;
#use "taggregate_symbol_type_modules_item_value_v.ml";; 
List.length smb_cli_tli_l ;;
List.length smb_cli_ili_l ;;
#use "taggregate_symbol_type_modules_item_value_v.ml";; 
nam_fil_itm;;
#use "taggregate_symbol_type_modules_item_value_v.ml";; 
val_itm ;;
smb_cnt_s_l ;;
smb_cnt_u_l ;;
ecs_st_l;;
List.length smb_cnt_st_l ;;
List.length ecs_st_l ;;
mrk_cnt_l;;
smb_cpg_l;;
smb_cli_ili_l ;;
smb_cli_tli_l ;;
smb_cli_tlt_l ;;
List.map Clv_v.make smb_cli_ili_l;;
List.map Clv_v.make smb_cli_tli_l;;
List.map Clv_v.make smb_cli_tlt_l;;
Itf_v.caml_paragraph_symbol_datastructure ctt_cpg;;
#use "item_formula_v.ml";;
caml_paragraph_symbol_datastructure ctt_cpg;;
smb_cli_tlt_l ;;
#use "taggregate_symbol_implementation_modules_item_value_v.ml";; 
List.length smb_cpg_l;;
#use "taggregate_symbol_implementation_modules_item_value_v.ml";; 
List.length smb_cli_tli_l ;;
List.length smb_cli_tlt_l;;
#use "taggregate_symbol_implementation_modules_item_value_v.ml";; 
List.length smb_cli_ili_l ;;
#use "taggregate_symbol_implementation_modules_item_value_v.ml";; 
 caml_paragraph_symbol_datastructure ctt_cpg;;
caml_paragraph_symbol_list_redundant ctt_cpg;;
#use "taggregate_symbol_implementation_modules_item_value_v.ml";; 
#use "taggregate_symbol_type_modules_item_value_v.ml";; 
smb_cli_tlt_l ;;
ecs_st_l;;
#use "taggregate_symbol_type_modules_item_value_v.ml";; 
smb_cli_tlt_l ;;
smb_cli_tlt_l ;;ecs_st_l ;;
let smb_cnt_as_l =
    Cst_v.anyson_constructor_symbol_list_of_constructor_symbol_tree smb_cnt_t;;
let smb_ent_as_l =
    List.map Cns_v.entity_symbol_off_constructor_symbol smb_cnt_as_l;;
let ecc_l =
    List.map (fun s -> Ecc_v.make s smb_cat smb_cfi) smb_ent_as_l;;
#use "item_formula_v.ml";;
    List.map (fun s -> Ecc_v.make s smb_cat smb_cfi) smb_ent_as_l;;
#use "caml_paragraph_modules_definitions_formula_v.ml";;
    List.map (fun s -> Ecc_v.make s smb_cat smb_cfi) smb_ent_as_l;;
anyson_entitycategorysuffix_list_of_category_symbol_of_codefile_symbol_of_topconstructor_symbol smb_cat smb_cfi smb_cnt;;
let ecs_st_l = Cpmdf_v.anyson_entitycategorysuffix_list_of_category_symbol_of_codefile_symbol_of_topconstructor_symbol smb_cat Cfs_v.codefile_type smb_cnt;;
#use "taggregate_symbol_type_modules_item_value_v.ml";; 
ecs_st_l;;
let ecs_l = ecs_st_l;;
let prd ecs = 
    let smb_ent = Ecs_v.entity_symbol_off_entitycategorysuffix ecs in
    let suf_cfi = Ecs_v.codefile_suffix_off_entitycategorysuffix ecs in
    not (
      (suf_cfi = Csu_v.suffix_p)
     || (smb_ent = Cns_v.entity_symbol_off_constructor_symbol smb_cnt) (* top *)
     || (Ens_v.is_entity_bare_symbol_off_entity_symbol smb_ent) 
     || (Ens_v.is_entity_barebasic_symbol_off_entity_symbol smb_ent) );;
let ecs_fl = Lst_v.once_list_of_list (List.filter prd ecs_l);;
let ecs_fl = Lst_v.once_list_of_list  ecs_st_l ;;
 ecs_st_l;;
let ecs_fl = Lst_v.once_list_of_list (List.filter prd ecs_l);;
let smb_cnt = Cpc_v.top_constructor_symbol_off_caml_paragraph_context ctt_cpg;;
#use "taggregate_symbol_type_modules_item_value_v.ml";; 
#use "caml_paragraph_modules_definitions_formula_v.ml";;
let smb_cnt = Cpc_v.top_constructor_symbol_off_caml_paragraph_context ctt_cpg;;
#use "caml_paragraph_modules_definitions_formula_v.ml";;
#use "taggregate_symbol_type_modules_item_value_v.ml";; 
let smb_cnt = Cpc_v.top_constructor_symbol_off_caml_paragraph_context ctt_cpg;;
let smb_cnt_top = Cpc_v.top_constructor_symbol_off_caml_paragraph_context ctt_cpg;;
  let smb_cfi = Cfs_v.codefile_type in
  
  let smb_cat = Cpc_v.category_symbol_off_caml_paragraph_context ctt_cpg in
  let smb_cnt = Cpc_v.top_constructor_symbol_off_caml_paragraph_context ctt_cpg in
  let smb_ent_top = Cns_v.entity_symbol_off_constructor_symbol smb_cnt in
  let ecs_st_l =
    topson_entitycategorysuffix_list_of_category_symbol_of_codefile_symbol_of_topconstructor_symbol 
      smb_cat smb_cfi smb_cnt in evs_st_l;;
 let smb_cfi = Cfs_v.codefile_type;;
let smb_cat = Cpc_v.category_symbol_off_caml_paragraph_context ctt_cpg;;
 let smb_cnt = Cpc_v.top_constructor_symbol_off_caml_paragraph_context ctt_cpg ;;
 let smb_ent_top = Cns_v.entity_symbol_off_constructor_symbol smb_cnt;;
  let ecs_st_l =
    topson_entitycategorysuffix_list_of_category_symbol_of_codefile_symbol_of_topconstructor_symbol 
      smb_cat smb_cfi smb_cnt;;
let ecs_st_l = anyson_entitycategorysuffix_list_of_category_symbol_of_codefile_symbol_of_topconstructor_symbol 
      smb_cat smb_cfi smb_cnt;;
  let ecs_l = ecs_st_l ;;
let prd ecs = 
    let smb_ent_c = Ecs_v.entity_symbol_off_entitycategorysuffix ecs in
    let suf_cfi = Ecs_v.codefile_suffix_off_entitycategorysuffix ecs in
    not (
      (suf_cfi = Csu_v.suffix_p)
     || (smb_ent_c = smb_ent_top) (* top *)
     || (Ens_v.is_entity_bare_symbol_off_entity_symbol smb_ent_c) 
     || (Ens_v.is_entity_barebasic_symbol_off_entity_symbol smb_ent_c) );;
List.map prd  ecs_l;;
let ecs = List.nth ecs_st_l 2;;
prd ecs;;
let smb_ent_c = Ecs_v.entity_symbol_off_entitycategorysuffix ecs;;
let suf_cfi = Ecs_v.codefile_suffix_off_entitycategorysuffix ecs;;
#use "taggregate_symbol_type_modules_item_value_v.ml";; 
 retrieve_modules_type_definitions_local_in_codefile_type ctt_cpg;;
#use "caml_paragraph_modules_definitions_formula_v.ml";;
 retrieve_modules_type_definitions_local_in_codefile_type ctt_cpg;;
#use "caml_paragraph_modules_definitions_formula_v.ml";;
#use "taggregate_symbol_type_modules_item_value_v.ml";; 
 retrieve_modules_type_definitions_local_in_codefile_type ctt_cpg;;
#use "taggregate_symbol_type_modules_item_value_v.ml";; 
#use "caml_paragraph_modules_definitions_formula_v.ml";;
 retrieve_modules_type_definitions_local_in_codefile_type ctt_cpg;;
smb_cnt;;
#use "caml_paragraph_modules_definitions_formula_v.ml";;
#use "taggregate_symbol_type_modules_item_value_v.ml";; 
 retrieve_modules_type_definitions_local_in_codefile_type ctt_cpg;;
topson_entitycategorysuffix_list_of_category_symbol_of_codefile_symbol_of_topconstructor_symbol smb_cat smb_cfi smb_cnt;;
#use "taggregate_symbol_type_modules_item_value_v.ml";; 
#use "caml_paragraph_modules_definitions_formula_v.ml";;
 retrieve_modules_type_definitions_local_in_codefile_type ctt_cpg;;
#use "taggregate_symbol_type_modules_item_value_v.ml";; 
List.length smb_cli_tli_l ;;
List.length smb_cli_tlt_l;;
#use "taggregate_symbol_type_modules_item_value_v.ml";; 
List.length smb_cli_ili_l ;;
#use "taggregate_symbol_type_modules_item_value_v.ml";; 
let val_itm = Itvp_v.provide kyl_itm;;
#use "taggregate_symbol_type_modules_item_value_v.ml";; 
List.length smb_cli_tli_l ;;
 #use "taggregate_symbol_implementation_modules_item_value_v.ml";; 
#use "taggregate_symbol_implementation_modules_item_value_v.ml";; 
List.length smb_cli_ili_l ;;
let val_itm = Itvp_v.provide kyl_itm;;
smb_cli_ili_l ;;
#use "taggregate_symbol_implementation_modules_item_value_v.ml";; 
#use "taggregate_symbol_implementation_modules_item_value_v.ml";; List.length smb_cli_ili_l ;;
List.length smb_cli_ili_l ;;
#use "taggregate_symbol_implementation_modules_item_value_v.ml";; List.length smb_cli_ili_l ;;
List.length smb_cli_tlt_l ;;
#use "taggregate_symbol_implementation_modules_item_value_v.ml";; List.length smb_cli_ili_l ;;
#use "taggregate_symbol_type_modules_item_value_v.ml";; 
smb_cli_ili_l ;;
smb_cli_tli_l ;;
smb_cli_tlt_l ;;
List.map Clv_v.make smb_cli_ili_l;;
List.map Clv_v.make smb_cli_tli_l;;
List.map Clv_v.make smb_cli_tlt_l;;
#use "taggregate_symbol_type_modules_item_value_v.ml";; 
#use "tpolypeptide_symbol_type_codefile_value_v.ml";;
 #use "tpolyproline_symbol_type_modules_item_value_v.ml";; 
 #use "tpolyproline_symbol_implementation_modules_item_value_v.ml";; 
val_itm ;;
 #use "tpolyproline_symbol_implementation_modules_item_value_v.ml";; 
 #use "ttatom_onetied_single_symbol_type_typing_caml_paragraph_value_v.ml
 #use "tatom_onetied_single_symbol_type_typing_caml_paragraph_value_v.ml";;
 #use "tatom_onetied_single_symbol_type_codefile_value_v.ml";;
#use "tpolyproline_symbol_type_codefile_value_v.ml";;
cfi : Cfs_t.codefile_symbol = Cfs_t.Type_symbol
#use "tatom_symbol_type_codefile_value_v.ml";;
Lst_v.drop_last_element_off_list (Cfv_v.name_list val_cfi) ;;
#use "tatom_symbol_type_codefile_value_v.ml";;
 #use "taggregate_symbol_type_codefile_value_v.ml";; 
(Cfv_v.name_list val_cfi) ;;
(
Lst_v.drop_last_element_off_list (Cfv_v.name_list val_cfi) 
(* : string list *) = (* the date makes test fail *)
["(** {3 A Symbol for a Aggregate.} *)";
 "(** {6 Modules.} *)module Ord_p = Ordinal_p";
 "(** {6 Typing.} *)type aggregate_symbol =\n  | Doublet of (string, Ord_p.ordinal) Dbt_t.doublet\n;;"]
);;
Lst_v.drop_last_element_off_list (Cfv_v.name_list val_cfi) ;;
val_cfi;;
 #use "taggregate_symbol_type_codefile_value_v.ml";; 
#use "caml_paragraph_context_v.ml";;
ctt_cpg;;
 #use "taggregate_symbol_type_codefile_value_v.ml";; 
ctt_cpg;;
 #use "taggregate_symbol_type_codefile_value_v.ml";; 
let mrk_cnt_t = Cmtp_v.provide smb_cnt;;
let pth_cnt_t = Cpt_v.constructor_path_tree_of_constructor_marker_tree mrk_cnt_t;;
 #use "taggregate_symbol_type_codefile_value_v.ml";; 
 val_cli_l ;;
Lst_v.drop_last_element_off_list val_cli_l 
;;
 #use "taggregate_symbol_type_codefile_value_v.ml";; 
 #use "tpolyproline_symbol_type_codefile_value_v.ml";; 
Lst_v.drop_last_elements_of_int_of_list 2 val_cli_l ;;
 #use "tpolyproline_symbol_type_codefile_value_v.ml";; 
#use "tatom_zerotied_symbol_implementation_codefile_value_v.ml";; 
val_cfi;;
Lst_v.left_half_off_list val_cfi ;;
Lst_v.right_half_off_list val_cfi ;;
Lst_v.left_half_off_list val_cfi ;;
Lst_v.left_half_off_list (Lst_v.right_half_off_list val_cfi) ;;
Lst_v.right_half_off_list (Lst_v.right_half_off_list val_cfi) ;;
Lst_v.drop_last_elements_of_int_of_list 2 (Lst_v.right_half_off_list (Lst_v.right_half_off_list val_cfi));;
#use "tatom_zerotied_symbol_implementation_codefile_value_v.ml";; 
nam_fil_cfi;;
#use "tatom_onetied_symbol_interface_extracting_item_value_v.ml";;
 #use "tresidue_buried_fragmented_symbol_implementation_codefile_value_v.ml";; 
val_cfi;;
Lst_v.drop_last_elements_of_int_of_list 2 val_cfi ;;
 #use "tresidue_buried_fragmented_symbol_implementation_codefile_value_v.ml";; 
#use "tchemicalset_symbol_type_codefile_value_v.ml";; 
Lst_v.drop_last_elements_of_int_of_list 2 val_cfi ;;
#use "tchemicalset_symbol_type_codefile_value_v.ml";; 
val_cfi ;;
Lst_v.drop_last_elements_of_int_of_list 1 val_cfi ;;
#use "tchemicalset_symbol_type_codefile_value_v.ml";; 
 #use "taggregate_symbol_implementation_codefile_value_v.ml";; 
val_cfi;;
Lst_v.drop_last_elements_of_int_of_list 1 val_cfi;;
 #use "taggregate_symbol_implementation_codefile_value_v.ml";; 
 #use "taggregate_symbol_type_typing_caml_paragraph_value_v.ml";; 
smb_cns_l;;
val_cpg;;
 #use "taggregate_symbol_type_typing_caml_paragraph_value_v.ml";; 
 #use "taggregate_symbol_implementation_extracting_item_value_v.ml";; 
let val_itm = Itv_v.make kyl_itm;;
 #use "taggregate_symbol_implementation_extracting_item_value_v.ml";; 
frm_itm;;
#use "caml_paragraph_functions_definitions_formula_v.ml";;
caml_line_position_off_structure_of_caml_paragraph_context ctt_cpg;;
ctt_cpg;;
let smb_cnt = Cpc_v.top_constructor_symbol_off_caml_paragraph_context ctt_cpg ;;
smb_cnt ;;
let ecs_gs_l = Cpc_v.grandson_entitycategorysuffix_list_of_caml_paragraph_context  ctt_cpg;;
#use "caml_paragraph_functions_definitions_formula_v.ml";;
 #use "taggregate_symbol_implementation_extracting_item_value_v.ml";; 
val_itm = Itv_v.make kyl_itm;;
let val_itm = Itv_v.make kyl_itm;;
 mrk_cnt_t ;;
let mrk_cnt_gs_l = 
    Tre_v.node_filter (fun (s, i) -> List.length i = 3) mrk_cnt_t ;;
Cpc_v.bottom_constructor_proper_tree_canonical_index_off_caml_paragraph_context ctt_cpg;;
let prd ctt =
    let pth = Cpc_v.constructor_path_off_caml_paragraph_context ctt in
    let tci = 
      Cnp_v.bottom_constructor_proper_tree_canonical_index_off_constructor_path 
	pth in
    List.length tci = 3;;
let ctt_cpg_gs_l = 
    Tre_v.node_filter prd ctt_cpg_t;;
let smb_cpg_gs_l = List.map 
      Cps_v.function_s_off_t_t_argument ctt_cpg_gs_l;;
 Tre_v.make_of_node 
    (Cps_v.heading ctt_cpg) 
    (List.map Tre_v.make_of_leaf smb_cpg_gs_l);;
 #use "taggregate_symbol_implementation_extracting_item_value_v.ml";; 
smb_cpg_t ;;
let val_itm = Itv_v.make kyl_itm;;
(
val_itm 
(* : Item_value_t.item_value *)
  =
Item_value_t.Tre_t.Node (["(** {6 Extracting.} *)"],
 [Item_value_t.Tre_t.Leaf
   ["let string_symbol_off_aggregate_symbol smb_age =";
    "  Dbt_v.left_off_doublet smb_age"; 
    ";;"];
  Item_value_t.Tre_t.Leaf
   ["let ordinal_symbol_off_aggregate_symbol smb_age =";
    "  Dbt_v.right_off_doublet smb_age"; 
    ";;"]])
);;
 #use "taggregate_symbol_implementation_extracting_item_value_v.ml";; 
smb_cpg_l;;
 #use "taggregate_symbol_implementation_extracting_item_value_v.ml";; 
frm_itm;;
 #use "taggregate_symbol_implementation_extracting_item_value_v.ml";; 
Itf_v.retrieve_extracting_datastructure mrk_cnt_t kyl_itm ;;
 #use "taggregate_symbol_implementation_extracting_item_value_v.ml";; 
ctt_cpg_l ;;
 #use "taggregate_symbol_implementation_extracting_item_value_v.ml";; 
ecc_l ;;
ecs_l ;;
 #use "taggregate_symbol_implementation_extracting_item_value_v.ml";; 
Ecs_v.entitycategory_off_entitycategorysuffix ecs_l;;
ecs_l;;
Ecs_v.entitycategory_off_entitycategorysuffix (List.nth ecs_l 3);;
let enc_b = Ecs_v.entitycategory_off_entitycategorysuffix (List.nth ecs_l 3);;
(Enc_v.name enc_b);;
#use "caml_line_value_v.ml";;
(Enc_v.name enc_b);;
val_itm;;
 #use "taggregate_symbol_implementation_extracting_item_value_v.ml";; 
val_itm;;
 #use "taggregate_symbol_implementation_extracting_item_value_v.ml";; 
val_itm let val_itm = Itv_v.make kyl_itm;;
let val_itm = Itv_v.make kyl_itm;;
 #use "taggregate_symbol_implementation_extracting_item_value_v.ml";; 
#use "item_formula_v.ml";;
 let ctt_cpg_t = 
    Cpc_v.caml_paragraph_context_tree_of_constructor_marker_tree_of_item_key_list 
      mrk_cnt_t kyl_itm ;;
let ctt_cpg = Tre_v.root_off_tree ctt_cpg_t;;
 let prd ctt =
    let pth = Cpc_v.constructor_path_off_caml_paragraph_context ctt in
    let tci = 
      Cnp_v.bottom_constructor_proper_tree_canonical_index_off_constructor_path 
	pth in
    List.length tci = 3;;
let ctt_cpg_gs_l = 
    Tre_v.node_filter prd ctt_cpg_t;;
List.length  ctt_cpg_gs_l 
List.length  ctt_cpg_gs_l ;;
let smb_cpg_gs_l = List.map 
      Cps_v.function_s_off_t_t_argument ctt_cpg_gs_l;;
 Tre_v.make_of_node 
    (Cps_v.heading ctt_cpg) 
    (List.map Tre_v.make_of_leaf smb_cpg_gs_l);;
 #use "taggregate_symbol_implementation_extracting_item_value_v.ml";; 
smb_cpg_gs_l ;;
List.map retrieve_function_s_off_t_t_argument smb_cpg_gs_l  
;;
List.map Cpfdf_v.retrieve_function_s_off_t_t_argument smb_cpg_gs_l  
;;
 #use "taggregate_symbol_implementation_extracting_item_value_v.ml";; 
List.map Cpfdf_v.retrieve_function_s_off_t_t_argument smb_cpg_gs_l ;;
 #use "taggregate_symbol_implementation_extracting_item_value_v.ml";; 
List.map Cpfdf_v.retrieve_function_s_off_t_t_argument smb_cpg_gs_l ;;
 #use "taggregate_symbol_implementation_extracting_item_value_v.ml";; 
ctt_cpg_gs_l;;
smb_cli_ll;;
 #use "taggregate_symbol_implementation_extracting_item_value_v.ml";; 
ecc_gs_l ;;
ecs_gs_l ;;
 #use "taggregate_symbol_implementation_extracting_item_value_v.ml";; 
smb_cnt;;
 #use "taggregate_symbol_implementation_extracting_item_value_v.ml";; 
smb_cnt;;
 #use "taggregate_symbol_implementation_extracting_item_value_v.ml";; 
retrieve_function_s_off_t_t_argument ctt_cpg_str;;
 #use "caml_paragraph_functions_definitions_formula_v.ml";;
retrieve_function_s_off_t_t_argument ctt_cpg_str;;
smb_cpg_t = frm_itm;;
smb_cpg_l ;;
 #use "caml_paragraph_functions_definitions_formula_v.ml";;
smb_cpg_sot_str;;
 #use "caml_paragraph_functions_definitions_formula_v.ml";;
 #use "taggregate_symbol_implementation_extracting_item_value_v.ml";; 
smb_cpg_sot_str;;
Cls_v.let_s_off_t_t_argument ctt_cpg_str;;
Cls_v.make (Cls_v.let_s_off_t_t_argument ctt_cpg_str);;
Caml_line_value_v.make (Cls_v.let_s_off_t_t_argument ctt_cpg_str);;
 #use "taggregate_symbol_implementation_extracting_item_value_v.ml";; 
smb_cli_str;;
 #use "taggregate_symbol_implementation_extracting_item_value_v.ml";; 
let ecs_b = 
	  Cpc_v.bottom_entitycategorysuffix_off_caml_paragraph_context ctt_cpg_str;;
 #use "taggregate_symbol_implementation_extracting_item_value_v.ml";; 
let ecs_str;;
ecs_str;;
 #use "tordinal_entitycategorycodefile_v.ml";; 
smb_ent ;;
enc ;;
ecc;;
 #use "tordinal_entitycategorycodefile_v.ml";; 
 enc;;
 #use "tordinal_entitycategorycodefile_v.ml";; 
ecc;;
 #use "tordinal_entitycategorycodefile_v.ml";; 
ecc_fake;;
((Ens_v.make "ordinal"), smb_cat, smb_cfi);;
( 
ecc_fake
=
((Ens_v.make "ordinal"), smb_cat, smb_cfi)
);;
 #use "tordinal_entitycategorycodefile_v.ml";; 
let ecc_fake = try Ecc_v.make (Ens_v.make "ordinal") smb_cat Cfs_v.codefile_type
with Assert_failure _ -> ((Ens_v.make "ordinal"), smb_cat, smb_cfi);;
((Ens_v.make "ordinal"), smb_cat, smb_cfi);;
ecc_fake;;
((Ens_v.make "ordinal"), smb_cat, smb_cfi);;Ecc_v.make (Ens_v.make "ordinal") smb_cat Cfs_v.codefile_type
Ecc_v.make (Ens_v.make "ordinal") smb_cat Cfs_v.codefile_type;;
ecc_fake;;
 #use "tordinal_entitycategorycodefile_v.ml";; 
Enc_v.name enc ;;
Ecc_v.name ecc ;;
 #use "tordinal_entitycategorycodefile_v.ml";; 
 #use "tstring_entitycategorycodefile_v.ml";; 
Enc_v.name enc ;;
 #use "tstring_entitycategorycodefile_v.ml";; 
 #use "tordinal_entitycategorycodefile_v.ml";; 
 #use "tstring_entitycategorycodefile_v.ml";; 
Ens_v.is_entity_barebasic_symbol_off_string nam_ent;;
 #use "tstring_entitycategorycodefile_v.ml";; 
let smb_ent = Ens_v.make nam_ent;;
 #use "tstring_entitycategorycodefile_v.ml";; 
 enc ;;
Enc_v.name enc ;;
 #use "tstring_entitycategorycodefile_v.ml";; 
ecc;;
Ecc_v.name ecc ;;
 #use "tstring_entitycategorycodefile_v.ml";; 
Amd_v.abbreviation_module_of_entity_symbol smb_ent;;
 #use "tstring_entitycategorycodefile_v.ml";; 
Aab_v.abbreviation_argument_of_entitycategory enc ,,
Aab_v.abbreviation_argument_of_entitycategory enc ;;
 #use "tstring_entitycategorycodefile_v.ml";; 
Scp_v.provide enc;;
 #use "tstring_entitycategorycodefile_v.ml";; 
Ecs_v.codefile_suffix_name_of_entitycategorysuffix ecs;;
 #use "tstring_entitycategorycodefile_v.ml";; 
Ecc_v.codefile_suffix_of_entitycategorycodefile ecc;;
 #use "tstring_entitycategorycodefile_v.ml";; 
Cfp_v.provide ecc;;
ecc_fake;;
 #use "taggregate_symbol_implementation_extracting_item_value_v.ml";; 
#use "caml_paragraph_context_v.ml";;
 ctt_cpg_str;;
smb_cpg_str;;
smb_cpg_sot_str;;
ecs_str;;
  #use "tstring_entitycategorycodefile_v.ml";; 
eecs_fake;;
ecs_fake;;
  #use "tstring_entitycategorycodefile_v.ml";; 
ecs_fake;;
enc_fake;;
Enc_v.name enc_fake;;
  #use "tstring_entitycategorycodefile_v.ml";; 
ecs;;
 #use "taggregate_symbol_implementation_extracting_item_value_v.ml";; 
   
([(Item_formula_t.Cps_t.Cpc_t.Cnp_t.Cnm_t.Cns_t.Constructor_proper_symbol
       (Item_formula_t.Cps_t.Cpc_t.Cnp_t.Cnm_t.Cns_t.Constructor_oneline_symbol
         (Item_formula_t.Cps_t.Cpc_t.Cnp_t.Cnm_t.Cns_t.Constructor_proper_datastructure_symbol
           (Item_formula_t.Cps_t.Cpc_t.Cnp_t.Cnm_t.Cns_t.Constructor_proper_doublet_symbol
             "aggregate"))),
      [1])],
    [("item", "extracting"); ("codefile", "implementation");
     ("category", "symbol"); ("entity", "aggregate")]),
smb_cpg_hdr;;
 #use "taggregate_symbol_implementation_extracting_item_value_v.ml";; 
smb_cpg_hdr;;
smb_cpg_sot_str;;
smb_cpg_sot_ord;;
 #use "taggregate_symbol_implementation_extracting_item_value_v.ml";; 
ctt_cpg_ord ;;
ctt_cpg_str;;
 #use "taggregate_symbol_implementation_extracting_item_value_v.ml";; 
smb_cpg_sot_str;;
 #use "taggregate_symbol_implementation_extracting_item_value_v.ml";; 
(
smb_cpg_gs_l 
(* : Caml_paragraph_symbol_t.caml_paragraph_symbol list *)
=
[smb_cpg_sot_str; smb_cpg_sot_ord]
);;
 #use "taggregate_symbol_implementation_extracting_item_value_v.ml";; 
ctt_cpg_gs_l = [ctt_cpg_str; ctt_cpg_ord];;
smb_cli_str;;
(
smb_cli_str
(* : Caml_line_symbol_t.caml_line_symbol *)
=
Caml_line_symbol_t.Pair_symbol
 (Caml_line_symbol_t.Let_s_off_t_t_argument_symbol ctt_cpg_str)
);;
smb_cli_ll = Cpfdf_v.retrieve_function_s_off_t_t_argument ctt_cpg_str;; 
Cpfdf_v.retrieve_function_s_off_t_t_argument ctt_cpg_str;; 
ctt_cpg_str;;
let smb_cli_str_l = Cpfdf_v.retrieve_function_s_off_t_t_argument ctt_cpg_str;; 
let smb_cli_ord_l = Cpfdf_v.retrieve_function_s_off_t_t_argument ctt_cpg_ord;; smb_cli_ord_l;;
smb_cli_str_l = [smb_cli_str; smb_cli_str];;
smb_cli_str_l;;
smb_cli_str;;
ecs_gs_l;;
 ecs_str;;
ecc_gs_l = [ecs_str; ecs_ord]
;;
ecc_gs_l = [ecs_str; ecs_ord];;
 #use "taggregate_symbol_implementation_extracting_item_value_v.ml";; 
ecc_gs_l = [ecs_str; ecs_ord];;
ecs_str;;
ecs_gs_l = [ecs_str; ecs_ord];;
 #use "taggregate_symbol_implementation_extracting_item_value_v.ml";; 
smb_cli_str;;
ecs_str ;;
ecs_str_b ;;
 #use "taggregate_symbol_implementation_extracting_item_value_v.ml";; 
ecs_ord ;;
ecs_ord_b ;;
 #use "taggregate_symbol_implementation_extracting_item_value_v.ml";; 
smb_cli_ll = [[smb_cli_str; smb_cli_str]; [smb_cli_ord; smb_cli_ord]];;
 #use "taggregate_symbol_implementation_extracting_item_value_v.ml";; 
#use "caml_paragraph_context_v.ml";;
let ctt_cpg = ctt_cpg_str;;
let smb_cat = category_symbol_off_caml_paragraph_context ctt_cpg;;
ctt_cpg;;
 #use "taggregate_symbol_implementation_extracting_item_value_v.ml";; 
ecs_str_b ;;
 #use "taggregate_symbol_implementation_extracting_item_value_v.ml";; 
(
ecs_str_b 
(* : Entitycategorysuffix_t.entitycategorysuffix *)
=
ecs_str
);;
 #use "taggregate_symbol_implementation_extracting_item_value_v.ml";; 
ecs_str;;
ecs_ord ;;
 #use "taggregate_symbol_implementation_extracting_item_value_v.ml";; 
 (
ecs_str_b 
(* : Entitycategorysuffix_t.entitycategorysuffix *)
=
ecs_str
);;
ecs_str_b ;;
ecs_str ;;
let sco = Scp_v.provide smb_enc ;;
let sco = Scp_v.provide enc ;;
 #use "tordinal_scope_provider_v.ml";;
smb_ent;;
 #use "tordinal_scope_provider_v.ml";;
enc;;
 #use "tordinal_scope_provider_v.ml";;
ecc;;
ecs;;
par_scf;;
 #use "tordinal_scope_provider_v.ml";;
fln;;
Sco_v.entitycategory_private_scope_list ();;
 #use "tordinal_scope_provider_v.ml";;
#use "tordinal_entitycategorysuffix_v.ml";; 
smb_ent ;;
enc;;
ecc;;
#use "tordinal_entitycategorysuffix_v.ml";; 
Amecsp_v.provide ecs;;
#use "tordinal_entitycategorysuffix_v.ml";; 
Aaecsp_v.provide ecs ;;
Amtecsp_v.provide ecs;;
Maecsp_v.provide ecs;;
Amtecsp_v.provide ecs;;
#use "tordinal_entitycategorysuffix_v.ml";; 
  #use "tordinal_scope_provider_v.ml";;
ecc;;
 #use "tordinal_entitycategorycodefile_v.ml";; 
 #use "taggregate_symbol_implementation_naming_item_value_v.ml";; 
ecc_l ;;
 #use "taggregate_symbol_implementation_extracting_item_value_v.ml";; 
ecs_agg ;;
ecs_dbt;;
 #use "taggregate_symbol_implementation_extracting_item_value_v.ml";; 
ecc_dbt;;
ecs_dbt;;
ecs_ord;;
 #use "taggregate_symbol_implementation_extracting_item_value_v.ml";; 
 #use "taggregate_symbol_implementation_naming_item_value_v.ml";; 
smb_cpg_l;;
 #use "taggregate_symbol_implementation_naming_item_value_v.ml";; 
val_itm ;;
 #use "taggregate_symbol_implementation_naming_item_value_v.ml";; 
let ctt_cpg_l = Tre_v.list_off_tree ctt_cpg_t;;
let ctt_cpg_agg = List.nth ctt_cpg_l 0;;
let ctt_cpg_dbt = List.nth ctt_cpg_l 1;;
let ctt_cpg_str = List.nth ctt_cpg_l 2;;
let ctt_cpg_ord = List.nth ctt_cpg_l 3;;
let smb_cpg_t =  frm_itm;;
let smb_cpg_l = Tre_v.list_off_tree smb_cpg_t;;
let smb_cpg_hdr = List.nth smb_cpg_l 0;;
let smb_cpg_sot_str = List.nth smb_cpg_l 1;;
let smb_cpg_sot_ord = List.nth smb_cpg_l 2;;
let smb_cpg_gs_l =  [smb_cpg_sot_str; smb_cpg_sot_ord];;let smb_cpg_l = Tre_v.list_off_tree smb_cpg_t;;
let smb_cpg_l = Tre_v.list_off_tree smb_cpg_t;;
let smb_cpg_hdr = List.nth smb_cpg_l 0;;
let smb_cpg_nam = List.nth smb_cpg_l 1;;
 #use "taggregate_symbol_implementation_naming_item_value_v.ml";; 
ecs_gs_l ;;
 #use "taggregate_symbol_implementation_naming_item_value_v.ml";; 
let smb_cli_l = Cpfdf_v.retrieve_function_name_argument ctt_cpg;;
 #use "taggregate_symbol_type_typing_item_value_v.ml";; 
ctt_cpg_l;;
let ecc_agg = Cpc_v.entitycategorycodefile_off_caml_paragraph_context ctt_cpg_agg;;
let ecc_dbt = Cpc_v.entitycategorycodefile_off_caml_paragraph_context ctt_cpg_dbt;;
let ecc_str = Cpc_v.entitycategorycodefile_off_caml_paragraph_context ctt_cpg_str;;
let ecc_ord = Cpc_v.entitycategorycodefile_off_caml_paragraph_context ctt_cpg_ord;;
let ecs_agg = Cpc_v.entitycategorysuffix_off_caml_paragraph_context ctt_cpg_agg;;
let ecs_dbt = Cpc_v.entitycategorysuffix_off_caml_paragraph_context ctt_cpg_dbt;;
let ecs_str = Cpc_v.entitycategorysuffix_off_caml_paragraph_context ctt_cpg_str;;
let ecs_ord = Cpc_v.entitycategorysuffix_off_caml_paragraph_context ctt_cpg_ord;;
let ecs_str_b = Cpc_v.bottom_entitycategorysuffix_off_caml_paragraph_context ctt_cpg_str;;
let ecs_ord_b = Cpc_v.bottom_entitycategorysuffix_off_caml_paragraph_context ctt_cpg_ord;;
 smb_cpg_gs_l;;
let ecs_str_b = Cpc_v.bottom_entitycategorysuffix_off_caml_paragraph_context ctt_cpg_str;;
 #use "taggregate_symbol_type_typing_item_value_v.ml";; 
let ctt_cpg_l;;
ctt_cpg_l;;
let frm_itm = Itf_v.retrieve kyl_itm;;
let smb_cpg_t = frm_itm;;
let smb_cpg_l = Tre_v.list_off_tree smb_cpg_t;;let smb_cpg_hdr = List.nth smb_cpg_l 0;;
let smb_cpg_tdf = List.nth smb_cpg_l 1;; ctt_cpg_agg;;
 #use "taggregate_symbol_type_typing_item_value_v.ml";; 
let ecc_ord = Cpc_v.entitycategorycodefile_off_caml_paragraph_context ctt_cpg_ord;;
ctt_cpg_ord;;
 #use "taggregate_symbol_implementation_extracting_item_value_v.ml";; 
ctt_cpg_ord;;
ctt_cpg_ord;;ecc_ord;;
ecc_ord;;
 #use "taggregate_symbol_type_typing_item_value_v.ml";; 
ecc_ord;;
let ecc_ord = Cpc_v.entitycategorycodefile_off_caml_paragraph_context ctt_cpg_ord;;
ctt_cpg_ord;;
 #use "taggregate_symbol_type_typing_item_value_v.ml";; 
let ecs_gs_l = Cpc_v.grandson_entitycategorysuffix_list_of_caml_paragraph_context ctt_cpg_agg;;
Cpc_v.grandson_entitycategorysuffix_list_of_caml_paragraph_context ctt_cpg_agg;;
 #use "taggregate_symbol_type_typing_item_value_v.ml";; 
pth_cnt_t ;;
 #use "taggregate_symbol_type_typing_item_value_v.ml";; 
ecs_agg ;;
 #use "taggregate_symbol_type_typing_item_value_v.ml";; 
ecs_dbt ;;
 #use "taggregate_symbol_type_typing_item_value_v.ml";; 
ecs_str ;;
let val_itm = Itvp_v.provide kyl_itm;;
let smb_cpg_t = frm_itm;;
#use  "caml_paragraph_typing_formula_v.ml";;
let ctt_cpg = ctt_cpg_agg;;
retrieve_type_definition ctt_cpg;;
let smb_cnt = 
    Cpc_v.top_constructor_symbol_off_caml_paragraph_context ctt_cpg;;
Cns_v.is_constructor_proper_datastructure_symbol_off_constructor_symbol smb_cnt;;
let smb_cds = 
	  Cns_v.constructor_proper_datastructure_symbol_off_constructor_symbol smb_cnt;;
 Cns_v.constructor_proper_datastructure_symbol_off_constructor_symbol smb_cnt;;
let smb_cat = Cpc_v.category_symbol_off_caml_paragraph_context ctt_cpg ;;
let smb_cfi = Cpc_v.codefile_symbol_off_caml_paragraph_context ctt_cpg;;
let smb_cnt = Cns_v.constructor_symbol_of_constructor_proper_datastructure_symbol smb_cds;;
let ecs_gs_l = 
    Cpc_v.grandson_entitycategorysuffix_list_datastructure smb_cat smb_cfi smb_cnt;;
 #use "taggregate_symbol_type_typing_item_value_v.ml";; 
ecs_ord;;
 #use "taggregate_symbol_type_typing_item_value_v.ml";; 
 #use "taggregate_symbol_implementation_codefile_value_v.ml";; 
let val_cfi = Cfv_v.make kyl_cfi;;
 #use "taggregate_symbol_implementation_codefile_value_v.ml";; 
 #use "taggregate_symbol_implementation_including_item_value_v.ml";; 
frm_itm ;;
val_itm ;;
 #use "taggregate_symbol_implementation_including_item_value_v.ml";; 
 #use "taggregate_symbol_implementation_ending_item_value_v.ml";; 
frm_itm ;;
val_itm ;;
#use "taggregate_symbol_implementation_heading_item_value_v.ml";; 
frm_itm ;;
#use "taggregate_symbol_implementation_heading_item_value_v.ml";; 
 #use "taggregate_symbol_implementation_printing_item_value_v.ml";; 
smb_cpg_t ;;
 #use "taggregate_symbol_implementation_printing_item_value_v.ml";; 
frm_itm;;
 #use "taggregate_symbol_implementation_printing_item_value_v.ml";; 
mb_cli_l ;;
smb_cli_l ;;
 #use "taggregate_symbol_implementation_printing_item_value_v.ml";; 
smb_cli_l ;;
 #use "taggregate_symbol_implementation_printing_item_value_v.ml";; 
let smb_cli_l = Cpfdf_v.retrieve_function_print_argument ctt_cpg;;
 #use "taggregate_symbol_implementation_printing_item_value_v.ml";; 
let smb_cli_l = Cpfdf_v.retrieve_function_print_argument ctt_cpg;;
 #use "taggregate_symbol_implementation_printing_item_value_v.ml";; 
 ecs_gs_l;;
List.map Clv_v.make smb_cli_l;;
let smb_cli_teq = List.nth smb_cli_l 0;;
smb_cli_abt ;;
let smb_cli_abt = List.nth smb_cli_l 1;;
 #use "taggregate_symbol_implementation_printing_item_value_v.ml";; 
let val_cli_teq = Clv_v.make  smb_cli_teq;;
let val_cli_abt = Clv_v.make  smb_cli_abt;;
 #use "taggregate_symbol_implementation_printing_item_value_v.ml";; 
let val_cli_teq = Clv_v.make  smb_cli_teq;;
let val_cli_abt = Clv_v.make  smb_cli_abt;;
 #use "taggregate_symbol_implementation_printing_item_value_v.ml";; 
smb_cli_l ;;
 #use "taggregate_symbol_implementation_printing_item_value_v.ml";; 
Cls_v.double_semicolon;;
let val_itm = Itv_v.make kyl_itm;;
 #use "taggregate_symbol_implementation_printing_item_value_v.ml";; 
val_cli_dat;;
 #use "taggregate_symbol_implementation_enfing_item_value_v.ml";; 
 #use "taggregate_symbol_implementation_ending_item_value_v.ml";; 
val_cli_dat ;;
let val_itm = Itv_v.make kyl_itm;;
 (Itv_v.caml_line_value_off_item_value val_itm);;
 #use "taggregate_symbol_implementation_ending_item_value_v.ml";; 
val_cli_dat;;
String.sub val_cli_dat 0 30;;
String.sub val_cli_dat 0 50;;
String.sub val_cli_dat 0 49;;
 #use "taggregate_symbol_implementation_ending_item_value_v.ml";; 
 #use "taggregate_symbol_implementation_codefile_value_v.ml";; 
Lst_v.drop_last_elements_of_int_of_list 1 val_cfi;;
Lst_v.drop_last_elements_of_int_of_list 0 val_cfi;;
 val_cfi;;
Lst_v.drop_last_elements_of_int_of_list 1 val_cfi;;
 #use "taggregate_symbol_implementation_codefile_value_v.ml";; 
#use "taggregate_symbol_interface_codefile_value_v.ml";; 
frm_cfi;;
#use "taggregate_symbol_interface_codefile_value_v.ml";; 
Lst_v.drop_last_elements_of_int_of_list 1 val_cfi;;
let val_cfi = Cfv_v.make kyl_cfi;;
#use "taggregate_symbol_interface_codefile_value_v.ml";; 
ctt_cpg;;
 #use "taggregate_symbol_implementation_naming_item_value_v.ml";;  
smb_cpg_t ;;
 #use "taggregate_symbol_implementation_naming_item_value_v.ml";;  
frm_itm;;
 #use "taggregate_symbol_implementation_naming_item_value_v.ml";;  
let smb_cli_l = Cpfdf_v.retrieve_function_name_function ctt_cpg;;
 #use "taggregate_symbol_implementation_naming_item_value_v.ml";;  
smb_cli_l;;
let val_itm = Itv_v.make kyl_itm;;
smb_cpg_l;;
List.length smb_cpg_l;;
Cpc_v.son_caml_paragraph_context_list_off_caml_paragraph_context ctt_cpg_agg;;
let ctt_cps_l = Cpc_v.son_caml_paragraph_context_list_off_caml_paragraph_context ctt_cpg_agg;;
ctt_cpg_l = [ctt_cpg_dbt];;
ctt_cpg_dbt;;
ctt_cps_l = [ctt_cpg_dbt];;
ctt_cpg_gs_l;;
ctt_cps_l ;;
let smb_cli_l = 
	let smb_cli_ll =
	  List.map 
	    caml_line_name_list_of_son_caml_paragraph_context 
	    ctt_cps_l 
	in 
	List.flatten smb_cli_ll ;;
"use "caml_paragraph_functions_definitions_formula_v.ml";;
#use "caml_paragraph_functions_definitions_formula_v.ml";;
let smb_cli_l = 
	let smb_cli_ll =
	  List.map 
	    caml_line_name_list_of_son_caml_paragraph_context 
	    ctt_cps_l 
	in 
	List.flatten smb_cli_ll ;;
ecs_l;;
ecs_l;;ecs_gs_l ;;
ecs_gs_l ;;
 #use "tdoublet_entitycategorysuffix_v.ml";; 
let smb_ent = Ens_v.make nam_ent;;
 #use "tdoublet_entitycategorysuffix_v.ml";; 
smb_ent ;;
enc ;;
ecc;;
 #use "tdoublet_entitycategorysuffix_v.ml";; 
Ens_v.name_capitalized smb_ent;;
 #use "tdoublet_entitycategorysuffix_v.ml";; 
Amtecsp_v.provide ecs;;
#use "taggregate_symbol_implementation_naming_item_value_v.ml";; 
#use "caml_paragraph_functions_definitions_formula_v.ml";;
let smb_cnt = 
    Cpc_v.top_constructor_symbol_off_caml_paragraph_context ctt_cpg;;
  let trp_imc = 
    Cpc_v.symboltriplet_off_caml_paragraph_context ctt_cpg ;;
let ecs_s = 
		   Cpc_v.son_entitycategorysuffix_off_caml_paragraph_context ctt_cpg ;;
#use "caml_paragraph_context_v.ml";;
let pth_cnt = constructor_path_off_caml_paragraph_context ctt_cpg;;
Cls_v.doublet_name_a_b_t ctt_cpg;;
Clv_v.make (Cls_v.doublet_name_a_b_t ctt_cpg);;
entitycategorycodefile_off_caml_paragraph_context ctt_cpg;;
mrk_cnt_t;;
bottom_entitycategorysuffix_off_caml_paragraph_context ctt_cpg;;
son_caml_paragraph_context_list_off_caml_paragraph_context
#use "taggregate_symbol_implementation_naming_item_value_v.ml";; 
smb_cli_l ;;
#use "taggregate_symbol_implementation_naming_item_value_v.ml";; 
let ctt_cpg_s_l = Cpc_v.son_caml_paragraph_context_list_off_caml_paragraph_context ctt_cpg_agg;;
let ctt_cpg_s = List.hd ctt_cpg_s_l;; 
let ecs_s = Cpc_v.son_entitycategorysuffix_off_caml_paragraph_context ctt_cpg_s;;
let ecs_dbt = Cpc_v.entitycategorysuffix_off_caml_paragraph_context ctt_cpg_s;;
 Cls_v.doublet_name_a_b_t ctt_cpg_dbt;;
 Cls_v.doublet_name_a_b_t ctt_cpg_agg;;
 Cls_v.doublet_name_a_b_t ctt_cpg_dbt;;
#use "item_formula_v.ml";;
retrieve_naming_datastructure mrk_cnt_t kyl_itm ;;
retrieve_naming_datastructure mrk_cnt_t kyl_it;;
 #use "taggregate_symbol_implementation_naming_item_value_v.ml";; 
smb_cpg_t;;
let smb_cpg_l = Tre_v.list_off_tree smb_cpg_t;;
let smb_cpg_hdr = List.nth smb_cpg_l 0;;
let smb_cpg_fun = List.nth smb_cpg_l 1;;smb_cpg_l;;
let smb_cpg_t = frm_itm;;
let smb_cpg_l = Tre_v.list_off_tree smb_cpg_t;;
 #use "taggregate_symbol_implementation_naming_item_value_v.ml";; 
let ecc_s_l = List.map Cpc_v.entitycategorycodefile_off_caml_paragraph_context ctt_cpg_s_l;;
let ctt_cpg_r = Cpc_v.make pth_cnt kyl_itm;;
let ctt_cpg_agg = ctt_cpg_r;; (* root *)
let ctt_cpg_s_l = Cpc_v.son_caml_paragraph_context_list_off_caml_paragraph_context ctt_cpg_agg;;
let ctt_cpg_s = List.hd ctt_cpg_s_l;; ctt_cpg_s ;;
 #use "taggregate_symbol_implementation_naming_item_value_v.ml";; 
let ecs_t = Tre_v.map Cpc_v.entitycategorysuffix_off_caml_paragraph_context ctt_cpg_t;;
let ecc_s_l = Tre_v.topsonnode_list_off_tree ctt_cpg_t;;
let ecs_s_l = Tre_v.topsonnode_list_off_tree ctt_cpg_t;;
 #use "taggregate_symbol_implementation_naming_item_value_v.ml";; 
smb_cpg_fun;;
 #use "taggregate_symbol_implementation_naming_item_value_v.ml";; 
ecs_s_l ;;
 #use "taggregate_symbol_implementation_naming_item_value_v.ml";; 
frm_itm;;
ctt_cpg_s;;
let smb_cli_l = Cpfdf_v.retrieve_function_name_function ctt_cpg_r;;
let val_cli_l = List.map Clv_v.make smb_cli_l;;
ecs_t;;
 #use "taggregate_symbol_implementation_naming_item_value_v.ml";; 
val_cli_l ;;
Cpfdf_v.entitycategorysuffix_tree_off_caml_paragraph_context ctt_cpg;;
 #use "taggregate_symbol_implementation_naming_item_value_v.ml";; 
Cpfdf_v.entitycategorysuffix_tree_off_caml_paragraph_context ctt_cpg;;
Cpfdf_v.entitycategorysuffix_tree_off_caml_paragraph_context ctt_cpg_r;;
let ecs_dt= Cpfdf_v.entitycategorysuffix_tree_off_caml_paragraph_context ctt_cpg;;
let ecs_dt= Cpfdf_v.entitycategorysuffix_tree_off_caml_paragraph_context ctt_cpg_r;;
let ecs_l = Tre_v.anyson_list_off_tree ecs_dt;;
 #use "taggregate_symbol_implementation_naming_item_value_v.ml";; 
ctt_cpg_s;;
smb_cli_l ;;
val_cli_l ;;
 #use "taggregate_symbol_implementation_naming_item_value_v.ml";; 
 ecs_t;;
 ecs_s_l ;;
 #use "taggregate_symbol_implementation_naming_item_value_v.ml";; 
 ecs_s_l ;;
let ecs_tri = Lst_v.trio_of_list ecs_as_l;;
let ecs_tri = List_v.trio_of_list ecs_as_l;;
 #use "taggregate_symbol_implementation_naming_item_value_v.ml";; 
let ecs_tri = List_v.trio_of_list ecs_as_l;;
 #use "taggregate_symbol_implementation_naming_item_value_v.ml";; 
ecs_as_l ;;
val_cli_l;;
 #use "taggregate_symbol_implementation_naming_item_value_v.ml";; 
smb_cli_l ;;
let val_itm = Itv_v.make kyl_itm;;
 ecs_as_l;;
 #use "taggregate_symbol_implementation_naming_item_value_v.ml";; 
let val_itm = Itv_v.make kyl_itm;;
#use "caml_line_value_v.ml";;
 make_doublet_name_s_a_b ecs_s ecs_a ecs_b;;
let val_cli_l = List.map Clv_v.make smb_cli_l;;
